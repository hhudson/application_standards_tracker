[{"STANDARD_ID":3,"TEST_NAME":"Use Anchored declarations","DISPLAY_SEQUENCE":310,"QUERY_CLOB":"with declrtns as (\r\n        select *\r\n            from v_user_identifiers\r\n            where type in ('FORMAL IN','FORMAL IN OUT', 'FORMAL OUT', 'CONSTANT')\r\n            and usage = 'DECLARATION'\r\n            and name not in ('GC_SCOPE_PREFIX', 'C_DEBUG_TEMPLATE', 'C_SCOPE', 'L_DEBUG_TEMPLATE', 'L_SCOPE')\r\n    ), \r\n    refrncs as (\r\n        select *\r\n            from v_user_identifiers\r\n            where type in ('COLUMN', 'BOOLEAN DATATYPE')\r\n            and usage = 'REFERENCE'\r\n    )\r\nselect \r\n\r\n'N' pass_yn,\r\nnull child_code,\r\nd.object_name, \r\nd.object_type, \r\nd.line, \r\napex_string.format('%0 (%1)', d.name, d.type) as code, \r\nd.name dec_name, \r\nd.type dec_type, \r\nr.name ref_name, \r\nr.type ref_type,\r\nto_char(d.signature) unqid\r\nfrom declrtns d\r\nleft join refrncs r on  d.line = r.line\r\n                     and d.object_name = r.object_name\r\n                     and d.object_type = r.object_type\r\nwhere 1=1\r\nand r.type is null","TEST_CODE":"ANCHORED_DECLARATION","ACTIVE_YN":"Y","LEVEL_ID":299712008894516449275252588212340289677,"MV_DEPENDENCY":null,"SVT_COMPONENT_TYPE_ID":13,"EXPLANATION":"Use anchored declarations for variables, constants & types where possible","FIX":"If possible, declare your variable in the style:\r\n\r\n`l_query_clob eba_stds_standard_tests.query_clob%type;`","VERSION_NUMBER":1,"WORKSPACE":"REDWOOD"}]    
