[{"STANDARD_ID":3,"TEST_ID":4780852357767957191935079719570259996,"LEVEL_ID":319367883342218894314577550181439009696,"URGENCY_LEVEL":20,"TEST_NAME":"Missing DBMS_ASSERT","TEST_CODE":"DBMS_ASSERT","STANDARD_NAME":"General","ACTIVE_YN":"Y","NT_NAME":"V_SVT_DB_PLSQL_NT","QUERY_CLOB":"with userprocs as (select owner, object_name, object_type, type, name proc_name, line start_line, LEAD(line, 1, 10000) OVER (partition by object_name ORDER BY line) end_line\r\n                    from v_user_identifiers\r\n                    where object_type = 'PACKAGE BODY'\r\n                    and usage_context_id = 1\r\n                    and type in ('FUNCTION', 'PROCEDURE')\r\n                    and object_name not like 'XXX%'\r\n                    ),\r\n     exec_imm as (select object_name, line ei_line, signature\r\n                    from v_user_statements\r\n                    where type = 'EXECUTE IMMEDIATE'\r\n                    and object_type = 'PACKAGE BODY'\r\n                 ),\r\n     dass as (select name object_name, line da_line, text\r\n                from v_user_source\r\n                where lower(text) like '%dbms_assert%'\r\n                and type = 'PACKAGE BODY')\r\nselect \r\n'N' pass_yn,\r\nu.object_name, \r\nu.object_type, \r\napex_string.format('%1.%0 should use dbms_assert to safely use `execute immediate`',u.proc_name, u.object_name) code, \r\nei.ei_line line, \r\nto_char(ei.signature) unqid,\r\nu.owner schema\r\nfrom userprocs u\r\ninner join exec_imm ei on ei.object_name = u.object_name\r\n                       and ei.ei_line between u.start_line and u.end_line\r\nleft join dass da on da.object_name = u.object_name\r\n                  and da.da_line between u.start_line and u.end_line\r\nwhere da.da_line is null","STD_UPDATED_DATE":"2023-10-03T14:21:11.715161Z","SRC_RECENT_CHANGE_YN":"Y","MV_DEPENDENCY":null,"SVT_COMPONENT_TYPE_ID":13,"COMPONENT_NAME":"DATABASE SUPPORTING OBJECT","EXPLANATION":"\"Execute Immediate\" should be validated with DBMS\\_ASSERT : Input must be sanitized","FIX":"Use dbms\\_assert. If all else fails, you can always useÂ `DBMS_ASSERT.NOOP`","VERSION_NUMBER":1.5,"DISPLAY_SEQUENCE":null,"ISSUE_CATEGORY":"DB_PLSQL","WORKSPACE":"REDWOOD"}]    
