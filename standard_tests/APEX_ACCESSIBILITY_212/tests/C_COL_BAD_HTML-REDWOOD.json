{"std_test":{"standard":{"standard_id":2,"standard_name":"Accessibility","description":"These are standards to maintain Accessibility.","compatibility_mode_id":1,"created":"2023-04-12T12:40:01.456000Z","created_by":"AST","updated":"2023-04-12T12:40:01.456000Z","updated_by":"AST"}},"test":[{"test_id":1653538454409308438567500881873603811,"test_name":"Classic Columns have wellformed HTML","standard_id":2,"display_sequence":620,"query_clob":"select case when eba_stds_parser.valid_html_yn(aaprc.heading) = 'N'\r\n            then 'N'\r\n            when eba_stds_parser.valid_html_yn(aaprc.column_link_text) = 'N'\r\n            then 'N'\r\n            when aaprc.html_expression is not null \r\n            then eba_stds_parser.valid_html_yn(aaprc.html_expression)\r\n            else 'Y'\r\n            end pass_yn,                          \r\n       aaprc.application_id, \r\n       aaprc.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aaprc.last_updated_by,\r\n       aaprc.last_updated_on,\r\n       apex_string.format('Classic Report Column `%0` (app %1, page %2) has malformed HTML [html exporession :`%3`, heading:`%4`, column_link_text: `%5`', \r\n        p0 => aaprc.heading, \r\n        p1 => aaprc.application_id,\r\n        p2 => aaprc.page_id,\r\n        p3 => aaprc.html_expression,\r\n        p4 => aaprc.heading,\r\n        p5 => aaprc.column_link_text) validation_failure_message,\r\n       apex_string.format('Classic Report Column `%0` (app %1, page %2) has malformed HTML', \r\n        p0 => aaprc.heading, \r\n        p1 => aaprc.application_id,\r\n        p2 => aaprc.page_id) issue_title,\r\n       aaprc.region_report_column_id component_id,\r\n       null parent_component_id,\r\n       aaprc.heading,\r\n       aaprc.column_is_hidden,\r\n       aaprc.column_alias,\r\n       aaprc.html_expression,\r\n       aaprc.workspace,\r\n       aaprc.column_link_text\r\nfrom apex_application_page_rpt_cols aaprc\r\ninner join apex_application_pages aap on aap.page_id = aaprc.page_id and aap.application_id = aaprc.application_id\r\nleft outer join apex_application_build_options aabo1 on aabo1.build_option_name = aap.build_option\r\n                                                     and aabo1.application_id = aap.application_id\r\nleft outer join apex_application_build_options aabo2 on aabo2.build_option_name = aaprc.build_option\r\n                                                     and aabo2.application_id = aaprc.application_id\r\nwhere aaprc.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\nand coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'","test_code":"C_COL_BAD_HTML","level_id":319367883342218894314577550181439009696,"mv_dependency":null,"svt_component_type_id":21,"explanation":"Checking for matching html pairs.Â This test is tied to the following WCAG Codes :\r\n\r\n1.  4.1.1(A) : Parsing : In content implemented using markup languages, elements have complete start and end tags, elements are nested according to their specifications, elements do not contain duplicate attributes, and any IDs are unique, except where the specifications allow these features.","fix":"Fix the HTML - make sure all open tags are closed","version_number":1.3,"version_db":"REDWOOD"}]}    
