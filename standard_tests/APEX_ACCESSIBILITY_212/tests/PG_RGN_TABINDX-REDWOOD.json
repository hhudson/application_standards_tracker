{"std_test":{"standard":{"standard_id":2,"standard_name":"Accessibility","description":"These are standards to maintain Accessibility.","compatibility_mode_id":1,"created":"2023-04-12T05:12:01.456000Z","created_by":"AST","updated":"2023-04-12T05:12:01.456000Z","updated_by":"AST"}},"test":[{"test_id":1020388336784240361780167940226990191,"test_name":"Page regions should avoid hardcoded tab indexes","standard_id":2,"display_sequence":440,"query_clob":"with aapr as (\r\n    select case\r\n         when (    lower(trim(attribute_22)) like '%tabindex%'\r\n                or lower(trim(attribute_20)) like '%tabindex%'\r\n                or lower(trim(attribute_09)) like '%tabindex%'\r\n                or lower(trim(attribute_21)) like '%tabindex%'\r\n                or lower(trim(attribute_03)) like '%tabindex%'\r\n                or lower(trim(attribute_11)) like '%tabindex%'\r\n                or lower(trim(ascending_image_attributes)) like '%tabindex%'\r\n                or lower(trim(descending_image_attributes)) like '%tabindex%'\r\n                or lower(trim(attribute_01)) like '%tabindex%'\r\n                or lower(trim(attribute_05)) like '%tabindex%'\r\n                or lower(trim(grid_column_attributes)) like '%tabindex%'\r\n                or lower(trim(attribute_13)) like '%tabindex%'\r\n                or lower(trim(attribute_06)) like '%tabindex%'\r\n                or lower(trim(attribute_25)) like '%tabindex%'\r\n                or lower(trim(attribute_24)) like '%tabindex%'\r\n                or lower(trim(html_table_cell_attributes)) like '%tabindex%'\r\n                or lower(trim(attribute_12)) like '%tabindex%'\r\n                or lower(trim(attribute_18)) like '%tabindex%'\r\n                or lower(trim(attribute_07)) like '%tabindex%'\r\n                or lower(trim(attribute_19)) like '%tabindex%'\r\n                or lower(trim(attribute_16)) like '%tabindex%'\r\n                or lower(trim(region_attributes_substitution)) like '%tabindex%'\r\n                or lower(trim(attribute_14)) like '%tabindex%'\r\n                or lower(trim(attribute_17)) like '%tabindex%'\r\n                or lower(trim(attribute_08)) like '%tabindex%'\r\n                or lower(trim(attribute_10)) like '%tabindex%'\r\n                or lower(trim(attribute_02)) like '%tabindex%'\r\n                or lower(trim(attribute_15)) like '%tabindex%'\r\n                or lower(trim(attribute_04)) like '%tabindex%'\r\n                or lower(trim(attribute_23)) like '%tabindex%' ) then 'N' \r\n         else 'Y'\r\n       end pass_yn,\r\n       page_id,\r\n       application_id,\r\n       region_attributes_substitution,\r\n       attribute_25,\r\n       attribute_24,\r\n       ascending_image_attributes,\r\n       descending_image_attributes,\r\n       html_table_cell_attributes,\r\n       attribute_01,\r\n       attribute_02,\r\n       attribute_03,\r\n       attribute_04,\r\n       attribute_05,\r\n       attribute_06,\r\n       attribute_07,\r\n       attribute_08,\r\n       attribute_09,\r\n       attribute_10,\r\n       attribute_11,\r\n       attribute_12,\r\n       attribute_13,\r\n       attribute_14,\r\n       attribute_15,\r\n       attribute_16,\r\n       attribute_17,\r\n       attribute_18,\r\n       attribute_19,\r\n       attribute_20,\r\n       attribute_21,\r\n       attribute_22,\r\n       attribute_23,\r\n       grid_column_attributes,\r\n       last_updated_by,\r\n       last_updated_on,\r\n       build_option,\r\n       source_type,\r\n       display_position,\r\n       template,\r\n       region_name,\r\n       region_id,\r\n\t     workspace\r\n  from apex_application_page_regions\r\n    )\r\nselect aapr.pass_yn,                          \r\n       aapr.application_id, \r\n       aapr.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aapr.last_updated_by,\r\n       aapr.last_updated_on,\r\n       apex_string.format('Region `%0` (app %1, page %2) has a hardcoded tab index', \r\n        p0 => aapr.region_name, \r\n        p1 => aapr.application_id,\r\n        p2 => aapr.page_id) validation_failure_message,\r\n       apex_string.format('Region `%0` (app %1, page %2) has a hardcoded tab index', \r\n        p0 => aapr.region_name, \r\n        p1 => aapr.application_id,\r\n        p2 => aapr.page_id) issue_title,\r\n       aapr.region_id component_id,\r\n       null parent_component_id,\r\n       aapr.region_name,\r\n       aapr.template,\r\n       aapr.display_position,\r\n       aapr.source_type,\r\n\t\t\t aapr.workspace\r\nfrom aapr\r\ninner join apex_application_pages aap on aap.page_id = aapr.page_id and aap.application_id = aapr.application_id\r\nleft outer join apex_application_build_options aabo1 on aabo1.build_option_name = aap.build_option\r\n                                                     and aabo1.application_id = aap.application_id\r\nleft outer join apex_application_build_options aabo2 on aabo2.build_option_name = aapr.build_option\r\n                                                     and aabo2.application_id = aapr.application_id\r\nwhere aapr.workspace = svt_preferences.get('SVT_WORKSPACE')\r\nand coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'","test_code":"PG_RGN_TABINDX","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":5,"explanation":"It is inadvisable to alter the default tabindex of elements on a page because it can cause the experience between the sighted and unsighted users to diverge.\r\n\r\nThis test is tied to the following WCAG Codes :\r\n\r\n1.  2.4.3(A) : Focus Order : If a Web page can be navigated sequentially and the navigation sequences affect meaning or operation, focusable components receive focus in an order that preserves meaning and operability.","fix":"Remove the hard-coded tabindex.","version_number":1.4,"version_db":"REDWOOD"}]}    
