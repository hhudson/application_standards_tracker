{"std_test":{"standard":{"standard_id":2,"standard_name":"Accessibility","description":"These are standards to maintain Accessibility.","compatibility_mode_id":1,"created":"2023-04-12T00:12:01.456000Z","created_by":"AST","updated":"2023-04-12T00:12:01.456000Z","updated_by":"AST"}},"test":[{"test_id":1042429073746940990345056008901275728,"test_name":"DA should avoid mouse events","standard_id":2,"display_sequence":560,"query_clob":"with aapd as (\r\n        select   case\r\n                 when when_event_name in ('Mouse Button Release','Mouse Button Press') then 'N' \r\n                 else 'Y'\r\n               end pass_yn,\r\n               application_id,\r\n               page_id,\r\n               dynamic_action_name,\r\n               dynamic_action_id,\r\n               last_updated_by,\r\n               last_updated_on,\r\n               build_option,\r\n               when_event_name,\r\n\t             workspace\r\n        from apex_application_page_da\r\n    )\r\nselect aapd.pass_yn,                          \r\n       aapd.application_id, \r\n       aapd.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aapd.last_updated_by,\r\n       aapd.last_updated_on,\r\n       apex_string.format('Dynamic Action `%0` (app %1, page %2) uses an inaccessible mouse event: `%3`', \r\n        p0 => aapd.dynamic_action_name, \r\n        p1 => aapd.application_id,\r\n        p2 => aapd.page_id,\r\n        p3 => aapd.when_event_name) validation_failure_message,\r\n       apex_string.format('Dynamic Action `%0` (app %1, page %2) uses an inaccessible mouse event', \r\n        p0 => aapd.dynamic_action_name, \r\n        p1 => aapd.application_id,\r\n        p2 => aapd.page_id) issue_title,\r\n       aapd.dynamic_action_id component_id,\r\n       null parent_component_id,\r\n       aapd.dynamic_action_name,\r\n       aapd.when_event_name,\r\n\t\t\t aapd.workspace\r\nfrom aapd\r\ninner join apex_application_pages aap on aap.page_id = aapd.page_id and aap.application_id = aapd.application_id\r\nleft outer join apex_application_build_options aabo1 on aabo1.build_option_name = aap.build_option\r\n                                                     and aabo1.application_id = aap.application_id\r\nleft outer join apex_application_build_options aabo2 on aabo2.build_option_name = aapd.build_option\r\n                                                     and aabo2.application_id = aapd.application_id\r\nwhere aapd.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\nand coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'","test_code":"ACC_DA_MOUSE_EVNT","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":43,"explanation":"Avoid using mousevents in Javascript as it can impact the accessibility of your page.\r\n\r\nThis test is tied to the following WCAG Codes :\r\n\r\n1.  2.5.2(A) : Pointer Cancellation:  \r\n    For functionality that can be operated using a single pointer, at least one of the following is true:\r\n    \r\n    No Down-Event  \r\n    The down-event of the pointer is not used to execute any part of the function;  \r\n    Abort or Undo  \r\n    Completion of the function is on the up-event, and a mechanism is available to abort the function before completion or to undo the function after completion;  \r\n    Up Reversal  \r\n    The up-event reverses any outcome of the preceding down-event;  \r\n    Essential  \r\n    Completing the function on the down-event is essential.","fix":"Remove the offending javascript.","version_number":1.4,"version_db":"REDWOOD"}]}    
