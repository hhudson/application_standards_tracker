[{"STANDARD_ID":2,"TEST_ID":1650133487909152014174608946469562880,"LEVEL_ID":319367883342220103240397164810613715872,"URGENCY_LEVEL":30,"TEST_NAME":"Static Content HTML is well formed","TEST_CODE":"STTC_CNTNT_BAD_HTML","STANDARD_NAME":"Accessibility","ACTIVE_YN":"Y","NT_NAME":"V_SVT_APEX__0_NT","QUERY_CLOB":"select eba_stds_parser.valid_html_yn(aapr.region_source) pass_yn,                         \r\n       aapr.application_id, \r\n       aapr.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aapr.last_updated_by,\r\n       aapr.last_updated_on,\r\n       apex_string.format('Region `%0` (app %1, page %2) has malformed HTML : `%3`', \r\n        p0 => aapr.region_name, \r\n        p1 => aapr.application_id,\r\n        p2 => aapr.page_id,\r\n        p3 => substr(aapr.region_source,1,50)) validation_failure_message,\r\n       apex_string.format('Region `%0` (app %1, page %2) has malformed HTML', \r\n        p0 => aapr.region_name, \r\n        p1 => aapr.application_id,\r\n        p2 => aapr.page_id) issue_title,\r\n       aapr.region_id component_id,\r\n       null parent_component_id,\r\n       aapr.region_name,\r\n       aapr.template,\r\n       aapr.display_position,\r\n       aapr.source_type,\r\n       aapr.component_template_options,\r\n       aapr.report_template,\r\n       aapr.region_source,\r\n\t\t\t aapr.workspace\r\nfrom apex_application_page_regions aapr\r\ninner join apex_application_pages aap on aap.page_id = aapr.page_id and aap.application_id = aapr.application_id\r\nleft outer join apex_application_build_options aabo1 on aabo1.build_option_name = aap.build_option\n                                                     and aabo1.application_id = aap.application_id\r\nleft outer join apex_application_build_options aabo2 on aabo2.build_option_name = aapr.build_option\n                                                     and aabo2.application_id = aapr.application_id\r\nwhere aapr.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\nand coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'\r\nand aapr.source_type = 'HTML/Text'\r\nand aapr.region_source is not null","STD_UPDATED_DATE":"2023-09-12T19:34:14.644434Z","SRC_RECENT_CHANGE_YN":"Y","MV_DEPENDENCY":null,"SVT_COMPONENT_TYPE_ID":5,"COMPONENT_NAME":"APEX_APPLICATION_PAGE_REGIONS","EXPLANATION":"Checking for matching HTML tags","FIX":"This test will raise errors for void elements without closing slashes (eg `<br/>` and `<img />` will pass but `<br>` `<img>` will not ) . Technically, the closing slash isÂ _optional_ on void elements but it may be simpler to just add the slash?","VERSION_NUMBER":1,"DISPLAY_SEQUENCE":640,"WORKSPACE":"REDWOOD"}]    
