[{"STANDARD_ID":2,"TEST_ID":950600241735283578826224625284082652,"LEVEL_ID":299712008894515240349432973583165583501,"URGENCY_LEVEL":40,"TEST_NAME":"Page JS should avoid intervals and timeouts","TEST_CODE":"PAGE_JS_INTRVL_TIMT","STANDARD_NAME":"Accessibility","ACTIVE_YN":"Y","NT_NAME":"V_SVT_APEX__0_NT","QUERY_CLOB":"with aap as (select case\r\n                    when ((lower(trim(JAVASCRIPT_CODE)) like '%setinterval%'\r\n                             or lower(trim(JAVASCRIPT_CODE)) like '%settimeout%'\r\n                             or lower(trim(JAVASCRIPT_CODE_ONLOAD)) like '%setinterval%'\r\n                             or lower(trim(JAVASCRIPT_CODE_ONLOAD)) like '%settimeout%')) \r\n                    then 'N' \r\n                    else 'Y'\r\n                    end pass_yn,\r\n                    application_id,\r\n                    page_id,\r\n                    build_option,\r\n                    page_mode,\r\n                    created_by,\r\n                    created_on,\r\n                    last_updated_by,\r\n                    last_updated_on,\r\n                    page_name,\r\n\t\t\t\t\t\t        workspace\r\n            from apex_application_pages a\r\n\r\n)\r\nselect aap.pass_yn,                          \r\n       aap.application_id, \r\n       aap.page_id,\r\n       aap.created_by,\r\n       aap.created_on,\r\n       aap.last_updated_by,\r\n       aap.last_updated_on,\r\n       apex_string.format('Page `%0` (app %1, page %2) has inaccessible JS', \r\n        p0 => aap.page_name, \r\n        p1 => aap.application_id,\r\n        p2 => aap.page_id) validation_failure_message,\r\n       apex_string.format('Page `%0` (app %1, page %2) has inaccessible JS', \r\n        p0 => aap.page_name, \r\n        p1 => aap.application_id,\r\n        p2 => aap.page_id) issue_title,\r\n       aap.page_id component_id,\r\n       null parent_component_id,\r\n       aap.page_name,\r\n       aap.page_mode,\r\n\t\t\t aap.workspace\r\nfrom aap\r\nleft outer join apex_application_build_options aabo2 on aabo2.build_option_name = aap.build_option\n                                                     and aabo2.application_id = aap.application_id\r\nwhere aap.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'","STD_UPDATED_DATE":"2023-10-09T22:22:07.341193Z","SRC_RECENT_CHANGE_YN":"Y","MV_DEPENDENCY":null,"SVT_COMPONENT_TYPE_ID":4,"COMPONENT_NAME":"APEX_APPLICATION_PAGES","EXPLANATION":"This test is tied to the following WCAG Codes : </br> <ol><li>2.2.2(A) : Pause, Stop, Hide:\r\nFor moving, blinking, scrolling, or auto-updating information, all of the following are true:\r\n\r\nMoving, blinking, scrolling\r\nFor any moving, blinking or scrolling information that (1) starts automatically, (2) lasts more than five seconds, and (3) is presented in parallel with other content, there is a mechanism for the user to pause, stop, or hide it unless the movement, blinking, or scrolling is part of an activity where it is essential; and\r\n\r\nAuto-updating\r\nFor any auto-updating information that (1) starts automatically and (2) is presented in parallel with other content, there is a mechanism for the user to pause, stop, or hide it or to control the frequency of the update unless the auto-updating is part of an activity where it is essential.</li><li>2.3.1(A) : Three Flashes or Below Threshold:\r\nWeb pages do not contain anything that flashes more than three times in any one second period, or the flash is below the general flash and red flash thr~</ol>","FIX":null,"VERSION_NUMBER":1.1,"VERSION_DB":"REDWOOD","DISPLAY_SEQUENCE":350,"ISSUE_CATEGORY":"APEX","AVG_EXECUTION_SECONDS":0.1191922,"WORKSPACE":"REDWOOD"}]    
