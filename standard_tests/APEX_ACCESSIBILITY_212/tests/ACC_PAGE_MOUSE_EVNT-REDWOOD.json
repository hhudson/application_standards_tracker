{
  "standard" :
  [
    {
      "standard_id" : 2,
      "standard_name" : "Accessibility",
      "description" : "These tests help support Accessibility standards. They are not substitutes for screen reader tests and other manual tests.",
      "compatibility_mode_id" : 1,
      "created" : "2023-04-12T10:12:01.456000Z",
      "created_by" : "AST",
      "updated" : "2023-04-12T10:12:01.456000Z",
      "updated_by" : "AST"
    }
  ],
  "test" :
  [
    {
      "test_id" : 1038150955245424010817824267893499373,
      "test_name" : "Page JS must avoid mouse events",
      "standard_id" : 2,
      "display_sequence" : null,
      "query_clob" : "with aap as (\r\n        select case\r\n                 when (lower(trim(javascript_code)) like '%mousedown%'\r\n                   or  lower(trim(javascript_code)) like '%mouseup%'\r\n                   or  lower(trim(javascript_code_onload)) like '%mousedown%'\r\n                   or  lower(trim(javascript_code_onload)) like '%mouseup%') then 'N' \r\n                 else 'Y'\r\n               end pass_yn,\r\n             application_id,\r\n             page_id,\r\n             created_by,\r\n             created_on,\r\n             last_updated_by,\r\n             last_updated_on,\r\n             build_option,\r\n             page_mode,\r\n             page_name,\r\n\t           javascript_code,\r\n\t           javascript_code_onload,\r\n\t           workspace\r\n        from apex_application_pages\r\n    )\r\nselect aap.pass_yn,                          \r\n       aap.application_id, \r\n       aap.page_id,\r\n       aap.created_by,\r\n       aap.created_on,\r\n       aap.last_updated_by,\r\n       aap.last_updated_on,\r\n       apex_string.format('Page `%0` (app %1, page %2) has inaccessible js', \r\n        p0 => aap.page_name, \r\n        p1 => aap.application_id,\r\n        p2 => aap.page_id) validation_failure_message,\r\n       apex_string.format('Page `%0` (app %1, page %2) has inaccessible js', \r\n        p0 => aap.page_name, \r\n        p1 => aap.application_id,\r\n        p2 => aap.page_id) issue_title,\r\n       aap.page_id component_id,\r\n       null parent_component_id,\r\n       aap.page_name,\r\n       aap.page_mode,\r\n\t\t\t aap.javascript_code,\r\n\t     aap.javascript_code_onload,\r\n\t\t\t aap.workspace\r\nfrom aap\r\nleft outer join apex_application_build_options aabo2 on aabo2.build_option_name = aap.build_option\r\n                                                     and aabo2.application_id = aap.application_id\r\nwhere aap.workspace = svt_preferences.get('SVT_WORKSPACE')\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'",
      "test_code" : "ACC_PAGE_MOUSE_EVNT",
      "level_id" : 319367883342220103240397164810613715872,
      "mv_dependency" : null,
      "svt_component_type_id" : 4,
      "explanation" : "Avoid affecting or using mouse events with Javascript as it can impact the accessibility of your page.\r\n\r\nThis test is tied to the following WCAG Codes :\r\n\r\n1.  2.5.2(A) : Pointer Cancellation:  \r\n    For functionality that can be operated using a single pointer, at least one of the following is true:\r\n    \r\n    No Down-Event  \r\n    The down-event of the pointer is not used to execute any part of the function;  \r\n    Abort or Undo  \r\n    Completion of the function is on the up-event, and a mechanism is available to abort the function before completion or to undo the function after completion;  \r\n    Up Reversal  \r\n    The up-event reverses any outcome of the preceding down-event;  \r\n    Essential  \r\n    Completing the function on the down-event is essential.",
      "fix" : "Remove the offending Javascript.",
      "version_number" : 1.4,
      "version_db" : "REDWOOD"
    }
  ]
}    
