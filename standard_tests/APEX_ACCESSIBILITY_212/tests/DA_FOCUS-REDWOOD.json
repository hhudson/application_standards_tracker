{
  "standard" :
  [
    {
      "standard_id" : 2,
      "standard_name" : "Accessibility",
      "description" : "These tests help support Accessibility standards. They are not substitutes for screen reader tests and other manual tests.",
      "compatibility_mode_id" : 1,
      "created" : "2023-04-12T10:12:01.456000Z",
      "created_by" : "AST",
      "updated" : "2023-04-12T10:12:01.456000Z",
      "updated_by" : "AST"
    }
  ],
  "test" :
  [
    {
      "test_id" : 935057335837729897971417132785008415,
      "test_name" : "DAs should avoid Lose Focus or Get Focus triggering events",
      "standard_id" : 2,
      "display_sequence" : null,
      "query_clob" : "with aapd as (select case\r\n                     when WHEN_EVENT_NAME in ('Lose Focus','Get Focus') then 'N' \r\n                     else 'Y'\r\n                     end pass_yn,\r\n                     application_id,\r\n                     page_id,\r\n                     dynamic_action_id,\r\n                     dynamic_action_name,\r\n                     last_updated_by,\r\n                     last_updated_on,\r\n                     build_option,\r\n\t\t\t\t\t\t\t       workspace\r\n            from apex_application_page_da\r\n )\r\n select aapd.pass_yn,                          \r\n       aapd.application_id, \r\n       aapd.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aapd.last_updated_by,\r\n       aapd.last_updated_on,\r\n       apex_string.format('Dynamic Action `%0` (app %1, page %2) uses a get/lose focus dynamic action. This should be avoided for accessibility.', \r\n        p0 => aapd.dynamic_action_name, \r\n        p1 => aapd.application_id,\r\n        p2 => aapd.page_id) validation_failure_message,\r\n       apex_string.format('Dynamic Action `%0` (app %1, page %2) uses a get/lose focus dynamic action', \r\n        p0 => aapd.dynamic_action_name, \r\n        p1 => aapd.application_id,\r\n        p2 => aapd.page_id) issue_title,\r\n       aapd.dynamic_action_id component_id,\r\n       null parent_component_id,\r\n       aapd.dynamic_action_name,\r\n\t\t\t aapd.workspace\r\nfrom aapd\r\ninner join apex_application_pages aap on aap.page_id = aapd.page_id and aap.application_id = aapd.application_id\r\nleft outer join apex_application_build_options aabo1 on aabo1.build_option_name = aap.build_option\r\n                                                     and aabo1.application_id = aap.application_id\r\nleft outer join apex_application_build_options aabo2 on aabo2.build_option_name = aapd.build_option\r\n                                                     and aabo2.application_id = aapd.application_id\r\nwhere aapd.workspace = svt_preferences.get('SVT_WORKSPACE')\r\nand coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'",
      "test_code" : "DA_FOCUS",
      "level_id" : 299712008894515240349432973583165583501,
      "mv_dependency" : null,
      "svt_component_type_id" : 43,
      "explanation" : "Avoid working with focus events in Javascript as it can impact the accessibility of your page.\r\n\r\nThis test is tied to the following WCAG Codes :\r\n\r\n1.  2.1.2(A) : No Keyboard Trap:  \r\n    If keyboard focus can be moved to a component of the page using a keyboard interface, then focus can be moved away from that component using only a keyboard interface, and, if it requires more than unmodified arrow or tab keys or other standard exit methods, the user is advised of the method for moving focus away.",
      "fix" : "Remove the offending Javascript.",
      "version_number" : 1.4,
      "version_db" : "REDWOOD"
    }
  ]
}    
