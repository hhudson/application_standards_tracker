[{"STANDARD_ID":335371825641905585121080132445374054310,"TEST_NAME":"Each AST page should have a reasonable page title","DISPLAY_SEQUENCE":150,"QUERY_CLOB":"with std as (select case when instr(aap.page_title, aa.application_name) > 0 \r\n                         then 'Y'\r\n                         else case when instr(lower(aap.page_title), 'app') > 0 --checking for possible app_title substitution string\r\n                                   then 'Y'\r\n                                   else 'N'\r\n                                   end\r\n                         end pass_yn,\r\n                    aap.application_id, \r\n                    aap.page_id, \r\n                    aap.page_name, \r\n                    aap.page_title, \r\n                    aa.application_name, \r\n                    aa.alias,\r\n                    aap.created_by,\r\n                    aap.created_on,\r\n                    aap.last_updated_by,\r\n                    aap.last_updated_on,\r\n\t\t\t\t\t\t        aap.workspace\r\n            from apex_application_pages aap \r\n            inner join apex_applications aa on aap.application_id = aa.application_id\r\n\t\t\t\t\t\tleft outer join apex_application_build_options abo on abo.application_id = aap.application_id \r\n                                                               and abo.build_option_name = aap.build_option\r\n    \t\t\t\twhere coalesce(abo.status_on_export,'NA') != 'Exclude'\r\n            and aap.page_mode = 'Normal'\r\n)\r\nselect  std.pass_yn,\r\n        std.application_id, \r\n        std.page_id, \r\n        std.page_name, \r\n        std.page_title, \r\n        std.application_name, \r\n        std.alias,\r\n        std.created_by,\r\n        std.created_on,\r\n        std.last_updated_by,\r\n        std.last_updated_on,\r\n        case when std.pass_yn = 'N'\r\n             then apex_string.format('Page Title `%0` (page %1, app %2) should include &APPLICATION_TITLE.',\r\n                            p0 => std.page_title,\r\n                            p1 => std.page_id,\r\n                            p2 => std.application_id,\r\n                            p3 => std.application_name\r\n                          ) \r\n             end validation_failure_message,\r\n        case when std.pass_yn = 'N'\r\n             then apex_string.format('Page Title `%0` (page %1, app %2) is missing the application name',\r\n                            p0 => std.page_title,\r\n                            p1 => std.page_id,\r\n                            p2 => std.application_id\r\n                          )  \r\n             end issue_title,\r\n\t\t\t\tstd.page_id component_id,\r\n        null parent_component_id,\r\n\t\t\t\tstd.workspace\r\nfrom std\r\nwhere page_id not in  (0)\r\nand application_id = 17000033","TEST_CODE":"PAGE_TITLE","ACTIVE_YN":"Y","LEVEL_ID":299712008894515240349432973583165583501,"MV_DEPENDENCY":null,"SVT_COMPONENT_TYPE_ID":4,"EXPLANATION":"For full pages (or non modal dialog pages), the page title should also include the name of the application.","FIX":"Suggest to create a new application item such as APP-NAME-TITLE that will be used across all pages.\r\n\r\nFor a detail page on a given component, the name of the widget should be used in the title. For example, when viewing an employee profile screen, the page title should be something like \"My App - Jane Doe's Profile\". Page Aliases are case insensitive. Use web-safe characters, and dashes to separate words (not underscores). For example:project-details (not project\\_details) org-chart (not org\\_chart)","VERSION_NUMBER":1,"WORKSPACE":"REDWOOD"}]