[{"STANDARD_ID":7837857267161810704439141202380776768,"TEST_ID":7948072800402596473603882098144601653,"LEVEL_ID":319367883342220103240397164810613715872,"URGENCY_LEVEL":30,"TEST_NAME":"Materialized Views should be named correctly","TEST_CODE":"ALPH_MV_NAME","STANDARD_NAME":"DB Alphawave Object (19C)","ACTIVE_YN":"Y","NT_NAME":"V_SVT_DB_MV__0_NT","QUERY_CLOB":"select 'N' pass_yn, \r\n       ao.object_name mv_name, \r\n       apex_string.format('Materialized View `%0` should be suffixed with `_MV`',\r\n                          p0 => ao.object_name) code,\r\n       ao.object_id unqid --row-level unique id \r\nfrom v_user_objects ao\r\nwhere ao.object_type = 'MATERIALIZED VIEW'\r\nand ao.object_name not like '%_MV'","MV_DEPENDENCY":null,"SVT_COMPONENT_TYPE_ID":361,"COMPONENT_NAME":"DATABASE MATERIALIZED VIEW","EXPLANATION":null,"FIX":null,"VERSION_NUMBER":1,"LIB_MD5":"4VV39RSL7Cx8Bhg5_9MiDNR8QCOJlKgbXzoZF0_qsdP-d2G_gikv-322SWREaqbXNHI2n39XuMNqgFfCG1TvuA","LIB_IMPORTED_VERSION":1,"PUBLISHED_YN":"Y","DOWNLOAD_CSS":"show t-Button t-Button--icon t-Button--simple","INHERITED_YN":"N","CALLING_STANDARD_NAME":"DB Alphawave Object (19C)"},{"STANDARD_ID":7837857267161810704439141202380776768,"TEST_ID":7815139285722760313678955543995360374,"LEVEL_ID":319367883342220103240397164810613715872,"URGENCY_LEVEL":30,"TEST_NAME":"Tables should have audit columns","TEST_CODE":"TBL_AUDIT_COLS","STANDARD_NAME":"DB Alphawave Object (19C)","ACTIVE_YN":"Y","NT_NAME":"V_SVT_DB_TBL__0_NT","QUERY_CLOB":"select case when utc.col_count is null\r\n            then 'N' \r\n            when utc.col_count < 4\r\n            then 'N' \r\n            else 'Y'\r\n            end pass_yn,\r\n       ao.object_name table_name,\r\n       ao.object_id unqid,\r\n       apex_string.format('Table `%0` is missing audit columns (`CREATED,CREATED_BY,UPDATED,UPDATED_BY`)', \r\n        p0 => ao.object_name) code,\r\n       ao.object_id,\r\n       coalesce(utc.col_count,0) col_count\r\nfrom v_user_objects ao\r\nleft outer join (select table_name, count(*) col_count\r\n                 from v_user_tab_cols\r\n                 where column_name in ('CREATED','CREATED_BY','UPDATED','UPDATED_BY')\r\n                 group by table_name\r\n                 ) utc on utc.table_name = ao.object_name\r\nwhere ao.object_type = 'TABLE'","MV_DEPENDENCY":null,"SVT_COMPONENT_TYPE_ID":102,"COMPONENT_NAME":"DATABASE TABLE","EXPLANATION":"The following standard columns must be defined on application tables (exceptions to be agreed), and represent what we would typically refer to as \"audit\" columns. These should be maintained by a trigger.\r\n\r\n*   CREATED\\_BY VARCHAR2(255 CHAR)\r\n*   CREATED\\_ON DATE\r\n*   UPDATED\\_BY VARCHAR2(255 CHAR)\r\n*   UPDATED\\_ONDATE","FIX":"Add the requisite audit columns","VERSION_NUMBER":1,"LIB_MD5":"pBR-jHqD8wthvvgaU4V8N9Kh74gx5W1sSeFObutyYF-w78LE1fNOxPE0oQbQY9dsMGqd9KrvdA5P2pZfi5EHKg","LIB_IMPORTED_VERSION":1,"PUBLISHED_YN":"Y","DOWNLOAD_CSS":"show t-Button t-Button--icon t-Button--simple","INHERITED_YN":"N","CALLING_STANDARD_NAME":"DB Alphawave Object (19C)"},{"STANDARD_ID":7837857267161810704439141202380776768,"TEST_ID":4779284014741884428720953814549838654,"LEVEL_ID":299712008894515240349432973583165583501,"URGENCY_LEVEL":40,"TEST_NAME":"Naming Convention violation","TEST_CODE":"IDENTIFIER_NAMING","STANDARD_NAME":"DB Object (19C)","ACTIVE_YN":"Y","NT_NAME":"V_SVT_DB_PLSQL_NT","QUERY_CLOB":"with var_assgn as (select signature, max(line) last_line\r\n                    from v_user_identifiers ui\r\n                    where ui.type = 'VARIABLE'\r\n                    and ui.usage = 'ASSIGNMENT'\r\n                    group by signature),\r\n     cur_ref_count\r\n            as (select signature, count(*) refcount\r\n                  from v_user_identifiers\r\n                  where usage = 'REFERENCE'\r\n                  and type = 'CONSTANT'\r\n                  group by signature),\r\n     ccode \r\n            as (select\r\n                case when ui.type = 'CONSTANT' \r\n                        then case when ui.object_type = 'PACKAGE'\r\n                                  then case when (ui.name not like 'GC_%') \r\n                                            then 'SPEC_CONSTANT'\r\n                                            end\r\n                                  when ui.object_type = 'PACKAGE BODY' \r\n                                    then case when ui.usage_context_id  = 1\r\n                                              then case when ui.name not like 'GC_%'\r\n                                                        then 'GLOBAL_CONSTANT'\r\n                                                        else case when crc.refcount < 2\r\n                                                                  then case when ui.name not in ('GC_SCOPE_PREFIX', 'GC_N', 'GC_Y')\r\n                                                                            then 'LOCAL_GLOBAL_CONSTANT'\r\n                                                                            end\r\n                                                                  end \r\n                                                        end\r\n                                              else case when  (ui.name not like 'C_%')\r\n                                                        then 'LOCAL_CONSTANT'\r\n                                                        end\r\n                                              end\r\n                                 end\r\n                     when ui.type = 'VARIABLE'\r\n                     then case when ui.object_type = 'PACKAGE'\r\n                               then 'SPEC_VARIABLE'\r\n                               when ui.object_type = 'PACKAGE BODY'\r\n                               then case when ui.line = va.last_line\r\n                                         then 'CONSTANT_VARIABLE'\r\n                                         end\r\n                               end\r\n                     when ui.type in ('CURSOR','REFCURSOR') \r\n                     then case when ui.name not like 'CUR_%'\r\n                               then 'CURSOR'\r\n                               end \r\n                     when ui.type in ('INDEX TABLE', 'NESTED TABLE', 'ASSOCIATIVE ARRAY') \r\n                     then case when ui.name not like 'T_%'\r\n                               then 'TABLE_TYPE'\r\n                               end\r\n                     when ui.type in ('FORMAL IN','FORMAL OUT', 'FORMAL IN OUT') \r\n                     then case when ui.name not like 'P_%'\r\n                               then 'PROC_PARAM'\r\n                               end\r\n                     when ui.type = 'RECORD'\r\n                     then case when ui.name not like 'R_%'\r\n                               then 'RECORD_TYPE'\r\n                               end \r\n                     when ui.type in ('BLOB DATATYPE','BOOLEAN DATATYPE','CHARACTER DATATYPE','CLOB DATATYPE','DATE DATATYPE','NUMBER DATATYPE', 'SUBTYPE','TIMESTAMP DATATYPE')\r\n                     then case when ui.name not like 'TY_%'\r\n                               then 'DATATYPE'\r\n                               end\r\n                     when ui.type = 'EXCEPTION'\r\n                     then case when ui.name not like 'E_%'\r\n                               then 'EXCEPTION'\r\n                               end\r\n                     end as child_code,\r\n                null src_id, \r\n                ui.object_name, \r\n                ui.name code, \r\n                ui.object_type, \r\n                ui.line,\r\n                to_char(ui.signature) unqid\r\n                from v_user_identifiers ui\r\n                left join var_assgn va on ui.signature = va.signature\r\n                left join cur_ref_count crc on ui.signature = crc.signature\r\n                where ui.usage = 'DECLARATION'\r\n                and ui.implicit = 'NO'\r\n                and ui.object_name not like 'XXX%')\r\nselect \r\ncase when child_code is null\r\n    then 'Y'\r\n    else 'N'\r\n    end pass_yn,\r\nobject_name,\r\napex_string.format('%0 %1 in `%2` %3, line %4',\r\n                    p0 => code,\r\n                    p1 => case child_code \r\n                          when 'CONSTANT_VARIABLE'\r\n                          then 'must be a constant (it is currently a variable)'\r\n                          when 'CURSOR'\r\n                          then 'must begin with cur_ (it is a cursor)'\r\n                          when 'DATATYPE'\r\n                          then 'must begin with ty_ (it is a datatype)'\r\n                          when 'EXCEPTION'\r\n                          then 'must begin with e_ (it is an Exception)'\r\n                          when 'GLOBAL_CONSTANT'\r\n                          then 'must begin with gc_ (it is a package body global constant)'\r\n                          when 'LOCAL_CONSTANT'\r\n                          then 'must begin with c_ (it is a package body local constant) '\r\n                          when 'LOCAL_GLOBAL_CONSTANT'\r\n                          then 'should be a local constant (it is currently a global constant)'\r\n                          when 'PROC_PARAM'\r\n                          then 'must begin with p_ (it is a procedure parameter)'\r\n                          when 'RECORD_TYPE'\r\n                          then 'must begin with r_ (it is a Record type)'\r\n                          when 'SPEC_CONSTANT'\r\n                          then 'must begin with gc_ (it is a package spec constant)'\r\n                          when 'SPEC_VARIABLE'\r\n                          then 'should be moved to the package body'\r\n                          when 'TABLE_TYPE'\r\n                          then 'must being with t_ (it is a Table type)'\r\n                          end,\r\n\t\t\t\t\t\t\t\t\t p2 => object_name,\r\n\t\t\t\t\t\t\t\t\t p3 => object_type,\r\n\t\t\t\t\t\t\t\t\t p4 => line\r\n) code,\r\nobject_type,\r\nline,\r\nunqid\r\nfrom ccode\r\nwhere child_code is not null","MV_DEPENDENCY":null,"SVT_COMPONENT_TYPE_ID":13,"COMPONENT_NAME":"DATABASE SUPPORTING OBJECT","EXPLANATION":"*   CONSTANT\\_VARIABLE : This variable should be a constant\r\n*   CURSOR : Cursor names must begin with cur\\_\r\n*   DATATYPE : Datatypes must begin with ty\\_\r\n*   EXCEPTION : Exceptions must begin with e\\_\r\n*   GLOBAL\\_CONSTANT : Package body global constants must begin with gc\\_\r\n*   LOCAL\\_CONSTANT : Package body local constants must begin with c\\_\r\n*   LOCAL\\_GLOBAL\\_CONSTANT : This global constant should be a local constant\r\n*   PROC\\_PARAM : Procedure parameters must begin with p\\_\r\n*   RECORD\\_TYPE : Record types must begin with r\\_\r\n*   SPEC\\_CONSTANT : Package spec constants must begin with gc\\_\r\n*   SPEC\\_VARIABLE : Variables in the package spec are discouraged\r\n*   TABLE\\_TYPE : Table types must begin with t\\_","FIX":"*   CONSTANT\\_VARIABLE : Make the variable a constant\r\n*   CURSOR : Fix the name\r\n*   DATATYPE : Fix the name\r\n*   EXCEPTION : Fix the name\r\n*   GLOBAL\\_CONSTANT : Fix the name\r\n*   LOCAL\\_CONSTANT : Fix the name\r\n*   LOCAL\\_GLOBAL\\_CONSTANT : Make it a local constant\r\n*   PROC\\_PARAM : Fix the name\r\n*   RECORD\\_TYPE : Fix the name\r\n*   SPEC\\_CONSTANT : Fix the name\r\n*   SPEC\\_VARIABLE : Remove the variable from the package spec\r\n*   TABLE\\_TYPE : Fix the name","VERSION_NUMBER":1.3,"LIB_MD5":"fPrIkGGpPlsSJimxSX2gU3ymMs20RouAnRV-8gUCnrWfgLEEP5Ed1FnAMlK1kEJoY2oQ30d9Hx_umvMI13TRTg","LIB_IMPORTED_VERSION":1.3,"PUBLISHED_YN":"Y","DOWNLOAD_CSS":"show t-Button t-Button--icon t-Button--simple","INHERITED_YN":"Y","CALLING_STANDARD_NAME":"DB Alphawave Object (19C)"}]    
