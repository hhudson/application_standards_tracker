{
  "standard" :
  [
    {
      "standard_id" : 4,
      "standard_name" : "Broken Functionality",
      "description" : "These tests identify functionality that appears unintentional and could cause problems.",
      "compatibility_mode_id" : 1,
      "created" : "2023-04-12T06:40:01.534000Z",
      "created_by" : "AST",
      "updated" : "2023-04-12T06:40:01.534000Z",
      "updated_by" : "AST"
    }
  ],
  "test" :
  [
    {
      "test_id" : 339963198100347684343554906744726799629,
      "test_name" : "IR Column Link Authorization Matches Destination ",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select case when coalesce(spu.element_authorization, 'N/A') =  coalesce (aap.authorization_scheme, 'N/A')\r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       spu.application_id, \r\n       spu.page_id, \r\n       null created_by,\r\n       null created_on,\r\n       spu.last_updated_by,\r\n       spu.last_updated_on,\r\n       apex_string.format('The authorization scheme (%3) on column `%0` (report `%6`, page %1, app %2) does not match the destination (page %4, authorization `%5`)',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id,\r\n                          p3 => coalesce(spu.element_authorization,'null'),\r\n                          p4 => spu.destination_page_id,\r\n                          p5 => coalesce(aap.authorization_scheme,'null'),\r\n                          p6 => spu.parent_element_name\r\n                          ) validation_failure_message,\r\n        apex_string.format('The authorization scheme on column `%0` (report `%6`, page %1, app %2) does not match the destination',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id,\r\n                          p6 => spu.parent_element_name\r\n                          ) issue_title,\r\n       spu.page_authorization, \r\n       spu.url_type, \r\n       spu.element_label, \r\n       spu.element_name, \r\n       spu.parent_element_name, \r\n       spu.destination_app_id, \r\n       spu.destination_page_id, \r\n       aap.authorization_scheme dest_author_schema, \r\n       spu.element_authorization,\r\n\t\t\t spu.element_id component_id,\r\n\t\t\t spu.parent_element_id parent_component_id,\r\n\t\t\t aap.workspace\r\n from mv_svt_ir_cols spu\r\n inner join apex_application_pages aap on spu.destination_app_id = aap.application_id\r\n                                       and spu.destination_page_id = aap.page_id\r\n left outer join apex_application_build_options aabo1 on  aabo1.build_option_name = aap.build_option\r\n                                                      and aabo1.application_id = aap.application_id\r\n\r\n where spu.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n and coalesce(aabo1.status_on_export,'NA') != 'Exclude'",
      "test_code" : "IR_COL_AUTHR_MATCH_DEST",
      "level_id" : 319367883342218894314577550181439009696,
      "mv_dependency" : "MV_SVT_IR_COLS",
      "svt_component_type_id" : 6,
      "explanation" : "The authorization scheme of a column link should match that of its destination",
      "fix" : "Add the requisite authorization scheme to the column",
      "version_number" : 1.1,
      "version_db" : "REDWOOD"
    },
    {
      "test_id" : 336818680265525894770181403027878241613,
      "test_name" : "Button display positions should not be legacy or deprecated",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select case when svt_apex_view.display_position_is_violation (\r\n                p_display_position_code => aapb.display_position_code,\r\n                p_template_id           => apr.template_id,\r\n                p_application_id        => aapb.application_id) = 'Y'\r\n\t\t\t\t\t\tthen 'N'\r\n\t\t\t\t\t\telse 'Y'\r\n\t\t\t\t\t\tend pass_yn, \r\n       aapb.application_id, \r\n       aapb.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aapb.last_updated_by,\r\n       aapb.last_updated_on,\r\n       apex_string.format('Button `%0` (page %1, app %2) is in an invalid (legacy or deprecated) display position (`%3`)',\r\n              p0 => aapb.button_name,\r\n              p1 => aapb.page_id,\r\n              p2 => aapb.application_id,\r\n              p3 => aapb.display_position_code\r\n            ) validation_failure_message,\r\n       apex_string.format('Button `%0` in legacy / deprecated position (page %1, app %2)',\r\n              p0 => aapb.button_name,\r\n              p1 => aapb.page_id,\r\n              p2 => aapb.application_id\r\n            ) issue_title,\r\n       aapb.button_id component_id, \r\n       null parent_component_id,\r\n       aapb.display_position,\r\n       aapb.display_position_code,\r\n       apr.template_id,\r\n       aapb.button_name,\r\n\t\t\t aapb.workspace\r\nfrom apex_application_page_buttons aapb\r\ninner join apex_application_page_regions apr on aapb.region_id = apr.region_id\r\n                                             and aapb.application_id = apr.application_id\r\n                                             and aapb.page_id = apr.page_id\r\ninner join apex_application_pages aap on aap.page_id = aapb.page_id and aap.application_id = aapb.application_id\r\nleft outer join apex_application_build_options aabo1 on aabo1.build_option_name = aap.build_option\r\n                                                     and aabo1.application_id = aap.application_id\r\nleft outer join apex_application_build_options aabo2 on aabo2.build_option_name = aapb.build_option\r\n                                                     and aabo2.application_id = aapb.application_id\r\nwhere aapb.workspace = svt_preferences.get('SVT_WORKSPACE')\r\nand coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'",
      "test_code" : "BUTTON_DEPRECTD_OR_LEGCY",
      "level_id" : 319367883342218894314577550181439009696,
      "mv_dependency" : null,
      "svt_component_type_id" : 8,
      "explanation" : "Buttons should not be placed in display positions are deprecated or legacy",
      "fix" : "Correct the button display position",
      "version_number" : 1.2,
      "version_db" : "REDWOOD"
    },
    {
      "test_id" : 334002499923001844397092917496860923964,
      "test_name" : "Navigation List Entry Authorization Matches Destination",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select case when coalesce(spu.element_authorization, 'N/A') =  coalesce (aap.authorization_scheme, 'N/A')\r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       spu.application_id, \r\n       null page_id, \r\n       null created_by,\r\n       null created_on,\r\n       spu.last_updated_by,\r\n       spu.last_updated_on,\r\n       apex_string.format('The authorization scheme (%3) on the Navigation List Entry `%0` (app %2) does not match the destination (page %4, authorization `%5`)',\r\n                          p0 => spu.element_label,\r\n                          p2 => spu.application_id,\r\n                          p3 => coalesce(spu.element_authorization,'null'),\r\n                          p4 => spu.destination_page_id,\r\n                          p5 => coalesce(aap.authorization_scheme,'null'),\r\n                          p6 => spu.parent_element_name\r\n                          ) validation_failure_message,\r\n        apex_string.format('The authorization scheme on the Navigation List Entry `%0` (app %2) does not match the destination',\r\n                          p0 => spu.element_label,\r\n                          p2 => spu.application_id,\r\n                          p6 => spu.parent_element_name\r\n                          ) issue_title,\r\n       spu.url_type, \r\n       spu.element_label, \r\n       spu.element_name, \r\n       spu.parent_element_name, \r\n       spu.destination_app_id, \r\n       spu.destination_page_id, \r\n       aap.authorization_scheme dest_author_schema, \r\n       spu.element_authorization,\r\n\t\t\t spu.element_id component_id, \r\n\t\t\t spu.parent_element_id parent_component_id,\r\n\t\t\t spu.workspace\r\n from mv_svt_list_entries spu\r\n inner join apex_application_pages aap on spu.destination_app_id = aap.application_id\r\n                                       and spu.destination_page_id = aap.page_id\r\n left outer join apex_application_build_options aabo1 on  aabo1.build_option_name = aap.build_option\r\n                                                     and aabo1.application_id = aap.application_id\r\n\r\n where spu.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n and coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\n and spu.url_type = 'LIST_ENTRY'",
      "test_code" : "NLE_AUTHR_MATCH_DEST",
      "level_id" : 319367883342220103240397164810613715872,
      "mv_dependency" : "MV_SVT_LIST_ENTRIES",
      "svt_component_type_id" : 2,
      "explanation" : "The authorization scheme of a Navigation List Entry should match that of its destination",
      "fix" : "Add the requisite authorization scheme to the Navigation List Entry",
      "version_number" : 1.1,
      "version_db" : "REDWOOD"
    },
    {
      "test_id" : 333995314653470973341262544697968313860,
      "test_name" : "Button Authorization Matches Destination",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select case when coalesce(spu.element_authorization, 'N/A') =  coalesce (aap.authorization_scheme, 'N/A')\r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       spu.application_id, \r\n       spu.page_id, \r\n\t\t\t null created_on,\r\n\t\t\t null created_by,\r\n       spu.last_updated_by,\r\n       spu.last_updated_on,\r\n       apex_string.format('The authorization scheme (%3) on button `%0` (page %1, app %2) does not match the destination (page %4, authorization `%5`)',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id,\r\n                          p3 => coalesce(spu.element_authorization,'null'),\r\n                          p4 => spu.destination_page_id,\r\n                          p5 => coalesce(aap.authorization_scheme,'null')\r\n                          ) validation_failure_message,\r\n       apex_string.format('The authorization scheme on button `%0` does not match the destination (page %1, app %2, button id %3)',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tp3 => spu.element_id\r\n                          ) issue_title,\r\n       spu.page_authorization, \r\n       spu.url_type, \r\n       spu.element_label, \r\n       spu.element_name, \r\n       spu.parent_element_name, \r\n       spu.destination_app_id, \r\n       spu.destination_page_id, \r\n       aap.authorization_scheme dest_author_schema, \r\n       spu.element_authorization,\r\n\t\t\t spu.element_id component_id,\r\n\t\t\t spu.parent_element_id parent_component_id,\r\n\t\t\t aap.workspace\r\n from mv_svt_buttons spu\r\n inner join apex_application_pages aap on spu.destination_app_id = aap.application_id\r\n                                       and spu.destination_page_id = aap.page_id\r\n where spu.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n and url_type = 'BUTTON_URL'\r\n and spu.destination_app_id = spu.application_id\r\n and spu.destination_page_id != spu.page_id",
      "test_code" : "BUTTON_AUTHR_MATCH_DEST",
      "level_id" : 319367883342218894314577550181439009696,
      "mv_dependency" : "MV_SVT_BUTTONS",
      "svt_component_type_id" : 8,
      "explanation" : "The authorization scheme of a button should match that of its destination",
      "fix" : "Add the requisite authorization scheme to the button",
      "version_number" : 1.2,
      "version_db" : "REDWOOD"
    },
    {
      "test_id" : 294591489438560344494721046159842530021,
      "test_name" : "Public pages should not require authentication",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select a60.pass_yn, \r\n       a60.application_id,\r\n       a60.page_id, \r\n       a60.page_name, \r\n       a60.page_access_protection, \r\n       a60.page_mode,\r\n       a60.page_requires_authentication,\r\n       a60.build_option,\r\n       a60.build_option_status,\r\n       a60.authorization_scheme,\r\n       a60.last_updated_by, \r\n       a60.last_updated_on, \r\n       a60.created_by, \r\n       a60.created_on,\r\n       case when a60.pass_yn = 'N'\r\n            then apex_string.format(p_message => \r\n            q'^Public pages should not have authorization scheme. This page has authorization scheme: %5^',\r\n            p0 => a60.page_access_protection, \r\n            p1 => a60.page_mode,\r\n            p2 => a60.page_requires_authentication,\r\n            p3 => a60.build_option,\r\n            p4 => a60.build_option_status,\r\n            p5 => a60.authorization_scheme,\r\n            p6 => a60.last_updated_by, \r\n            p7 => a60.last_updated_on, \r\n            p8 => a60.created_by, \r\n            p9 => a60.created_on\r\n            )\r\n            end as validation_failure_message,\r\n       case when a60.pass_yn = 'N'\r\n            then apex_string.format(p_message => \r\n            q'^Remove authorization scheme from public page %0 (app %1)^',\r\n            p0 => a60.page_id, \r\n            p1 => a60.application_id\r\n            )\r\n            end as issue_title,\r\n\t\t\t a60.page_id component_id,\r\n\t\t\t null parent_component_id,\r\n\t\t\t a60.workspace\r\nfrom (\r\n     select \r\n     case when aap.page_requires_authentication = 'No'\r\n          then case when aap.authorization_scheme is null\r\n                    then 'Y'\r\n                    else case when aap.authorization_scheme = 'APPLICATION SENTRY'\r\n                              then 'Y'\r\n                              else 'N'\r\n                              end\r\n                    end\r\n          else 'Y'\r\n          end as pass_yn, \r\n     aap.application_id,\r\n     aap.page_id, \r\n     aap.page_name, \r\n     aap.page_access_protection, \r\n     aap.page_mode,\r\n     aap.page_requires_authentication,\r\n     aap.build_option,\r\n     bo.build_option_status,\r\n\t   bo.status_on_export,\r\n     aap.authorization_scheme,\r\n     aap.created_by created_by, \r\n     aap.created_on created_on,\r\n     aap.last_updated_by, \r\n     aap.last_updated_on,\r\n\t   aap.workspace\r\n     from apex_application_pages aap\r\n     inner join v_svt_apex_applications aa on aap.application_id = aa.application_id\r\n                                     and aa.availability_status != 'Unavailable'\r\n     left join apex_application_build_options bo on aap.application_id = bo.application_id\r\n                                                 and aap.build_option = bo.build_option_name\r\n     where aap.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n\t   and (bo.status_on_export != 'Exclude' or bo.build_option_status is null)\r\n) a60",
      "test_code" : "PUBLIC_PAGE_PUBLIC_AUTH",
      "level_id" : 319367883342220103240397164810613715872,
      "mv_dependency" : null,
      "svt_component_type_id" : 4,
      "explanation" : "Public pages should be public but they can be victims of an over-zealous attempt to give all pages an authorization scheme",
      "fix" : "Remove the authorization scheme",
      "version_number" : 1,
      "version_db" : "ILA"
    },
    {
      "test_id" : 292302818419702751897719419630883846433,
      "test_name" : "Columns should have a valid authorization scheme",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select \r\na70.pass_yn,\r\na70.application_id,\r\na70.page_id,\r\na70.page_name,\r\na70.region_name,\r\na70.column_alias,\r\na70.heading,\r\na70.authorization_scheme,\r\na70.authorization_scheme_id,\r\na70.created_by, \r\na70.created_on, \r\na70.last_updated_by, \r\na70.last_updated_on,\r\ncase when a70.pass_yn = 'N'\r\n            then apex_string.format(p_message => \r\n            q'^Columm, %1, in region, %0, has an invalid authorization scheme: %3^',\r\n            p0 => a70.region_name,\r\n            p1 => a70.column_alias,\r\n            p2 => a70.heading,\r\n            p3 => a70.authorization_scheme,\r\n            p4 => a70.authorization_scheme_id\r\n            )\r\n            end as validation_failure_message,\r\ncase when a70.pass_yn = 'N'\r\n            then apex_string.format(p_message => \r\n            q'^Columm %1 has an invalid authorization scheme (app %2, page %3)^',\r\n            p0 => a70.region_name,\r\n            p1 => a70.column_alias,\r\n            p2 => a70.application_id,\r\n            p3 => a70.page_id\r\n            )\r\n            end as issue_title,\r\na70.component_id,\r\na70.parent_component_id,\r\na70.workspace\r\nfrom (\r\n     select\r\n     case when prc.authorization_scheme = prc.authorization_scheme_id\r\n          then 'N'\r\n          else 'Y'\r\n          end as pass_yn,\r\n     prc.application_id,\r\n     prc.page_id,\r\n     prc.page_name,\r\n     prc.region_name,\r\n     prc.column_alias,\r\n     prc.heading,\r\n     prc.authorization_scheme,\r\n     prc.authorization_scheme_id,\r\n     app.created_by, \r\n     app.created_on, \r\n     coalesce(prc.last_updated_by, app.last_updated_by) last_updated_by, \r\n     coalesce(prc.last_updated_on, app.last_updated_on) last_updated_on,\r\n\t   prc.region_report_column_id component_id,\r\n\t   null parent_component_id,\r\n\t   prc.workspace\r\n     from apex_application_page_rpt_cols prc\r\n     inner join apex_application_pages app on  app.page_id = prc.page_id\r\n                                           and app.application_id = prc.application_id\r\n     inner join  v_svt_apex_applications aa on prc.application_id = aa.application_id\r\n                                        and aa.availability_status != 'Unavailable'\r\n\t   left outer join apex_application_build_options aabo1 on  aabo1.build_option_name = app.build_option\r\n                                                          and aabo1.application_id = app.application_id\r\n     left outer join apex_application_build_options aabo2 on  aabo2.build_option_name = prc.build_option\r\n                                                          and aabo2.application_id = prc.application_id\r\n\r\n     where prc.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n     and coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\n     and coalesce(aabo2.status_on_export,'NA') != 'Exclude'\r\n     and prc.authorization_scheme is not null\r\n \t   and prc.authorization_scheme not in ('MUST_NOT_BE_PUBLIC_USER')\r\n) a70",
      "test_code" : "VAL_COL_AUTH",
      "level_id" : 319367883342218894314577550181439009696,
      "mv_dependency" : null,
      "svt_component_type_id" : 5,
      "explanation" : "The authorization on your column is in an invalid state",
      "fix" : "Remove the authorization scheme or replace it.",
      "version_number" : 1,
      "version_db" : "ILA"
    },
    {
      "test_id" : 291716553215644274634379898138449814780,
      "test_name" : "Column Link should be valid",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select \r\na100.pass_yn,\r\na100.application_id,\r\na100.column_link_url,\r\na100.region_name,\r\na100.heading,\r\na100.page_id,\r\na100.page_name,\r\na100.column_alias,\r\na100.created_by,\r\na100.created_on,\r\na100.last_updated_by, \r\na100.last_updated_on,\r\ncase when a100.pass_yn = 'N'\r\n     then apex_string.format(p_message => \r\n     q'^invalid colum link: %0 \r\n        region name : %1\r\n        heading : %2 \r\n        column_alias : %3^',\r\n     p0 => a100.column_link_url,\r\n     p1 => a100.region_name,\r\n     p2 => a100.heading,\r\n     p3 => a100.column_alias\r\n     )\r\n     end as validation_failure_message,\r\ncase when a100.pass_yn = 'N'\r\n     then apex_string.format(p_message => \r\n     q'^Invalid colum link (page %1, app %2)^',\r\n     p0 => a100.column_link_url,\r\n     p1 => a100.page_id,\r\n     p2 => a100.application_id\r\n     )\r\n     end as issue_title,\r\na100.component_id,\r\na100.parent_component_id,\r\na100.workspace\r\nfrom (\r\n    select \r\n    svt_stds_parser.is_valid_url (p_origin_app_id => prc.application_id,\r\n                                p_url           => prc.column_link_url\r\n                                ) pass_yn,\r\n    prc.application_id,\r\n    prc.column_link_url,\r\n    prc.region_name,\r\n    prc.heading,\r\n    prc.page_id,\r\n    prc.page_name,\r\n    prc.column_alias,\r\n    app.created_by, \r\n    app.created_on, \r\n    coalesce(prc.last_updated_by, app.last_updated_by) last_updated_by, \r\n    coalesce(prc.last_updated_on, app.last_updated_on) last_updated_on,\r\n\t  prc.region_report_column_id component_id,\r\n\t  null parent_component_id,\r\n\t  prc.workspace\r\n    from  apex_application_page_rpt_cols prc \r\n    inner join apex_application_pages app on  app.page_id = prc.page_id\r\n                                          and app.application_id = prc.application_id\r\n    inner join v_svt_apex_applications aa on  aa.application_id = prc.application_id\r\n                                      and aa.availability_status != 'Unavailable'\r\n\t  left outer join apex_application_build_options aabo1 on  aabo1.build_option_name = app.build_option\r\n                                                         and aabo1.application_id = app.application_id\r\n    left outer join apex_application_build_options aabo2 on  aabo2.build_option_name = prc.build_option\r\n                                                         and aabo2.application_id = prc.application_id\r\n\r\n    where prc.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n    and coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\n    and coalesce(aabo2.status_on_export,'NA') != 'Exclude'\r\n) a100",
      "test_code" : "VAL_COL_LINKS",
      "level_id" : 319367883342216476462938320923089597344,
      "mv_dependency" : null,
      "svt_component_type_id" : 5,
      "explanation" : "The URL in the column link is invalid",
      "fix" : "Fix the link or remove it.",
      "version_number" : 1,
      "version_db" : "ILA"
    },
    {
      "test_id" : 290934672085980425626077628758317791546,
      "test_name" : "List URLs should be valid",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "with \r\n    plug_link_count as (\r\n        select pl.list_id, count(*) lcount\r\n            from apex_application_page_regions pl\r\n            group by pl.list_id\r\n        ),\r\n    nav_link_count as (\r\n        select ui.navigation_list_id, count(*) lcount\r\n            from apex_appl_user_interfaces ui\r\n            group by ui.navigation_list_id\r\n        ),\r\n    nav_bar_link_count as (\r\n        select ui.nav_bar_list_id, count(*) lcount\r\n            from apex_appl_user_interfaces ui\r\n            group by ui.nav_bar_list_id\r\n        ),\r\n    a120 as (\r\n        select\r\n        svt_stds_parser.is_valid_url (p_origin_app_id => ale.application_id,\r\n                                    p_url           => ale.entry_target\r\n                                    ) pass_yn,\r\n        ale.application_id,\r\n        ale.entry_target,\r\n        ale.list_name,\r\n        ale.list_id, \r\n        ale.list_entry_id component_id,\r\n\t\t\t  ale.list_entry_parent_id parent_component_id,\r\n        ale.entry_text,\r\n        coalesce(plc.lcount,0) + coalesce(nlc.lcount,0) + coalesce(nblc.lcount,0) ref_count,\r\n        ale.condition_type_code,\r\n        ale.build_option,\r\n        bo.build_option_status,\r\n\t\t\t  bo.status_on_export,\r\n        aa1.created_on,\r\n        aa1.created_by,\r\n        ale.last_updated_by, \r\n        ale.last_updated_on,\r\n\t\t\t  ale.workspace\r\n        from apex_application_list_entries ale\r\n        inner join v_svt_apex_applications aa1 on ale.application_id = aa1.application_id\r\n                                        and aa1.availability_status != 'Unavailable'\r\n        left join apex_application_build_options bo on ale.application_id = bo.application_id\r\n                                                    and ale.build_option = bo.build_option_name\r\n        left join plug_link_count plc on plc.list_id = ale.list_id\r\n        left join nav_link_count nlc on nlc.navigation_list_id = ale.list_id\r\n        left join nav_bar_link_count nblc on nblc.nav_bar_list_id = ale.list_id\r\n        where ale.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n\t\t\t  and (ale.condition_type_code != 'NEVER' or ale.condition_type_code is null)\r\n        and (bo.status_on_export != 'Exclude' or bo.status_on_export is null)\r\n    )\r\nselect \r\na120.pass_yn,\r\na120.application_id,\r\nnull page_id,\r\na120.entry_target,\r\na120.list_name,\r\na120.list_id, \r\na120.component_id,\r\na120.entry_text,\r\na120.ref_count,\r\na120.condition_type_code,\r\na120.build_option,\r\na120.build_option_status,\r\na120.created_by,\r\na120.created_on,\r\na120.last_updated_by, \r\na120.last_updated_on,\r\ncase when a120.pass_yn = 'N'\r\n     then apex_string.format(p_message => \r\n     q'^List entry (%4,%3) in list (%1, %2) has an invalid link: %0 (build: %7)^',\r\n     p0 => a120.entry_target,\r\n     p1 => a120.list_name,\r\n     p2 => a120.list_id, \r\n     p3 => a120.component_id,\r\n     p4 => a120.entry_text,\r\n     p5 => a120.ref_count,\r\n     p6 => a120.condition_type_code,\r\n     p7 => a120.build_option,\r\n     p8 => a120.build_option_status\r\n     )\r\n     end as validation_failure_message,\r\ncase when a120.pass_yn = 'N'\r\n     then apex_string.format(p_message => \r\n     q'^Invalid link in list entry (%4) in list %1, app %0^',\r\n     p0 => a120.application_id,\r\n     p1 => a120.list_name,\r\n     p2 => a120.list_id, \r\n     p3 => a120.component_id,\r\n     p4 => a120.entry_text\r\n     )\r\n     end as issue_title,\r\na120.parent_component_id,\r\na120.workspace\r\nfrom a120",
      "test_code" : "VAL_LIST_LINKS",
      "level_id" : 319367883342216476462938320923089597344,
      "mv_dependency" : null,
      "svt_component_type_id" : 2,
      "explanation" : "The URL in the list link is invalid",
      "fix" : "Fix the URL or eliminate the list item",
      "version_number" : 1,
      "version_db" : "ILA"
    },
    {
      "test_id" : 291722916888588813458425836146204012298,
      "test_name" : "Button URLs should be valid",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select \r\na110.pass_yn,\r\na110.application_id,\r\na110.page_id,\r\na110.page_name,\r\na110.redirect_url,\r\na110.button_name,  \r\na110.label, \r\na110.region,\r\na110.created_by,\r\na110.created_on,\r\na110.last_updated_by, \r\na110.last_updated_on,\r\ncase when a110.pass_yn = 'N'\r\n     then apex_string.format(p_message => \r\n     q'^Button, `%1`/`%2`, has an invalid link: `%0` (region : `%3`)^',\r\n     p0 => a110.redirect_url,\r\n     p1 => a110.button_name,  \r\n     p2 => a110.label, \r\n     p3 => a110.region\r\n     )\r\n     end as validation_failure_message,\r\ncase when a110.pass_yn = 'N'\r\n     then apex_string.format(p_message => \r\n     q'^Button has an invalid link (page %0, app %1)^',\r\n     p0 => a110.page_id,\r\n     p1 => a110.application_id\r\n     )\r\n     end as issue_title,\r\na110.component_id,\r\na110.parent_component_id,\r\na110.workspace\r\nfrom (\r\n    select \r\n    svt_stds_parser.is_valid_url (p_origin_app_id => bl.application_id,\r\n                                p_url           => bl.redirect_url\r\n                                ) pass_yn,\r\n    bl.application_id, \r\n    bl.redirect_url,\r\n    bl.page_id,\r\n    bl.page_name,\r\n    bl.button_name,  \r\n    bl.label, \r\n    bl.region,\r\n    app.created_by,\r\n    app.created_on,\r\n    coalesce(bl.last_updated_by, app.last_updated_by) last_updated_by, \r\n    coalesce(bl.last_updated_on, app.last_updated_on) last_updated_on,\r\n\t  bl.button_id component_id,\r\n\t  null parent_component_id,\r\n\t  bl.workspace\r\n    from apex_application_page_buttons bl\r\n    inner join apex_application_pages app on  app.page_id = bl.page_id\r\n                                          and app.application_id = bl.application_id\r\n    inner join v_svt_apex_applications aa1 on bl.application_id = aa1.application_id\r\n                                       and aa1.availability_status != 'Unavailable'\r\n\t  left outer join apex_application_build_options aabo1 on  aabo1.build_option_name = app.build_option\r\n                                                         and aabo1.application_id = app.application_id\r\n    left outer join apex_application_build_options aabo2 on  aabo2.build_option_name = bl.build_option\r\n                                                         and aabo2.application_id = bl.application_id\r\n\t  where bl.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n    and coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\n    and coalesce(aabo2.status_on_export,'NA') != 'Exclude'\r\n) a110",
      "test_code" : "VAL_BUTTON_LINKS",
      "level_id" : 319367883342216476462938320923089597344,
      "mv_dependency" : null,
      "svt_component_type_id" : 8,
      "explanation" : "The button URL is invalid",
      "fix" : "Fix the URL or eliminate the button",
      "version_number" : 1,
      "version_db" : "ILA"
    },
    {
      "test_id" : 334182816925793696649181581903099374506,
      "test_name" : "Pages should be reachable",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select 'N' pass_yn,\r\n       aap.application_id,\r\n       aap.page_id,\r\n       aap.created_by,\r\n       aap.created_on,\r\n       aap.last_updated_by,\r\n       aap.last_updated_on,\r\n       apex_string.format('Page %0 (`%2`, app %1) is unreachable. please link to it / delete it / put under a `dev_only` build.',\r\n                          p0 => aap.page_id,\r\n                          p1 => aap.application_id,\r\n                          p2 => aap.page_name) validation_failure_message,\r\n       apex_string.format('Page %0 (app %1) is unreachable',\r\n                          p0 => aap.page_id,\r\n                          p1 => aap.application_id) issue_title,\r\n       aap.build_option,\r\n       abo.build_option_status,\r\n       aap.page_id component_id,\r\n       null parent_component_id,\r\n       aap.workspace,\r\n       aap.page_name\r\nfrom apex_application_pages aap\r\nleft outer join v_mv_svt spu on spu.destination_app_id = aap.application_id\r\n                                            and spu.destination_page_id = aap.page_id\r\nleft outer join apex_application_build_options abo on abo.application_id = aap.application_id \r\n                                                   and abo.build_option_name = aap.build_option\r\nwhere aap.workspace = svt_preferences.get('SVT_WORKSPACE')\r\nand spu.destination_page_id is null\r\nand aap.page_id not in (0,1,101,9999)\r\nand coalesce(abo.status_on_export,'NA') != 'Exclude'",
      "test_code" : "UNREACHABLE_PAGE",
      "level_id" : 319367883342216476462938320923089597344,
      "mv_dependency" : "V_MV_SVT",
      "svt_component_type_id" : 4,
      "explanation" : "Pages that are not linked to should be removed to declutter the application : This page is not linked to from anywhere. If this page is not in use, it should be removed to declutter the application",
      "fix" : "Delete the page or link to it.",
      "version_number" : 1.1,
      "version_db" : "REDWOOD"
    },
    {
      "test_id" : 333998623730581424701242298819965910226,
      "test_name" : "Breadcrumb Authorization Matches Destination",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select case when coalesce(spu.element_authorization, 'N/A') =  coalesce (aap.authorization_scheme, 'N/A')\r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       spu.application_id, \r\n       null page_id, \r\n       null created_by,\r\n       null created_on,\r\n       spu.last_updated_by,\r\n       spu.last_updated_on,\r\n       apex_string.format('The authorization scheme (%3) on breadcrumb entry `%0` (app %2) does not match the destination (page %4, authorization `%5`)',\r\n                          p0 => spu.element_label,\r\n                          p2 => spu.application_id,\r\n                          p3 => coalesce(spu.element_authorization,'null'),\r\n                          p4 => spu.destination_page_id,\r\n                          p5 => coalesce(aap.authorization_scheme,'null')\r\n                          ) validation_failure_message,\r\n       apex_string.format('The authorization scheme on breadcrumb entry `%0` (app %2) does not match the destination',\r\n                          p0 => spu.element_label,\r\n                          p2 => spu.application_id\r\n                          ) issue_title,\r\n       spu.page_authorization, \r\n       spu.url_type, \r\n       spu.element_label, \r\n       spu.element_name, \r\n       spu.parent_element_name, \r\n       spu.destination_app_id, \r\n       spu.destination_page_id, \r\n       aap.authorization_scheme dest_author_schema, \r\n       spu.element_authorization,\r\n       spu.element_id component_id, \r\n       spu.parent_element_id parent_component_id,\r\n\t\t\t aap.workspace\r\n from mv_svt_bc_entries spu\r\n inner join apex_application_pages aap on spu.destination_app_id = aap.application_id\r\n                                       and spu.destination_page_id = aap.page_id\r\n where spu.workspace = svt_preferences.get('SVT_WORKSPACE')",
      "test_code" : "BC_AUTHR_MATCH_DEST",
      "level_id" : 319367883342218894314577550181439009696,
      "mv_dependency" : "MV_SVT_BC_ENTRIES",
      "svt_component_type_id" : 12,
      "explanation" : "The Breadcrumb Entry Authorization Scheme should Matches that of its destination : The authorization scheme of a breadcrumb entry should match that of its destination",
      "fix" : "Add the requisite authorization scheme to the breadcrumb entry",
      "version_number" : 1.1,
      "version_db" : "REDWOOD"
    },
    {
      "test_id" : 334001945815790119295981616682227793115,
      "test_name" : "Page Branch Authorization Matches Destination",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select case when coalesce(spu.element_authorization, 'N/A') =  coalesce (aap.authorization_scheme, 'N/A')\r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       spu.application_id, \r\n       spu.page_id, \r\n       null created_by,\r\n       null created_on,\r\n       spu.last_updated_by,\r\n       spu.last_updated_on,\r\n       apex_string.format('The authorization scheme (%3) on the page branch (page %1, app %2) does not match the destination (page %4, authorization `%5`)',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id,\r\n                          p3 => coalesce(spu.element_authorization,'null'),\r\n                          p4 => spu.destination_page_id,\r\n                          p5 => coalesce(aap.authorization_scheme,'null')\r\n                          ) validation_failure_message,\r\n        apex_string.format('The authorization scheme on the page branch (page %1, app %2) does not match the destination',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id\r\n                          ) issue_title,\r\n       spu.page_authorization, \r\n       spu.url_type, \r\n       spu.element_label, \r\n       spu.element_name,\r\n       spu.destination_app_id, \r\n       spu.destination_page_id, \r\n       aap.authorization_scheme dest_author_schema, \r\n       spu.element_authorization,\r\n\t\t\t aap.build_option,\r\n       abo.build_option_status,\r\n       abo.status_on_export,\r\n\t\t\t spu.page_id component_id,\r\n\t     null parent_component_id,\r\n\t\t\t aap.workspace\r\n from mv_svt_page_branch spu\r\n inner join apex_application_pages aap on spu.destination_app_id = aap.application_id\r\n                                       and spu.destination_page_id = aap.page_id\r\n left outer join apex_application_build_options abo on abo.application_id = aap.application_id \r\n                                                    and abo.build_option_name = aap.build_option\r\n where spu.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n and spu.destination_page_id != spu.page_id\r\n and coalesce(spu.page_mode,'NA') not in ('Modal Dialog')\r\n and coalesce(abo.status_on_export,'NA') != 'Exclude'",
      "test_code" : "PB_AUTHR_MATCH_DEST",
      "level_id" : 319367883342220103240397164810613715872,
      "mv_dependency" : "MV_SVT_PAGE_BRANCH",
      "svt_component_type_id" : 4,
      "explanation" : "The authorization scheme of a page branch should match that of its destination",
      "fix" : "Add the requisite authorization scheme to the page branch",
      "version_number" : 1.1,
      "version_db" : "REDWOOD"
    },
    {
      "test_id" : 335035337953111631704150789005586467127,
      "test_name" : "Regular Pages should be Current in Navigation",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select 'N'  pass_yn,\r\n       aap.application_id,\r\n       aap.page_id,\r\n       aap.created_by,\r\n       aap.created_on,\r\n       aap.last_updated_by,\r\n       aap.last_updated_on,\r\n       apex_string.format('Page %0 (app %1) should be listed as current for an entry in the navigation menu (%2)',\r\n                          p0 => aap.page_id,\r\n                          p1 => aap.application_id,\r\n                          p2 => aa.navigation_list\r\n                        ) validation_failure_message,\r\n       apex_string.format('Page %0 (app %1) is not listed as current for any entry in the navigation menu',\r\n                          p0 => aap.page_id,\r\n                          p1 => aap.application_id\r\n                        ) issue_title,\r\n       aap.build_option,\r\n       abo.build_option_status,\r\n       abo.status_on_export,\r\n       aa.navigation_list,\r\n       aap.page_template,\r\n\t\t\t aap.page_id component_id,\r\n\t\t\t null parent_component_id,\r\n\t\t\t aap.workspace\r\nfrom apex_application_pages aap\r\ninner join apex_applications aa on aap.application_id = aa.application_id\r\n                                and aa.navigation_list is not null\r\nleft outer join (select ale.application_id, cfpg.column_value page_id\r\n                    from apex_application_list_entries ale\r\n                    join table(apex_string.split(ale.current_for_pages_expression, ',')) cfpg on ale.current_for_pages_type_code = 'COLON_DELIMITED_PAGE_LIST'\r\n                    join apex_applications aa on  ale.application_id = aa.application_id\r\n                                              and ale.list_name = aa.navigation_list\r\n                    where cfpg.column_value is not null\r\n                    and validate_conversion(cfpg.column_value as number) = 1\r\n                ) cdpl on  cdpl.application_id =  aap.application_id\r\n                       and cdpl.page_id = aap.page_id\r\nleft outer join (select ale.application_id, svt_stds_parser.page_from_url (p_origin_app_id => ale.application_id, p_url => ale.entry_target) page_id\r\n                    from apex_application_list_entries ale\r\n                    join apex_applications aa on  ale.application_id = aa.application_id\r\n                                              and ale.list_name = aa.navigation_list\r\n                    where ale.current_for_pages_type_code = 'TARGET_PAGE'\r\n                ) tp on  tp.application_id = aap.application_id\r\n                     and tp.page_id = aap.page_id\r\nleft outer join (select application_id, page_id, count(*) proc_count\r\n                    from apex_application_page_proc\r\n                    where process_type = 'Form - Initialization'\r\n                    group by application_id, page_id\r\n                ) pp on  pp.application_id = aap.application_id\r\n                     and pp.page_id = aap.page_id\r\nleft outer join apex_application_build_options abo on abo.application_id = aap.application_id \r\n                                                   and abo.build_option_name = aap.build_option\r\nwhere aap.workspace = svt_preferences.get('SVT_WORKSPACE') \r\nand aap.page_mode = 'Normal'\r\nand aap.page_id not in (0,101,9999)\r\nand cdpl.application_id is null \r\nand tp.application_id is null\r\nand pp.proc_count is null\r\nand coalesce(abo.status_on_export,'NA') != 'Exclude'\r\nand aap.page_template not like 'AO%'",
      "test_code" : "PAGES_CURRENT_IN_MENU",
      "level_id" : 319367883342220103240397164810613715872,
      "mv_dependency" : null,
      "svt_component_type_id" : 4,
      "explanation" : "All non-form, normal Pages should be Current in the Navigation Menu : Normal non-form pages should be listed as current for a navigation menu list entry",
      "fix" : "Make the page `current` for a navigation menu list entry",
      "version_number" : 1.2,
      "version_db" : "REDWOOD"
    },
    {
      "test_id" : 339963198100346475417735292115552093453,
      "test_name" : "Classic Column Link Authorization Matches Destination",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select case when coalesce(spu.element_authorization, 'N/A') =  coalesce (aap.authorization_scheme, 'N/A')\r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       spu.application_id, \r\n       spu.page_id, \r\n       null created_by,\r\n       null created_on,\r\n       spu.last_updated_by,\r\n       spu.last_updated_on,\r\n       apex_string.format('The authorization scheme (%3) on column `%0` (report `%6`, page %1, app %2) does not match the destination (page %4, authorization `%5`)',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id,\r\n                          p3 => coalesce(spu.element_authorization,'null'),\r\n                          p4 => spu.destination_page_id,\r\n                          p5 => coalesce(aap.authorization_scheme,'null'),\r\n                          p6 => spu.parent_element_name\r\n                          ) validation_failure_message,\r\n        apex_string.format('The authorization scheme on column `%0` (report `%6`, page %1, app %2) does not match the destination',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id,\r\n                          p6 => spu.parent_element_name\r\n                          ) issue_title,\r\n       spu.page_authorization, \r\n       spu.url_type, \r\n       spu.element_label, \r\n       spu.element_name, \r\n       spu.parent_element_name, \r\n       spu.destination_app_id, \r\n       spu.destination_page_id, \r\n       aap.authorization_scheme dest_author_schema, \r\n       spu.element_authorization,\r\n\t\t\t spu.element_id component_id,\r\n\t\t\t spu.parent_element_id parent_component_id,\r\n\t\t\t aap.workspace\r\n from mv_svt_classic_cols spu\r\n inner join apex_application_pages aap on spu.destination_app_id = aap.application_id\r\n                                       and spu.destination_page_id = aap.page_id\r\n where spu.workspace = svt_preferences.get('SVT_WORKSPACE')",
      "test_code" : "C_COL_AUTHR_MATCH_DEST",
      "level_id" : 319367883342218894314577550181439009696,
      "mv_dependency" : "MV_SVT_CLASSIC_COLS",
      "svt_component_type_id" : 21,
      "explanation" : "The authorization scheme of a column link should match that of its destination",
      "fix" : "Add the requisite authorization scheme to the column",
      "version_number" : 1.1,
      "version_db" : "REDWOOD"
    },
    {
      "test_id" : 1786333950963082818579461529999250280,
      "test_name" : "Pages should not have unresolved critical issues",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "with msglvl1 as (select application_id, \r\n                        page_id, \r\n                        page_view_id, \r\n                        message,\r\n                        max(message_timestamp) error_timestamp\r\n                from apex_debug_messages\r\n                where message_level in (1)\r\n                group by application_id, \r\n                         page_id, \r\n                         page_view_id, \r\n                         message),\r\n   actlgl as (select application_id, \r\n                     page_id, \r\n                     max(view_date) most_recent_view_date\r\n                from apex_workspace_activity_log\r\n                group by application_id, page_id)\r\nselect case when act.most_recent_view_date > cast(msglvl1.error_timestamp as date)\r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       msglvl1.error_timestamp,\r\n       act.most_recent_view_date,\r\n       aap.workspace,\r\n       aap.application_id, \r\n       aap.page_id,\r\n       aap.created_by,\r\n       aap.created_on,\r\n       aap.last_updated_by,\r\n       aap.last_updated_on,\r\n       apex_string.format('Page `%0` (app %1, page %2) has a critical (message level 1) error: `%3`, page_view_id : `%4` (from apex_debug_messages)', \r\n        p0 => aap.page_name, \r\n        p1 => aap.application_id,\r\n        p2 => aap.page_id,\r\n        p3 => substr(msglvl1.message,1,100),\r\n        p4 => msglvl1.page_view_id) validation_failure_message,\r\n       apex_string.format('Page `%0` (app %1, page %2) has a critical error', \r\n        p0 => aap.page_name, \r\n        p1 => aap.application_id,\r\n        p2 => aap.page_id) issue_title,\r\n       aap.page_id component_id,\r\n       null parent_component_id,\r\n       aap.page_name,\r\n       aap.page_mode,\r\n       msglvl1.message,\r\n       msglvl1.page_view_id      \r\nfrom msglvl1 \r\ninner join apex_application_pages aap on msglvl1.application_id = aap.application_id\r\n                                      and msglvl1.page_id = aap.page_id\r\n                                      and aap.page_id not in (101)\r\nleft outer join actlgl act on act.application_id = msglvl1.application_id\r\n                           and act.page_id = msglvl1.page_id\r\nleft outer join apex_application_build_options aabo2 on  aabo2.build_option_name = aap.build_option\r\n                                                     and aabo2.application_id = aap.application_id\r\nwhere aap.workspace = svt_preferences.get('SVT_WORKSPACE')\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'",
      "test_code" : "PAGE_ERROR",
      "level_id" : 319367883342220103240397164810613715872,
      "mv_dependency" : null,
      "svt_component_type_id" : 4,
      "explanation" : "Looking for pages associated with message\\_level 1 issues logged in apex\\_debug\\_messages",
      "fix" : "Once the page critical error is resolved, run the page in debug mode to resolve the error",
      "version_number" : 1.7,
      "version_db" : "REDWOOD"
    },
    {
      "test_id" : 339963198100348893269374521373901505805,
      "test_name" : "IG Column Link Authorization Matches Destination ",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select case when coalesce(spu.element_authorization, 'N/A') =  coalesce (aap.authorization_scheme, 'N/A')\r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       spu.application_id, \r\n       spu.page_id, \r\n       null created_by,\r\n       null created_on,\r\n       spu.last_updated_by,\r\n       spu.last_updated_on,\r\n       apex_string.format('The authorization scheme (%3) on column `%0` (report `%6`, page %1, app %2) does not match the destination (page %4, authorization `%5`)',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id,\r\n                          p3 => coalesce(spu.element_authorization,'null'),\r\n                          p4 => spu.destination_page_id,\r\n                          p5 => coalesce(aap.authorization_scheme,'null'),\r\n                          p6 => spu.parent_element_name\r\n                          ) validation_failure_message,\r\n        apex_string.format('The authorization scheme on column `%0` (report `%6`, page %1, app %2) does not match the destination',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id,\r\n                          p6 => spu.parent_element_name\r\n                          ) issue_title,\r\n       spu.page_authorization, \r\n       spu.url_type, \r\n       spu.element_label, \r\n       spu.element_name, \r\n       spu.parent_element_name, \r\n       spu.destination_app_id, \r\n       spu.destination_page_id, \r\n       aap.authorization_scheme dest_author_schema, \r\n       spu.element_authorization,\r\n\t\t\t spu.element_id component_id,\r\n\t\t\t spu.parent_element_id parent_component_id,\r\n\t\t\t aap.workspace\r\n from mv_svt_ig_cols spu\r\n inner join apex_application_pages aap on spu.destination_app_id = aap.application_id\r\n                                       and spu.destination_page_id = aap.page_id\r\n where spu.workspace = svt_preferences.get('SVT_WORKSPACE')",
      "test_code" : "IG_COL_AUTHR_MATCH_DEST",
      "level_id" : 319367883342218894314577550181439009696,
      "mv_dependency" : "MV_SVT_IG_COLS",
      "svt_component_type_id" : 22,
      "explanation" : "The authorization scheme of a column link should match that of its destination",
      "fix" : "Add the requisite authorization scheme to the column",
      "version_number" : 1.1,
      "version_db" : "REDWOOD"
    }
  ]
}    
