{
  "standard" :
  [
    {
      "standard_id" : 4,
      "standard_name" : "Broken Functionality",
      "description" : "These tests identify functionality that appears unintentional and could cause problems.",
      "compatibility_mode_id" : 1,
      "created" : "2023-04-12T06:40:01.534000Z",
      "created_by" : "AST",
      "updated" : "2023-04-12T06:40:01.534000Z",
      "updated_by" : "AST"
    }
  ],
  "test" :
  [
    {
      "test_id" : 334001945815790119295981616682227793115,
      "test_name" : "Page Branch Authorization Matches Destination",
      "standard_id" : 4,
      "display_sequence" : null,
      "query_clob" : "select case when coalesce(spu.element_authorization, 'N/A') =  coalesce (aap.authorization_scheme, 'N/A')\r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       spu.application_id, \r\n       spu.page_id, \r\n       null created_by,\r\n       null created_on,\r\n       spu.last_updated_by,\r\n       spu.last_updated_on,\r\n       apex_string.format('The authorization scheme (%3) on the page branch (page %1, app %2) does not match the destination (page %4, authorization `%5`)',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id,\r\n                          p3 => coalesce(spu.element_authorization,'null'),\r\n                          p4 => spu.destination_page_id,\r\n                          p5 => coalesce(aap.authorization_scheme,'null')\r\n                          ) validation_failure_message,\r\n        apex_string.format('The authorization scheme on the page branch (page %1, app %2) does not match the destination',\r\n                          p0 => spu.element_label,\r\n                          p1 => spu.page_id,\r\n                          p2 => spu.application_id\r\n                          ) issue_title,\r\n       spu.page_authorization, \r\n       spu.url_type, \r\n       spu.element_label, \r\n       spu.element_name,\r\n       spu.destination_app_id, \r\n       spu.destination_page_id, \r\n       aap.authorization_scheme dest_author_schema, \r\n       spu.element_authorization,\r\n\t\t\t aap.build_option,\r\n       abo.build_option_status,\r\n       abo.status_on_export,\r\n\t\t\t spu.page_id component_id,\r\n\t     null parent_component_id,\r\n\t\t\t aap.workspace\r\n from mv_svt_page_branch spu\r\n inner join apex_application_pages aap on spu.destination_app_id = aap.application_id\r\n                                       and spu.destination_page_id = aap.page_id\r\n left outer join apex_application_build_options abo on abo.application_id = aap.application_id \r\n                                                    and abo.build_option_name = aap.build_option\r\n where spu.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n and spu.destination_page_id != spu.page_id\r\n and coalesce(spu.page_mode,'NA') not in ('Modal Dialog')\r\n and coalesce(abo.status_on_export,'NA') != 'Exclude'",
      "test_code" : "PB_AUTHR_MATCH_DEST",
      "level_id" : 319367883342220103240397164810613715872,
      "mv_dependency" : "MV_SVT_PAGE_BRANCH",
      "svt_component_type_id" : 4,
      "explanation" : "The authorization scheme of a page branch should match that of its destination",
      "fix" : "Add the requisite authorization scheme to the page branch",
      "version_number" : 1.1,
      "version_db" : "REDWOOD"
    }
  ]
}    
