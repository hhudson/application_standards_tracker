{"std_test":{"standard":{"standard_id":8467975092489085553189835659685444234,"standard_name":"General","description":"These are general tests with no theme-specific angle","compatibility_mode_id":1,"created":"2023-09-28T04:21:30.121000Z","created_by":"HAYDEN.H.HUDSON@ORACLE.COM","updated":"2023-09-28T04:21:30.121000Z","updated_by":"HAYDEN.H.HUDSON@ORACLE.COM"}},"test":[{"test_id":13377809915860391973159848303682411210,"test_name":"Avoid hardcoded date formats","standard_id":8467975092489085553189835659685444234,"display_sequence":null,"query_clob":"select case when aapr.region_source like '%YYYY%'\r\n            then 'N'\r\n            else 'Y'\r\n            end pass_yn,\r\n       aapr.workspace,\r\n       aapr.application_id, \r\n       aapr.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aapr.last_updated_by,\r\n       aapr.last_updated_on,\r\n       apex_string.format('Region `%0` (app %1, page %2) is using a hard-coded date formats: `%3`', \r\n        p0 => aapr.region_name, \r\n        p1 => aapr.application_id,\r\n        p2 => aapr.page_id,\r\n        p3 => substr(aapr.region_source,1,30)) validation_failure_message,\r\n       apex_string.format('Region `%0` (app %1, page %2) is using hard-coded date formats', \r\n        p0 => aapr.region_name, \r\n        p1 => aapr.application_id,\r\n        p2 => aapr.page_id) issue_title,\r\n       aapr.region_id component_id,\r\n       aapr.parent_region_id parent_component_id,\r\n       aapr.region_name,\r\n       aapr.template,\r\n       aapr.display_position,\r\n       aapr.source_type,\r\n       aapr.component_template_options,\r\n       aapr.report_template\r\nfrom apex_application_page_regions aapr\r\ninner join apex_application_pages aap on aap.page_id = aapr.page_id\r\n                                      and aap.application_id = aapr.application_id\r\nleft outer join apex_application_build_options aabo1 on  aabo1.build_option_name = aap.build_option\r\n                                                     and aabo1.application_id = aap.application_id\r\nleft outer join apex_application_build_options aabo2 on  aabo2.build_option_name = aapr.build_option\r\n                                                     and aabo2.application_id = aapr.application_id\r\nwhere aapr.workspace = svt_preferences.get('SVT_WORKSPACE')\r\nand coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'\r\nand aapr.query_type_code = 'SQL'","test_code":"NO_HARDCDD_DT_FRMTS","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":5,"explanation":null,"fix":null,"version_number":1.1,"version_db":"REDWOOD"},{"test_id":11380622715168632246154599187865715548,"test_name":"Region Static IDs can have underscores not dashes","standard_id":8467975092489085553189835659685444234,"display_sequence":null,"query_clob":"select case when lower(aapr.static_id) like '%-%'\r\n            then 'N'\r\n            else 'Y'\r\n            end pass_yn,\r\n       aapr.workspace,\r\n       aapr.application_id, \r\n       aapr.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aapr.last_updated_by,\r\n       aapr.last_updated_on,\r\n       apex_string.format('Region static id `%3` (app %1, page %2) should replace dashes with underscores', \r\n        p0 => aapr.region_name, \r\n        p1 => aapr.application_id,\r\n        p2 => aapr.page_id,\r\n        p3 => aapr.static_id) validation_failure_message,\r\n       apex_string.format('Region static id `%3` cannot have dashes (app %1, page %2, region name `%0`, region id %4)', \r\n        p0 => aapr.region_name, \r\n        p1 => aapr.application_id,\r\n        p2 => aapr.page_id,\r\n        p3 => aapr.static_id,\r\n\t\t\t\tp4 => aapr.region_id) issue_title,\r\n       aapr.region_id component_id,\r\n       null parent_component_id,\r\n       aapr.region_name,\r\n       aapr.template,\r\n       aapr.display_position,\r\n       aapr.source_type,\r\n       aapr.component_template_options,\r\n       aapr.report_template,\r\n       aapr.static_id\r\nfrom apex_application_page_regions aapr\r\ninner join apex_applications aa on aapr.application_id = aa.application_id\r\ninner join apex_application_pages aap on aap.page_id = aapr.page_id\r\n                                      and aap.application_id = aapr.application_id\r\nleft outer join apex_application_build_options aabo1 on  aabo1.build_option_name = aap.build_option\r\n                                                     and aabo1.application_id = aap.application_id\r\nleft outer join apex_application_build_options aabo2 on  aabo2.build_option_name = aapr.build_option\r\n                                                     and aabo2.application_id = aapr.application_id\r\nwhere aapr.workspace = svt_preferences.get('SVT_WORKSPACE')\r\nand coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'\r\nand aapr.static_id is not null","test_code":"RGN_STTC_NODASH","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":5,"explanation":"Region static ids cannot have dashes","fix":"Replace the dashes with underscores","version_number":1.2,"version_db":"REDWOOD"},{"test_id":13371276756408890042283603836738485817,"test_name":"Use the appropriate page item subtype","standard_id":8467975092489085553189835659685444234,"display_sequence":null,"query_clob":"select case when (   lower(aapi.label) like 'email%'\r\n                  or lower(aapi.label) like 'e-mail%')\r\n            then case when aapi.attribute_04 = 'EMAIL'\r\n                      then 'Y'\r\n                      else 'N'\r\n                      end\r\n            when (   lower(aapi.label) like 'phone%'\r\n                  or lower(aapi.label) like 'mobile%'\r\n                  or lower(aapi.label) like 'cell%') \r\n            then case when aapi.attribute_04 = 'TEL'\r\n                      then 'Y'\r\n                      else 'N'\r\n                      end\r\n            when (   lower(aapi.label) like 'search%') \r\n            then case when aapi.attribute_04 = 'SEARCH'\r\n                      then 'Y'\r\n                      else 'N'\r\n                      end\r\n            when (   lower(aapi.label) like '%url%'\r\n                  or lower(aapi.label) like 'website%') \r\n            then case when aapi.attribute_04 = 'URL'\r\n                      then 'Y'\r\n                      else 'N'\r\n                      end\r\n            end pass_yn, \r\n       aapi.label,\r\n       aapi.attribute_04,\r\n       aapi.workspace,\r\n       aapi.application_id, \r\n       aapi.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aapi.last_updated_by,\r\n       aapi.last_updated_on,\r\n       apex_string.format('Page Item `%0`/`%3` (app %1, page %2) is using the wrong subtype : `%4`', \r\n        p0 => aapi.item_name, \r\n        p1 => aapi.application_id,\r\n        p2 => aapi.page_id,\r\n        p3 => aapi.label,\r\n        p4 => aapi.attribute_04) validation_failure_message,\r\n       apex_string.format('Page Item `%0`/`%3` (app %1, page %2) is using the wrong subtype', \r\n        p0 => aapi.item_name, \r\n        p1 => aapi.application_id,\r\n        p2 => aapi.page_id,\r\n        p3 => aapi.label,\r\n        p4 => aapi.attribute_04) issue_title,\r\n       aapi.item_id component_id,\r\n       aapi.region_id parent_component_id,\r\n       aapi.item_name,\r\n       aapi.item_help_text,\r\n       aapi.display_as,\r\n       aapi.display_as_code\r\nfrom apex_application_page_items aapi\r\ninner join apex_application_pages aap on aap.page_id = aapi.page_id\r\n                                      and aap.application_id = aapi.application_id\r\nleft outer join apex_application_build_options aabo1 on  aabo1.build_option_name = aap.build_option\r\n                                                     and aabo1.application_id = aap.application_id\r\nleft outer join apex_application_build_options aabo2 on  aabo2.build_option_name = aapi.build_option\r\n                                                     and aabo2.application_id = aapi.application_id\r\nwhere aapi.workspace = svt_preferences.get('SVT_WORKSPACE')\r\nand coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'\r\nand aapi.display_as_code = 'NATIVE_TEXT_FIELD'","test_code":"APT_PAGE_ITEM_SUBTYPE","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":7,"explanation":"Page items labelled 'Email','Search','URL','Phone Number' (or a similar variant) should use the appropriate subtype.","fix":"Apply the appropriate subtype.","version_number":1.1,"version_db":"REDWOOD"},{"test_id":10857638695581156839791697948825642308,"test_name":"Do not use console.log","standard_id":8467975092489085553189835659685444234,"display_sequence":null,"query_clob":"select case when lower(aapda.attribute_01) like '%console.log%'\r\n            then 'N'\r\n            else 'Y'\r\n            end pass_yn,\r\n       aapda.workspace,\r\n       aapda.application_id, \r\n       aapda.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aapda.last_updated_by,\r\n       aapda.last_updated_on,\r\n       apex_string.format('Dynamic Action Action `%0` (app %1, page %2) uses console.log: `%3...`', \r\n        p0 => aapda.dynamic_action_name, \r\n        p1 => aapda.application_id,\r\n        p2 => aapda.page_id,\r\n        p3 => substr(aapda.attribute_01,1,50)) validation_failure_message,\r\n       apex_string.format('Dynamic Action Action `%0` uses console.log (app %1, page %2, action id %3)', \r\n        p0 => aapda.dynamic_action_name, \r\n        p1 => aapda.application_id,\r\n        p2 => aapda.page_id,\r\n\t\t\t\tp3 => aapda.action_id) issue_title,\r\n       aapda.action_id component_id,\r\n       aapda.dynamic_action_id parent_component_id,\r\n       aapda.dynamic_action_name,\r\n       aapda.attribute_01 javascript_code\r\nfrom apex_application_page_da_acts aapda\r\ninner join apex_application_pages aap on aap.page_id = aapda.page_id\r\n                                      and aap.application_id = aapda.application_id\r\nleft outer join apex_application_build_options aabo1 on  aabo1.build_option_name = aap.build_option\r\n                                                     and aabo1.application_id = aap.application_id\r\nleft outer join apex_application_build_options aabo2 on  aabo2.build_option_name = aapda.build_option\r\n                                                     and aabo2.application_id = aapda.application_id\r\nwhere aapda.workspace = svt_preferences.get('SVT_WORKSPACE')\r\nand coalesce(aabo1.status_on_export,'NA') != 'Exclude'\r\nand coalesce(aabo2.status_on_export,'NA') != 'Exclude'\r\nand aapda.action_code = 'NATIVE_JAVASCRIPT_CODE'","test_code":"JVSCRIPT_CONSOLE_LOG","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":42,"explanation":"Console.log is spammy because it always logs","fix":"Use apex.debug.log instead","version_number":1.1,"version_db":"REDWOOD"},{"test_id":332764023049485793696456366758469871711,"test_name":"Form Elements may benefit from help text","standard_id":8467975092489085553189835659685444234,"display_sequence":null,"query_clob":"with pproc as (select application_id, page_id, count(1) proc_count\r\n                from apex_application_page_proc\r\n                group by application_id, page_id),\r\n     api as (select case when lower(api.label) in ('username','password')\r\n                         then 'Y'\r\n\t\t\t\t\t\t             when api.item_help_text is null \r\n                         then case when api.display_as = 'Checkbox' \r\n                                   and api.item_label_template in ('Label Top')\r\n                                   then 'Y'\r\n                                   else 'N'\r\n                                   end\r\n                         else 'Y'\r\n                         end pass_yn,\r\n                    api.application_id,\r\n                    api.page_id,\r\n                    api.last_updated_by,\r\n                    api.last_updated_on,\r\n                    api.item_id component_id,\r\n                    api.item_name,\r\n                    api.item_source_type,\r\n                    api.item_help_text,\r\n                    api.display_as,\r\n                    aap.build_option,\r\n                    abo.build_option_status,\r\n                    abo.status_on_export,\r\n                    api.item_label_template,\r\n                    api.label,\r\n                    api.workspace,\r\n                    pproc.proc_count\r\n            from apex_application_page_items api\r\n            inner join apex_application_pages aap on  api.application_id = aap.application_id\r\n                                                  and api.page_id = aap.page_id\r\n            inner join pproc on  pproc.application_id = api.application_id\r\n                             and pproc.page_id = api.page_id\r\n            left outer join apex_application_build_options abo on  aap.application_id = abo.application_id\r\n                                                               and aap.build_option = abo.build_option_name \r\n            left outer join apex_application_build_options abo2 on  api.application_id = abo2.application_id\r\n                                                                and api.build_option = abo2.build_option_name \r\n            where api.workspace = svt_preferences.get('SVT_WORKSPACE')\r\n            and api.display_as not in ('Hidden')\r\n            and coalesce(abo.status_on_export,'NA') not in ('Exclude')\r\n            and coalesce(abo2.status_on_export,'NA') not in ('Exclude')\r\n            )\r\nselect api.pass_yn,\r\n       api.application_id,\r\n       api.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       api.last_updated_by,\r\n       api.last_updated_on,\r\n       case when api.pass_yn = 'N'\r\n            then apex_string.format('Item `%0` (page %1, app %2, displayed as `%3`) is missing Help Text. Form items require Help Text.',\r\n                          p0 => api.item_name,\r\n                          p1 => api.page_id,\r\n                          p2 => api.application_id,\r\n                          p3 => api.display_as) \r\n            end validation_failure_message,\r\n       case when api.pass_yn = 'N'\r\n            then apex_string.format('Item `%0` (page %1, app %2) is missing Help Text',\r\n                          p0 => api.item_name,\r\n                          p1 => api.page_id,\r\n                          p2 => api.application_id) \r\n            end issue_title,\r\n       api.component_id,\r\n       api.item_name,\r\n       api.display_as,\r\n       null parent_component_id,\r\n       api.item_help_text,\r\n       api.item_source_type,\r\n       api.item_label_template,\r\n       api.label,\r\n       api.workspace,\r\n       api.proc_count\r\nfrom api","test_code":"FORM_ITEM_HELP","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":7,"explanation":"All editable form elements should have help text. This test is tied to the following WCAG Codes :\r\n\r\n1.  3.3.2(A) : Labels or Instructions:  \r\n    Labels or instructions are provided when content requires user input.\r\n    \r\n2.  1.3.5(AA) : Identify Input Purpose:\r\n    \r\n    The purpose of each input field collecting information about the user can be programmatically determined when:\r\n    \r\n    The input field serves a purpose identified in the Input Purposes for User Interface Components section; and  \r\n    The content is implemented using technologies with support for identifying the expected meaning for form input data.\r\n    \r\n3.  3.3.5(AAA) : Help : Context-sensitive help is available.","fix":"Add Help Text","version_number":1.4,"version_db":"REDWOOD"}]}    
