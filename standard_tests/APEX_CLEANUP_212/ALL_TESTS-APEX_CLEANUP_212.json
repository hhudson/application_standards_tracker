{"std_test":{"standard":{"standard_id":292427565561508440301674749281201445673,"standard_name":"Cleanup","description":"Best practices to keep things tidy","compatibility_mode_id":1,"created":"2023-04-11T20:40:01.577041Z","created_by":"AST","updated":"2023-04-11T20:40:01.577041Z","updated_by":"AST"}},"test":[{"test_id":1887688920939487913502812294718168859,"test_name":"Page branches should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":400,"query_clob":"with std as (\r\n    select case when months_between (sysdate, apb.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when apb.condition_type = 'Never'\r\n                          then 'NEVERPAGEBRANCH'\r\n                          end\r\n                end child_code,\r\n           apb.condition_type,\r\n           apb.application_id,\r\n           apb.page_id,\r\n           apb.branch_name element_name,\r\n           apb.last_updated_by,\r\n           apb.last_updated_on,\r\n           apb.build_option,\r\n           abo.build_option_status,\r\n           abo.status_on_export,\r\n\t         apb.workspace\r\n    from apex_application_page_branches apb\r\n    inner join apex_application_pages aap on aap.application_id = apb.application_id\r\n                                          and aap.page_id = apb.page_id\r\n    left outer join apex_application_build_options abo on abo.application_id = aap.application_id \r\n                                                       and abo.build_option_name = aap.build_option\r\n    where apb.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n\t  and coalesce(abo.status_on_export,'NA') != 'Exclude'\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) should be made available or deleted. It has been unavailable since `%4`',\r\n                          p0 => case when std.child_code = 'NEVERPAGEBRANCH'\r\n                                     then 'Branch with Never condition `'||std.element_name||'`'\r\n                                     when std.child_code = 'NEVERPAGECOMP'\r\n                                     then 'Computation with Never condition `'||std.element_name||'`'\r\n                                     when std.child_code = 'NEVERPAGEDA'\r\n                                     then 'Dynamic Action with Never condition `'||std.element_name||'`'\r\n                                     end,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) has been unavailable for too long',\r\n                          p0 => case when std.child_code = 'NEVERPAGEBRANCH'\r\n                                     then 'Branch with Never condition `'||std.element_name||'`'\r\n                                     end,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end issue_title,\r\n\t     std.child_code,\r\n       std.element_name,\r\n\t\t\t std.page_id component_id,\r\n       null parent_component_id,\r\n\t\t\t std.workspace\r\nfrom std","test_code":"PAGE_BRANCH_AVAILABLE","level_id":319367883342218894314577550181439009696,"mv_dependency":null,"svt_component_type_id":54,"explanation":"Page branches, computations and dynamic actions should be available : \\* NEVERPAGEBRANCH : Page branches that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"*   Make available or remove","version_number":1,"version_db":"REDWOOD"},{"test_id":1887953466656202306767777532725230935,"test_name":"Page procedures should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":410,"query_clob":"with std as (\r\n    select case when months_between (sysdate, app.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when app.condition_type = 'Never'\r\n                          then 'NEVERPAGEPROC'\r\n                          end\r\n                end child_code,\r\n           app.condition_type,\r\n           app.application_id,\r\n           app.page_id,\r\n           app.region_id,\r\n           app.region_name,\r\n           app.process_name element_name,\r\n           app.last_updated_by,\r\n           app.last_updated_on,\r\n           app.build_option,\r\n           app.workspace,\r\n\t         app.process_id component_id\r\n    from apex_application_page_proc app\r\n\t  where app.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) should be made available or deleted. It has been unavailable since `%4`',\r\n                          p0 => 'Page Procedure with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) has been unavailable for too long',\r\n                          p0 => 'Page Procedure with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end issue_title,\r\n\t   std.child_code,\r\n     std.element_name,\r\n\t\t std.component_id,\r\n\t\t null parent_component_id,\r\n\t\t std.workspace\r\nfrom std","test_code":"PAGE_PROC_AVAILABLE","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":82,"explanation":"Region Operations and features (Validations, procedures, charts, card actions, map layers, search sources) should be available or deleted : \\* Charts that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"*   Make available or delete","version_number":1,"version_db":"REDWOOD"},{"test_id":1887953466654993380948162903550524759,"test_name":"Page computations should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":400,"query_clob":"with std as (\r\n    select case when months_between (sysdate, apc.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when apc.condition_type = 'Never'\r\n                          then 'NEVERPAGECOMP'\r\n                          end\r\n                end child_code,\r\n           apc.condition_type,\r\n           apc.application_id,\r\n           apc.page_id,\r\n           apc.computation element_name,\r\n           apc.last_updated_by,\r\n           apc.last_updated_on,\r\n           apc.build_option,\r\n           abo.build_option_status,\r\n           abo.status_on_export,\r\n\t         apc.workspace\r\n    from apex_application_page_comp apc \r\n    inner join apex_application_pages aap on aap.application_id = apc.application_id\r\n                                          and aap.page_id = apc.page_id\r\n    left outer join apex_application_build_options abo on abo.application_id = aap.application_id \r\n                                                       and abo.build_option_name = aap.build_option\r\n    where apc.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n\t  and coalesce(abo.status_on_export,'NA') != 'Exclude'\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) should be made available or deleted. It has been unavailable since `%4`',\r\n                          p0 => case when std.child_code = 'NEVERPAGEBRANCH'\r\n                                     then 'Branch with Never condition `'||std.element_name||'`'\r\n                                     when std.child_code = 'NEVERPAGECOMP'\r\n                                     then 'Computation with Never condition `'||std.element_name||'`'\r\n                                     when std.child_code = 'NEVERPAGEDA'\r\n                                     then 'Dynamic Action with Never condition `'||std.element_name||'`'\r\n                                     end,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) has been unavailable for too long',\r\n                          p0 => case when std.child_code = 'NEVERPAGEBRANCH'\r\n                                     then 'Branch with Never condition `'||std.element_name||'`'\r\n                                     end,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end issue_title,\r\n\t     std.child_code,\r\n       std.element_name,\r\n\t\t\t std.page_id component_id,\r\n       null parent_component_id,\r\n\t\t\t std.workspace\r\nfrom std","test_code":"PAGE_COMP_AVAILABLE","level_id":319367883342218894314577550181439009696,"mv_dependency":null,"svt_component_type_id":58,"explanation":"NEVERPAGECOMP : Page computations that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"*   Make available or remove","version_number":1,"version_db":"REDWOOD"},{"test_id":1888450720263009544531795669695070791,"test_name":"Search Sources should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":410,"query_clob":"with std as (\r\n    select case when months_between (sysdate, pss.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when pss.condition_type = 'Never'\r\n                          then 'NEVERSEARCHSOURCES'\r\n                          end\r\n                end child_code,\r\n           pss.condition_type,\r\n           pss.application_id,\r\n           pss.page_id,\r\n           pss.region_id,\r\n           pss.region_name,\r\n           pss.search_source_name element_name,\r\n           pss.last_updated_by,\r\n           pss.last_updated_on,\r\n           pss.build_option,\r\n\t         pss.search_source_id component_id,\r\n\t         pss.workspace\r\n    from apex_appl_page_search_sources pss\r\n\t  where pss.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) should be made available or deleted. It has been unavailable since `%4`',\r\n                          p0 => 'Search Source with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) has been unavailable for too long',\r\n                          p0 => 'Search Source with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end issue_title,\r\n\t   std.child_code,\r\n     std.element_name,\r\n\t\t std.component_id,\r\n\t\t null parent_component_id,\r\n\t\t std.workspace\r\nfrom std","test_code":"SEARCH_SOURCES_AVAILABLE","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":62,"explanation":"Region Operations and features (Validations, procedures, charts, card actions, map layers, search sources) should be available or deleted : \\* Charts that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"*   Make available or delete","version_number":1,"version_db":"REDWOOD"},{"test_id":1888450720261800618712181040520364615,"test_name":"Card Actions should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":410,"query_clob":"with std as (\r\n    select case when months_between (sysdate, pca.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when pca.condition_type = 'Never'\r\n                          then 'NEVERCARDACTIONS'\r\n                          end\r\n                end child_code,\r\n           pca.condition_type,\r\n           pca.application_id,\r\n           pca.page_id,\r\n           pca.region_id,\r\n           pca.region_name,\r\n           pca.label element_name,\r\n           pca.last_updated_by,\r\n           pca.last_updated_on,\r\n           pca.build_option,\r\n\t         pca.action_id component_id,\r\n\t         pca.workspace\r\n    from apex_appl_page_card_actions pca\r\n\t  where pca.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) should be made available or deleted. It has been unavailable since `%4`',\r\n                          p0 => 'Card Action with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) has been unavailable for too long',\r\n                          p0 => 'Card Action with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end issue_title,\r\n\t   std.child_code,\r\n     std.element_name,\r\n\t\t std.component_id,\r\n\t\t null parent_component_id,\r\n\t\t std.workspace\r\nfrom std","test_code":"CARD_ACTIONS_AVAILABLE","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":221,"explanation":"Region Operations and features (Validations, procedures, charts, card actions, map layers, search sources) should be available or deleted : \\* Charts that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"*   Make available or delete","version_number":1,"version_db":"REDWOOD"},{"test_id":1888450720260591692892566411345658439,"test_name":"Page Validations should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":410,"query_clob":"with std as (\r\n    select case when months_between (sysdate, apv.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when apv.condition_type = 'Never'\r\n                          then 'NEVERPAGEVAL'\r\n                          end\r\n                end child_code,\r\n           apv.condition_type,\r\n           apv.application_id,\r\n           apv.page_id,\r\n           apv.region_id,\r\n           apv.region_name,\r\n           apv.validation_name element_name,\r\n           apv.last_updated_by,\r\n           apv.last_updated_on,\r\n           apv.build_option,\r\n\t         apv.workspace,\r\n\t         apv.validation_id component_id\r\n    from apex_application_page_val apv\r\n\t  where apv.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) should be made available or deleted. It has been unavailable since `%4`',\r\n                          p0 => 'Validation with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) has been unavailable for too long',\r\n                          p0 => 'Validation with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end issue_title,\r\n\t   std.child_code,\r\n     std.element_name,\r\n\t\t std.component_id,\r\n\t\t null parent_component_id,\r\n\t\t std.workspace\r\nfrom std","test_code":"PAGE_VAL_AVAILABLE","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":63,"explanation":"Region Operations and features (Validations, procedures, charts, card actions, map layers, search sources) should be available or deleted : \\* Charts that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"*   Make available or delete","version_number":1,"version_db":"REDWOOD"},{"test_id":1888450720259382767072951782170952263,"test_name":"Charts should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":410,"query_clob":"with std as (\r\n    select case when months_between (sysdate, pcs.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when pcs.condition_type = 'Never'\r\n                          then 'NEVERCHART'\r\n                          end\r\n                end child_code,\r\n           pcs.condition_type,\r\n           pcs.application_id,\r\n           pcs.page_id,\r\n           pcs.region_id component_id,\r\n           pcs.region_name,\r\n           pcs.series_name element_name,\r\n           pcs.last_updated_by,\r\n           pcs.last_updated_on,\r\n           pcs.build_option,\r\n\t         pcs.workspace\r\n    from apex_application_page_chart_s pcs\r\n\t  where pcs.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) should be made available or deleted. It has been unavailable since `%4`',\r\n                          p0 => 'Chart with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) has been unavailable for too long',\r\n                          p0 => 'Chart with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end issue_title,\r\n\t   std.child_code,\r\n     std.element_name,\r\n\t\t std.component_id,\r\n\t\t null parent_component_id,\r\n\t\t std.workspace\r\nfrom std","test_code":"CHARTS_AVAILABLE","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":87,"explanation":"Region Operations and features (Validations, procedures, charts, card actions, map layers, search sources) should be available or deleted : \\* Charts that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"*   Make available or delete","version_number":1,"version_db":"REDWOOD"},{"test_id":332660786389727407173010825669926772036,"test_name":"Pages should limit their content","standard_id":292427565561508440301674749281201445673,"display_sequence":100,"query_clob":"with tmr as (select workspace, application_id, page_id, count(*) region_count\r\n            from apex_application_page_regions\r\n            having count(*) >= 50\r\n            group by workspace, application_id, page_id)\r\nselect 'N'  pass_yn,\r\n       tmr.application_id,\r\n       tmr.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       aap.last_updated_by,\r\n       aap.last_updated_on,\r\n       apex_string.format('Page %0 (app %1) has %2 regions. It is not recommended to have more than 20. Consider dividing the content between several pages.',\r\n                          p0 => tmr.application_id,\r\n                          p1 => tmr.page_id,\r\n                          p2 => tmr.region_count) validation_failure_message,\r\n       apex_string.format('Page %0 (app %1) has too many regions',\r\n                          tmr.application_id,\r\n                          tmr.page_id) issue_title,\r\n       tmr.region_count,\r\n\t\t\t aap.build_option,\r\n       abo.build_option_status,\r\n       abo.status_on_export,\r\n       tmr.page_id component_id,\r\n       null parent_component_id,\r\n\t\t\t tmr.workspace\r\nfrom tmr\r\ninner join apex_application_pages aap on  tmr.application_id = aap.application_id\r\n                                      and tmr.page_id = aap.page_id\r\nleft outer join apex_application_build_options abo on abo.application_id = aap.application_id \r\n                                                   and abo.build_option_name = aap.build_option\r\nwhere tmr.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\nand coalesce(abo.status_on_export,'NA') != 'Exclude'","test_code":"TOO_MANY_REGIONS","level_id":319367883342218894314577550181439009696,"mv_dependency":null,"svt_component_type_id":4,"explanation":"A page should not have more than 20 regions : Most reasonably complex pages should have no more than 20 regions per page. Only in extremely rare conditions should a page have more than 50 regions. Pages with more than 50 regions should be refactored into multiple pages.","fix":"Consider dividing the content between several pages","version_number":1,"version_db":"REDWOOD"},{"test_id":333394633001005518757851972073523795606,"test_name":"Page Items should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":390,"query_clob":"with std as (\r\n    select case when months_between (sysdate, api.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when api.condition_type = 'Never'\r\n                          then 'NEVERCONPAGEITEM'\r\n                          end\r\n                end child_code,\r\n           api.condition_type,\r\n           api.application_id,\r\n           api.page_id,\r\n           api.item_id component_id,\r\n           api.item_name,\r\n           api.last_updated_by,\r\n           api.last_updated_on,\r\n           api.build_option,\r\n\t         api.workspace\r\n    from apex_application_page_items api\r\n\t  where api.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('Item `%0` (page %1, app %2) should be available or deleted (%3). It has been unavailable since `%4`',\r\n                          p0 => std.item_name,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p3 => case when std.child_code = 'NEVERCONPAGEITEM'\r\n                                     then 'Never condition'\r\n                                     end,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('Item `%0` (page %1, app %2) should be available',\r\n                          p0 => std.item_name,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id) \r\n            end issue_title,\r\n\t   std.child_code,\r\n\t\t std.component_id,\r\n\t\t null parent_component_id,\r\n\t\t std.workspace\r\nfrom std","test_code":"PAGE_ITEM_AVAILABLE","level_id":319367883342218894314577550181439009696,"mv_dependency":null,"svt_component_type_id":7,"explanation":"Page Items should be made available or deleted : Page regions and items that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"Make item available or delete it","version_number":1,"version_db":"REDWOOD"},{"test_id":336311415566855481887463012662910400008,"test_name":"Themes should be specific numbers and subscribed","standard_id":292427565561508440301674749281201445673,"display_sequence":10,"query_clob":"with std as (select aats.theme_number, \r\n                    aats.subscribed_from, \r\n                    aats.is_subscribed,\r\n                    case when aats.theme_number not in (42,1000)\r\n                            then 'WRONGTHEME'\r\n                            when aats.subscribed_from is null \r\n                            then 'NOSUBSCRIPTION'\r\n                            when aats.theme_number = 1000\r\n                            then case when aats.subscribed_from != '9000. Redwood (Sky)'\r\n                                      then 'WRONGSUBSCRIPTION'\r\n                                      end\r\n                            else null\r\n                            end child_code, \r\n                    aats.application_id, \r\n                    null page_id,\r\n                    aats.created_by,\r\n                    aats.created_on,\r\n                    aats.last_updated_by,\r\n                    aats.last_updated_on,\r\n                    aats.theme_style_id component_id, \r\n                    null parent_component_id,\r\n\t\t\t\t\t\t        aats.workspace\r\n            from apex_application_theme_styles aats\r\n\t\t\t\t\t\twhere aats.is_current = 'Yes'\r\n\t\t\t\t\t\tand aats.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE'))\r\nselect case when std.child_code is not null \r\n            then 'N'\r\n            else 'Y'\r\n            end pass_yn,\r\n       std.application_id, \r\n       std.page_id,\r\n       std.created_by,\r\n       std.created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('The theme of App %0 %1',\r\n                          p0 => std.application_id,\r\n                          p1 => case when std.child_code = 'WRONGTHEME'\r\n                                     then 'is not an approved theme number. The theme number is '||std.theme_number||' but should be 42 or 1000'\r\n                                     when std.child_code = 'NOSUBSCRIPTION'\r\n                                     then 'is not subscribed to a master theme or the theme may need refreshing'\r\n                                     when std.child_code = 'WRONGSUBSCRIPTION'\r\n                                     then 'is subscribed to the wrong master theme (`'||std.subscribed_from||'`). It should be subscribed to `9000. Redwood (Sky)`'\r\n                                     end\r\n                ) \r\n            end validation_failure_message, \r\n       case when std.child_code is not null \r\n            then apex_string.format('The theme of App %0 %1',\r\n                          p0 => std.application_id,\r\n                          p1 => case when std.child_code = 'WRONGTHEME'\r\n                                     then 'is not an approved theme number'\r\n                                     when std.child_code = 'NOSUBSCRIPTION'\r\n                                     then 'is not subscribed to a master theme'\r\n                                     when std.child_code = 'WRONGSUBSCRIPTION'\r\n                                     then 'is subscribed to the wrong master theme'\r\n                                     end\r\n                ) \r\n            end issue_title,\r\n       std.child_code, \r\n       std.component_id, \r\n       std.parent_component_id,\r\n\t\t\t std.workspace\r\nfrom std","test_code":"THEME_SUBSCRIPTION","level_id":319367883342218894314577550181439009696,"mv_dependency":null,"svt_component_type_id":46,"explanation":"Themes should be subscribed and be 42 or 1000 :\r\n\r\n*   THEME\\_SUBSCRIPTION : Apps with Redwood should be subscribed to app 9000\r\n*   WRONGTHEME : The only approved theme numbers are 42 and 1000\r\n*   NOSUBSCRIPTION : Restore theme subscription or refresh it","fix":"Try refreshing the theme if everything \"looks\" correct.\r\n\r\n*   THEME\\_SUBSCRIPTION : Apps with Redwood should be subscribed to app 1000\r\n*   WRONGTHEME : The only approved theme numbers are 42 and 1000\r\n*   NOSUBSCRIPTION : Restore theme subscription or refresh it","version_number":1.2,"version_db":"AHA_APEX"},{"test_id":333391085367783106814242356381480156328,"test_name":"Regions should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":370,"query_clob":"with std as (\r\n    select case when months_between (sysdate, apr.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when apr.condition_type = 'Never'\r\n                          then 'NEVERCON'\r\n                          end\r\n                end child_code,\r\n           apr.condition_type,\r\n           apr.application_id,\r\n           apr.page_id,\r\n           apr.region_id component_id,\r\n           apr.region_name,\r\n           apr.last_updated_by,\r\n           apr.last_updated_on,\r\n           apr.build_option,\r\n\t         apr.workspace\r\n    from apex_application_page_regions apr\r\n\t  where apr.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('Region `%0` (page %1, app %2) should be available or deleted (%3). It has been unavailable since `%4`',\r\n                          p0 => std.region_name,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p3 => case when std.child_code = 'NEVERCON'\r\n                                     then 'Never condition'\r\n                                     end,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n\t\t\t\t\t\t\t\t\t\t\t\t) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('Region `%0` (page %1, app %2) should be available',\r\n                          p0 => std.region_name,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id) \r\n            end issue_title,\r\n\t   std.child_code,\r\n\t\t std.component_id,\r\n\t\t null parent_component_id,\r\n\t\t std.workspace\r\nfrom std","test_code":"AVAILABLE_REGION","level_id":319367883342218894314577550181439009696,"mv_dependency":null,"svt_component_type_id":5,"explanation":"Regions that are suppressed (with a Never condition, for eg) should be made available or deleted : Page regions and items that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"Remove the region or make it available","version_number":1,"version_db":"REDWOOD"},{"test_id":1889507966260714133506072128520464917,"test_name":"Map Layers should be available ","standard_id":292427565561508440301674749281201445673,"display_sequence":410,"query_clob":"with std as (\r\n    select case when months_between (sysdate, pml.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when pml.condition_type = 'Never'\r\n                          then 'NEVERMAPLAYERS'\r\n                          end\r\n                end child_code,\r\n           pml.condition_type,\r\n           pml.application_id,\r\n           pml.page_id,\r\n           pml.region_id,\r\n           pml.region_name,\r\n           pml.name element_name,\r\n           pml.last_updated_by,\r\n           pml.last_updated_on,\r\n           pml.build_option,\r\n\t         pml.layer_id component_id,\r\n\t         pml.workspace\r\n    from apex_appl_page_map_layers pml\r\n\t  where pml.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) should be made available or deleted. It has been unavailable since `%4`',\r\n                          p0 => 'Map Layer with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) has been unavailable for too long',\r\n                          p0 =>'Map Layer with Never condition `'||std.element_name||'`',\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end issue_title,\r\n\t   std.child_code,\r\n     std.element_name,\r\n\t\t std.component_id,\r\n\t\t null parent_component_id,\r\n\t\t std.workspace\r\nfrom std","test_code":"MAP_LAYERS_AVAILABLE","level_id":319367883342220103240397164810613715872,"mv_dependency":null,"svt_component_type_id":241,"explanation":"Region Operations and features (Validations, procedures, charts, card actions, map layers, search sources) should be available or deleted : \\* Charts that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"*   Make available or delete","version_number":1,"version_db":"REDWOOD"},{"test_id":333393785666038663263380132831185657845,"test_name":"Buttons should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":380,"query_clob":"with std as (\r\n    select case when months_between (sysdate, apb.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when apb.condition_type = 'Never'\r\n                          then 'NEVERCONBUTTON'\r\n                          end\r\n                end child_code,\r\n           apb.condition_type,\r\n           apb.application_id,\r\n           apb.page_id,\r\n           apb.button_id component_id,\r\n           apb.button_name,\r\n           apb.last_updated_by,\r\n           apb.last_updated_on,\r\n           apb.build_option,\r\n\t         apb.workspace\r\n    from apex_application_page_buttons apb\r\n\t  where apb.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('Button `%0` (page %1, app %2) should be available or deleted (%3). It has been unavailable since `%4`',\r\n                          p0 => std.button_name,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p3 => case when std.child_code = 'NEVERCONBUTTON'\r\n                                     then 'Never condition'\r\n                                     end,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('Button `%0` (page %1, app %2) should be available',\r\n                          p0 => std.button_name,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id) \r\n            end issue_title,\r\n\t   std.child_code,\r\n\t\t std.component_id,\r\n\t\t null parent_component_id,\r\n\t\t std.workspace\r\nfrom std","test_code":"BUTTON_AVAILABLE","level_id":319367883342218894314577550181439009696,"mv_dependency":null,"svt_component_type_id":8,"explanation":"Buttons should either be made available or deleted : Page regions and items that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"Make the button available or delete it","version_number":1,"version_db":"REDWOOD"},{"test_id":292407724756888456399463269242862479405,"test_name":"Applications are available","standard_id":292427565561508440301674749281201445673,"display_sequence":360,"query_clob":"select a2.pass_yn, \r\n       a2.application_id, \r\n\t\t\t null page_id,\r\n       a2.application_group,\r\n       a2.availability_status,\r\n       a2.created_by, \r\n       a2.created_on, \r\n       a2.last_updated_by, \r\n       a2.last_updated_on,\r\n       case when a2.pass_yn = 'N'\r\n            then issue_desc||' (this is only acceptable temporarily).'\r\n            end validation_failure_message,\r\n       case when a2.pass_yn = 'N'\r\n            then issue_desc\r\n\r\n            end issue_title,\r\n\t\t\ta2.application_id component_id,\r\n      null parent_component_id,\r\n\t\t\ta2.workspace\r\nfrom (\r\n     select \r\n     case when aa.application_group = 'TO BE ARCHIVED' or aa.availability_status = 'Unavailable'\r\n          then 'N'\r\n          else 'Y'\r\n          end pass_yn,\r\n     aa.application_id,\r\n     aa.application_group,\r\n     aa.availability_status,\r\n     aa.authorization_scheme,\r\n     aa.created_by, \r\n     aa.created_on, \r\n     aa.last_updated_by, \r\n     aa.last_updated_on,\r\n     apex_string.format(p_message => q'^Application %0 is unavailable^',\r\n                        p0 => aa.application_id) issue_desc,\r\n     aa.workspace\r\n     from v_apex_applications aa\r\n\t   where aa.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n) a2 ","test_code":"APP_AVAILABLE","level_id":299712008894515240349432973583165583501,"mv_dependency":null,"svt_component_type_id":1,"explanation":"APEX applications should be available and active : Workspaces should be populated by active applications","fix":"Either make the application available or archive it (delete it)","version_number":1,"version_db":"REDWOOD"},{"test_id":292427565561507231375855134652026739497,"test_name":"List entries should have valid build options","standard_id":292427565561508440301674749281201445673,"display_sequence":350,"query_clob":"select \r\na80.pass_yn,\r\na80.application_id,\r\nnull page_id,\r\na80.child_code,\r\na80.created_on,\r\na80.created_by,\r\na80.last_updated_by, \r\na80.last_updated_on,\r\ncase when a80.child_code = 'VAL_BUILD_LIST_ENTRY'\r\n     then apex_string.format(p_message => \r\n     q'^List entry (%3,%2) in list (%1, %0) has an invalid build option: %4 / %5^',\r\n     p0 => a80.component_id,\r\n     p1 => a80.list_name,\r\n     p2 => a80.entry_text,\r\n     p3 => a80.entry_target,\r\n     p4 => a80.build_option,\r\n     p5 => a80.build_option_status\r\n     )\r\n     when a80.child_code = 'LIST_ENTRY_BUILD_ABUSE'\r\n     then apex_string.format(p_message => \r\n     q'^List entry (%3,%2) in list (%1, %0) Excluded by build option for too long: %4 / %5^',\r\n     p0 => a80.component_id,\r\n     p1 => a80.list_name,\r\n     p2 => a80.entry_text,\r\n     p3 => a80.entry_target,\r\n     p4 => a80.build_option,\r\n     p5 => a80.build_option_status\r\n     )\r\n     end as validation_failure_message,\r\ncase when a80.child_code = 'VAL_BUILD_LIST_ENTRY'\r\n     then apex_string.format(p_message => \r\n     q'^Invalid build option for list entry (%2) in list (%1) in app %3^',\r\n     p0 => a80.component_id,\r\n     p1 => a80.list_name,\r\n     p2 => a80.entry_text,\r\n     p3 => a80.application_id\r\n     )\r\n     when a80.child_code = 'LIST_ENTRY_BUILD_ABUSE'\r\n     then apex_string.format(p_message => \r\n     q'^List entry (%2) Excluded by Build Option for too long - in list (%1) in app %3^',\r\n     p0 => a80.component_id,\r\n     p1 => a80.list_name,\r\n     p2 => a80.entry_text,\r\n     p3 => a80.application_id\r\n     )\r\n     end as issue_title,\r\na80.component_id,\r\na80.parent_component_id,\r\na80.workspace\r\nfrom (\r\n     select\r\n     case when bo.status_on_export = 'Exclude'\r\n          then case when ale.last_updated_on is null \r\n                    then 'N'\r\n                    when months_between (sysdate, ale.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                    then 'N'\r\n                    else 'Y'\r\n                    end\r\n          when ale.build_option is null\r\n          then 'Y'\r\n          when validate_conversion(ale.build_option as number) = 1 \r\n          then 'N'\r\n          else 'Y'\r\n          end pass_yn,\r\n     ale.application_id,\r\n     case when bo.status_on_export = 'Exclude'\r\n          then case when ale.last_updated_on is null \r\n                    then 'LIST_ENTRY_BUILD_ABUSE'\r\n                    when months_between (sysdate, ale.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                    then 'LIST_ENTRY_BUILD_ABUSE'\r\n                    end\r\n          when ale.build_option is null\r\n          then null\r\n          when validate_conversion(ale.build_option as number) = 1 \r\n          then 'VAL_BUILD_LIST_ENTRY'\r\n          end child_code,\r\n     ale.list_entry_id component_id,\r\n     ale.list_entry_parent_id parent_component_id,\r\n     ale.list_name,\r\n     ale.entry_text,\r\n     ale.entry_target,\r\n     ale.build_option,\r\n     aa.created_on,\r\n     aa.created_by,\r\n     ale.last_updated_by, \r\n     ale.last_updated_on,\r\n     bo.build_option_status,\r\n\t   bo.status_on_export,\r\n\t   ale.workspace\r\n     from apex_application_list_entries ale\r\n     inner join v_apex_applications aa on  ale.application_id = aa.application_id\r\n                                       and aa.availability_status != 'Unavailable'\r\n     left join apex_application_build_options bo on  ale.application_id = bo.application_id\r\n                                                 and ale.build_option = bo.build_option_name\r\n\t   where ale.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n) a80","test_code":"VAL_BUILD_LIST_ENTRY","level_id":319367883342216476462938320923089597344,"mv_dependency":null,"svt_component_type_id":2,"explanation":"\\[List Build Entries are invalid\\]\r\n\r\n*   LIST\\_ENTRY\\_BUILD\\_ABUSE : List Entry Excluded by Build Option for too long\r\n*   VAL\\_BUILD\\_LIST\\_ENTRY : The build option on this list entry is in an invalid state","fix":"*   LIST\\_ENTRY\\_BUILD\\_ABUSE : Remove the build or eliminate the page\r\n*   VAL\\_BUILD\\_LIST\\_ENTRY : Remove or replace the build option","version_number":1,"version_db":"REDWOOD"},{"test_id":292407724756887247473643654613687773229,"test_name":"Pages should have valid build options","standard_id":292427565561508440301674749281201445673,"display_sequence":340,"query_clob":"select \r\na90.pass_yn,\r\na90.application_id,\r\na90.child_code,\r\na90.page_id,\r\na90.page_name,\r\na90.created_by,\r\na90.created_on,\r\na90.last_updated_by, \r\na90.last_updated_on,\r\ncase when a90.child_code = 'VAL_PAGE_BUILD'\r\n     then apex_string.format(p_message => \r\n     q'^Invalid build_option (%0 / %1)^',\r\n     p0 => a90.build_option,\r\n     p1 => a90.build_option_status\r\n     )\r\n     when a90.child_code = 'PAGE_BUILD_ABUSE'\r\n     then apex_string.format(p_message => \r\n     q'^Excluded by Build Option for too long (%0 / %1)^',\r\n     p0 => a90.build_option,\r\n     p1 => a90.build_option_status\r\n     )\r\n     end as validation_failure_message,\r\ncase when a90.child_code = 'VAL_PAGE_BUILD'\r\n     then apex_string.format(p_message => \r\n     q'^Invalid build_option: %0 / %1 (app %2, page %3)^',\r\n     p0 => a90.build_option,\r\n     p1 => a90.build_option_status,\r\n     p2 => a90.application_id,\r\n     p3 => a90.page_id\r\n     )\r\n     when a90.child_code = 'PAGE_BUILD_ABUSE'\r\n     then apex_string.format(p_message => \r\n     q'^Excluded by Build Option for too long: %0 / %1 (app %2, page %3)^',\r\n     p0 => a90.build_option,\r\n     p1 => a90.build_option_status,\r\n     p2 => a90.application_id,\r\n     p3 => a90.page_id\r\n     )\r\n     end as issue_title,\r\na90.page_id component_id,\r\nnull parent_component_id,\r\na90.workspace\r\nfrom (\r\n     select\r\n     case when bo.status_on_export = 'Exclude'\r\n          then case when aap.last_updated_on is null \r\n                    then 'N'\r\n                    when months_between (sysdate, aap.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n\r\n                    then 'N'\r\n                    else 'Y'\r\n                    end\r\n          when aap.build_option is null\r\n          then 'Y'\r\n          when validate_conversion(aap.build_option as number) = 1 \r\n          then 'N'\r\n          else 'Y'\r\n          end pass_yn,\r\n     aap.application_id,\r\n     case when bo.status_on_export = 'Exclude'\r\n          then case when aap.last_updated_on is null \r\n                    then 'PAGE_BUILD_ABUSE'\r\n                    when months_between (sysdate, aap.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                    then 'PAGE_BUILD_ABUSE'\r\n                    end\r\n          when aap.build_option is null\r\n          then null\r\n          when validate_conversion(aap.build_option as number) = 1 \r\n          then 'VAL_PAGE_BUILD'\r\n          end child_code,\r\n     aap.page_id,\r\n     aap.page_name,\r\n     aap.build_option,\r\n     bo.build_option_status,\r\n\t   bo.status_on_export,\r\n     aap.created_by,\r\n     aap.created_on,\r\n     aap.last_updated_by, \r\n     aap.last_updated_on,\r\n\t   aap.workspace\r\n     from apex_application_pages aap\r\n     inner join v_apex_applications aa on  aa.application_id = aap.application_id\r\n                                       and aa.availability_status != 'Unavailable'\r\n     left join apex_application_build_options bo on aap.application_id = bo.application_id\r\n                                                 and aap.build_option = bo.build_option_name\r\n\t   where aap.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n) a90","test_code":"VAL_PAGE_BUILD","level_id":319367883342218894314577550181439009696,"mv_dependency":null,"svt_component_type_id":4,"explanation":"\\[Page builds are invalid\\]\r\n\r\n*   PAGE\\_BUILD\\_ABUSE : Page Excluded by Build Option for too long\r\n*   VAL\\_PAGE\\_BUILD : The build on this page is in an invalid state","fix":"*   PAGE\\_BUILD\\_ABUSE : Remove the build or eliminate the page\r\n*   VAL\\_PAGE\\_BUILD : Remove the build option.","version_number":1,"version_db":"REDWOOD"},{"test_id":1887688920940696839322426923892875035,"test_name":"Page dynamic actions should be available","standard_id":292427565561508440301674749281201445673,"display_sequence":400,"query_clob":"with std as (\r\n    select case when months_between (sysdate, apd.last_updated_on) > svt_preferences.get_preference ('AST_CLEANUP_DELAY')\r\n                then case when apd.condition_type = 'Never'\r\n                          then 'NEVERPAGEDA'\r\n                          end\r\n                end child_code,\r\n           apd.condition_type,\r\n           apd.application_id,\r\n           apd.page_id,\r\n           apd.dynamic_action_name element_name,\r\n           apd.last_updated_by,\r\n           apd.last_updated_on,\r\n           apd.build_option,\r\n           abo.build_option_status,\r\n           abo.status_on_export,\r\n\t         apd.workspace\r\n    from apex_application_page_da apd\r\n    inner join apex_application_pages aap on aap.application_id = apd.application_id\r\n                                          and aap.page_id = apd.page_id\r\n    left outer join apex_application_build_options abo on abo.application_id = aap.application_id \r\n                                                       and abo.build_option_name = aap.build_option\r\n    where apd.workspace = svt_preferences.get_preference ('SVT_DEFAULT_WORKSPACE')\r\n\t  and coalesce(abo.status_on_export,'NA') != 'Exclude'\r\n)\r\nselect case when std.child_code is null \r\n            then 'Y'\r\n            else 'N'\r\n            end pass_yn,\r\n       std.application_id,\r\n       std.page_id,\r\n       null created_by,\r\n       null created_on,\r\n       std.last_updated_by,\r\n       std.last_updated_on,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) should be made available or deleted. It has been unavailable since `%4`',\r\n                          p0 => case when std.child_code = 'NEVERPAGEBRANCH'\r\n                                     then 'Branch with Never condition `'||std.element_name||'`'\r\n                                     when std.child_code = 'NEVERPAGECOMP'\r\n                                     then 'Computation with Never condition `'||std.element_name||'`'\r\n                                     when std.child_code = 'NEVERPAGEDA'\r\n                                     then 'Dynamic Action with Never condition `'||std.element_name||'`'\r\n                                     end,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end validation_failure_message,\r\n       case when std.child_code is not null \r\n            then apex_string.format('%0 (page %1, app %2) has been unavailable for too long',\r\n                          p0 => case when std.child_code = 'NEVERPAGEBRANCH'\r\n                                     then 'Branch with Never condition `'||std.element_name||'`'\r\n                                     end,\r\n                          p1 => std.page_id,\r\n                          p2 => std.application_id,\r\n                          p4 => to_char(std.last_updated_on, 'DD-MON-YY')\r\n                        ) \r\n            end issue_title,\r\n\t     std.child_code,\r\n       std.element_name,\r\n\t\t\t std.page_id component_id,\r\n       null parent_component_id,\r\n\t\t\t std.workspace\r\nfrom std","test_code":"PAGE_DA_AVAILABLE","level_id":319367883342218894314577550181439009696,"mv_dependency":null,"svt_component_type_id":43,"explanation":"NEVERPAGEDA : Page dynamic actions that have had their Server-Side Condition set to \"Never\" (for whatever reason), should be removed. Including these items/regions just creates unnecessary app bloat.","fix":"*   Make available or remove","version_number":1,"version_db":"REDWOOD"}]}    
