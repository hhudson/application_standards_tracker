---
- # ====== Plugin: IR-Row-Selector =============================
  id: 401634189347162143
  identification: 
    name: IR-Row-Selector
    internal-name: IR_ROW_SELECTOR
    type: Template Component

  advanced: 
    quick-pick: false

  templates: 
    available-as: 
    - Single (Partial)
    partial: |
      {if !SHOW_YN_FIELD/}
      <span 
          class="irrs u-selector" 
          role="checkbox" 
          aria-checked="false" 
          aria-label="Select Row" 
          title="Select Row" 
          tabindex="0" 
          data-primarykey ="#ID#"
          data-outputitem = "#OUTPUT_ITEM#"
          id = "irrs-#ID#"
          onclick="javascript:irrs.MngPK(this);"
      >
      </span>
      {else/}
      <span></span>
      {endif/}
    translate-templates: false
    default-escape-mode: HTML

  callbacks: 
    api-interface: Procedure

  custom-attributes: 
    substitute-attribute-values: true

  javascript: 
    file-urls: 
    - '#PLUGIN_FILES#irrs.js'

  information: 
    version: 1.0
    about-url: 'https://github.com/hhudson/IR_row_selector_template_component_plugin'
    help-text: |
      This column type imitates some of the functionality of the APEX$ROW_SELECTOR field of Interactive Grids. 
      
      The selected values are stored in a javascript array named 'irrs.PKs'. 
      
      For 'Select All' functionality, add the following code in the heading field : <span class="irrsHeader u-selector" role="checkbox" aria-checked="false" aria-label="Select All Rows" title="Select All" aria-disabled="false" onclick="javascript:irrs.SelectAll(this);"></span>

  custom-attributes: 
  - # ====== Custom Attribute: Output Page Item ==================
    id: 389946139094376556
    identification: 
      static-id: OUTPUT_ITEM
      attribute: 2
      name: Output Page Item
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      set-text-case: Uppercase
      escape-mode: HTML

    help: 
      help-text: Select a Page Item into which the comma-separated list of selected "Primary Keys" should be written, e.g. "P1_SELECTED_IDS"

    examples: 
      examples: Try it! If "P1_SELECTED_IDS" is the name of your chosen "output item", select a few values in your IR and run "apex.item('P1_SELECTED_IDS').getValue()" in your console.
      demo-value: P1_SELECTED_IDS

  - # ====== Custom Attribute: Show Selector Y/N Field ===========
    id: 390095561440330668
    identification: 
      static-id: SHOW_YN_FIELD
      attribute: 4
      name: Show Selector Y/N Field
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: Do you have a field that returns ’F’, ‘N’, or ‘0’ to indicate that a selector box should not be shown? Put it here.

    examples: 
      examples: eg 'SHOW_SELECTOR_YN'
      demo-value: SHOW_SELECTOR_YN

  - # ====== Custom Attribute: Primary Key Column ================
    id: 401634488481162191
    identification: 
      static-id: ID
      attribute: 1
      name: Primary Key Column
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

    help: 
      help-text: The "primary key column" determines what values are injected into the irrs.PKs javascript array.

    examples: 
      examples: Try it! Selected a few values and run "irrs.PKs" in your console
      demo-value: ID

  files: 
  - # ====== File: irrs.js =======================================
    id: 401636480580211935
    identification: 
      file-name: irrs.js

    attributes: 
      mime-type: text/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: irrs.min.js ===================================
    id: 427601691931952309
    identification: 
      file-name: irrs.min.js

    attributes: 
      mime-type: text/javascript
      file-character-set: Unicode UTF-8

- # ====== Plugin: Publish Test Button =========================
  id: 432410385197786759
  identification: 
    name: Publish Test Button
    internal-name: PUBLISH BUTTON
    type: Template Component

  advanced: 
    quick-pick: false

  templates: 
    available-as: 
    - Single (Partial)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <div></div>
      {else/}
          {case ACTIVE_YN/}
              {when Yes/}
                  {case PUBLISH_YN/}
                      {when No/}
                      <button type="button" 
                          class="t-Button t-Button--icon t-Button--warning t-Button--simple t-Button--iconLeft publishRpt"
                          data-stdcd="#TEST_CODE#">
                      <span aria-hidden="true" class="t-Icon t-Icon--left fa fa-print"></span>
                      {if ?LIB_MD5/}
                          Update
                      {else/}
                          Publish
                      {endif/}
                      </button>
                  {endcase/}
          {endcase/}
      {endif/}
    translate-templates: false
    default-escape-mode: HTML

  callbacks: 
    api-interface: Procedure

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 1.0

  custom-attributes: 
  - # ====== Custom Attribute: Test Code =========================
    id: 432411505122786764
    identification: 
      static-id: TEST_CODE
      attribute: 3
      name: Test Code
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

  - # ====== Custom Attribute: Active yes/no =====================
    id: 443371752881497943
    identification: 
      static-id: ACTIVE_YN
      attribute: 6
      name: Active yes/no
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

  - # ====== Custom Attribute: Published yes/no ==================
    id: 443373621401550377
    identification: 
      static-id: PUBLISH_YN
      attribute: 4
      name: Published yes/no
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

  - # ====== Custom Attribute: Lib MD5 ===========================
    id: 444769188798021244
    identification: 
      static-id: LIB_MD5
      attribute: 7
      name: Lib MD5
      scope: Component

    layout: 
      sequence: 90

    settings: 
      type: Session State Value
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2
      escape-mode: HTML

- # ====== Plugin: IR Checkbox =================================
  id: 443921577243464923
  identification: 
    name: IR Checkbox
    internal-name: IR_CHECKBOX
    type: Template Component

  advanced: 
    quick-pick: false

  templates: 
    available-as: 
    - Single (Partial)
    - Multiple (Report)
    partial: |
      {if APEX$IS_LAZY_LOADING/}
        <div></div>
      {else/}
        <span class="ir-custom-chkbx u-selector" 
              role="checkbox" 
              aria-checked="false" 
              aria-label="Select Row" 
              title="Select Row">
        </span>
      {endif/}
    report-body: <ul>#APEX$ROWS# hhh report body</ul>
    report-row: '<li #APEX$ROW_IDENTIFICATION#>#APEX$PARTIAL# hhh report row</li>'
    translate-templates: false
    default-escape-mode: HTML
    number-of-lazy-loading-skeletons: 3

  callbacks: 
    api-interface: Procedure

  custom-attributes: 
    substitute-attribute-values: true

  javascript: 
    file-urls: 
    - var thid = $('.ir-custom-chkbx').closest('table').find('th').eq($('.ir-custom-chkbx').index()).attr('id');

  information: 
    version: 1.0
    help-text: Place `<span class="u-selector" role="checkbox" aria-checked="false" aria-label="Select All Rows" title="Select All" aria-disabled="false">` into the column heading

- # ====== Plugin: CodeMirror ==================================
  id: 514924212648003211
  identification: 
    name: CodeMirror
    internal-name: COM.APEXBYG.BLOGSPOT.CODEMIRROR
    type: Item

  advanced: 
    quick-pick: false

  source: 
    pl/sql-code: |2
        -----------------------------------------------------------------------------
        -- PROCEDURE p_render
        -- %usage: plugin render function
        procedure p_render (
          p_item   in            apex_plugin.t_item,
          p_plugin in            apex_plugin.t_plugin,
          p_param  in            apex_plugin.t_item_render_param,
          p_result in out nocopy apex_plugin.t_item_render_result
        ) 
        as
          v_js_code  varchar2(4000);
          v_readonly varchar2(100);
          v_autocomplete_hints  varchar2(32676);
        begin
          --apex_Debug.enable;
      
          -- debug
          if apex_application.g_debug then
            apex_plugin_util.debug_page_item(p_plugin              => p_plugin
                                           , p_page_item           => p_item);
          end if;
      
          if p_param.is_readonly then
            v_readonly := 'nocursor';
          else
            v_readonly := 'false';    
          end if;
      
          -- output item
          sys.htp.prn('<textarea id="'||p_item.name||'" name="'||p_item.name||'">'||sys.htf.escape_sc(p_param.value)||'</textarea>');
      
          -- add files
          apex_javascript.add_library (
             p_name                    => 'lib/codemirror/codemirror'
            ,p_directory               => p_plugin.file_prefix
            ,p_version                 => null
            ,p_check_to_add_minified   => false
            ,p_skip_extension          => false
            );
      
          apex_javascript.add_library (
             p_name                    => 'lib/codemirror/mode/sql/sql'
            ,p_directory               => p_plugin.file_prefix
            ,p_version                 => null
            ,p_check_to_add_minified   => false
            ,p_skip_extension          => false
            );      
      
          apex_javascript.add_library (
             p_name                    => 'lib/codemirror/addon/edit/closebrackets'
            ,p_directory               => p_plugin.file_prefix
            ,p_version                 => null
            ,p_check_to_add_minified   => false
            ,p_skip_extension          => false
            );           
      
          apex_javascript.add_library (
             p_name                    => 'lib/codemirror/addon/hint/show-hint'
            ,p_directory               => p_plugin.file_prefix
            ,p_version                 => null
            ,p_check_to_add_minified   => false
            ,p_skip_extension          => false
            );           
      
          apex_javascript.add_library (
             p_name                    => 'js/codemirror_custom'
            ,p_directory               => p_plugin.file_prefix
            ,p_version                 => null
            ,p_check_to_add_minified   => true
            ,p_skip_extension          => false
            ); 
      
      
          -- CSS  
          apex_css.add_file (
             p_name           => 'lib/codemirror/codemirror'
            ,p_directory      => p_plugin.file_prefix
            ,p_version        => null
            ,p_skip_extension => false); 
      
          apex_css.add_file (
             p_name           => 'lib/codemirror/addon/hint/show-hint'
            ,p_directory      => p_plugin.file_prefix
            ,p_version        => null
            ,p_skip_extension => false);      
      
          apex_css.add_file (
             p_name           => 'css/codemirror_custom'
            ,p_directory      => p_plugin.file_prefix
            ,p_version        => null
            ,p_skip_extension => false);
      
          if p_item.attribute_03 is not null then    
            v_autocomplete_hints := apex_plugin_util.get_plsql_function_result(p_item.attribute_03);
            apex_javascript.add_inline_code('var vAutocompleteHints_'||p_item.name||' = '||v_autocomplete_hints);
          end if;
      
          v_js_code := 'apex.jQuery("textarea#'||p_item.name||'").codemirror_plugin({"config":';
          
          if p_item.init_javascript_code is not null then
            v_js_code := v_js_code||'('||p_item.init_javascript_code||')';
          end if;
      
          v_js_code := v_js_code||'({}),';
          
          v_js_code :=  v_js_code ||        
            apex_javascript.add_attribute('readonly', p_param.is_readonly, p_add_comma => true)||
            apex_javascript.add_attribute('ignoreChanged', p_item.ignore_change, p_add_comma => true)||
            apex_javascript.add_attribute('ajaxId', apex_plugin.get_ajax_identifier, p_add_comma => true)||
            apex_javascript.add_attribute('runInFullscreen', (case when p_item.attribute_01 = 'Y' then true else false end), p_add_comma => true)||      
            apex_javascript.add_attribute('autocomplete', (case when p_item.attribute_02 = 'Y' then true else false end), p_add_comma => true)||
            apex_javascript.add_attribute('validateCode', (case when p_item.attribute_04 = 'Y' then true else false end), p_add_comma => true)      
         ;  
         
         if v_autocomplete_hints is not null then
          v_js_code :=  v_js_code || '"autocompleteHints":vAutocompleteHints_'||p_item.name||','; 
         end if; 
          v_js_code :=  v_js_code || apex_javascript.add_attribute('itemName', p_item.name, p_add_comma => false)||
          '});';
          apex_javascript.add_onload_code (p_code => v_js_code);      
        end p_render;
      
         -----------------------------------------------------------------------------
        -- PROCEDURE p_ajax_call
        -- %usage: plugin ajax call for code completion    
        procedure p_ajax_call (
          p_item   in            apex_plugin.t_item,
          p_plugin in            apex_plugin.t_plugin,
          p_param  in            apex_plugin.t_item_ajax_param,
          p_result in out nocopy apex_plugin.t_item_ajax_result 
        )
        is
          --v_scope  logger_logs.scope%type := gc_scope_prefix || 'p_ajax_call';
          --v_params logger.tab_param;  
        
        
          v_response  varchar2(32767);
          v_binds     apex_plugin_util.t_bind_list := apex_plugin_util.c_empty_bind_list; 
          v_autocomplete_hints  varchar2(32676);
          
          -- internal response message
          procedure p_msg (
              p_msg       varchar2
            , p_msg_type  varchar2 default 'S'
          )
          is
          begin
             apex_json.flush;
             apex_json.initialize_clob_output;
             apex_json.open_object;
             apex_json.write('msgType', p_msg_type);
             apex_json.write('msg', p_msg);         
             apex_json.close_object;  
             sys.htp.init;
             sys.htp.prn(apex_json.get_clob_output);
             apex_json.free_output;
          end p_msg;
        begin
          --logger.log('START', --v_scope, null, --v_params);  
        
          case
            when apex_application.g_x01 = 'VALIDATE' then
              v_binds(1).name := 'CODE';
              v_binds(1).value := apex_application.g_x02;
              
              -- add hints to validate
              if p_item.attribute_03 is not null then  
                if instr(lower(p_item.attribute_05), ':hints') > 0 then
                  v_autocomplete_hints := apex_plugin_util.get_plsql_function_result(p_item.attribute_03);        
                  v_binds(2).name := 'HINTS';
                  v_binds(2).value := v_autocomplete_hints;
                end if;          
              end if;  
              
              --v_response := f_validate_code(apex_application.g_x02);        
              v_response := apex_plugin_util.get_plsql_function_result(
                  p_plsql_function => p_item.attribute_05
                , p_bind_list => v_binds  
              );
              if v_response is null then
                v_response := apex_lang.message('PLUGIN.CODEMIRROR.VAL_SUCCESSFUL');
                if v_response = 'PLUGIN.CODEMIRROR.VAL_SUCCESSFUL' then
                  v_response := 'Validation successful';
                end if;
                p_msg(v_response);          
              else
                p_msg(v_response, 'E');
              end if;
            else
              raise_application_error(-20001, 'Unknown request type: '||apex_application.g_x01);
          end case;
          --logger.log('END v_response: '||v_response, --v_scope);        
        exception
          when others then
            --logger.log('END error: '||sqlerrm, --v_scope);    
            p_msg(sqlerrm, 'E');      
       end p_ajax_call;

  callbacks: 
    api-interface: Procedure
    render-procedure/function-name: p_render
    ajax-procedure/function-name: p_ajax_call

  supported-for: 
    component-type: 
    - Page Items

  standard-attributes: 
    attributes: 
    - Is Visible Widget
    - Standard Form Element
    - Session State Changeable
    - Has Read Only Attribute
    - Has Source Attributes
    - Has "Initialization JavaScript Code" Attribute

  custom-attributes: 
    substitute-attribute-values: true

  files: 
    file-prefix: '&G_APEX_NITRO_IMAGES.'

  information: 
    version: 1.0.4
    about-url: 'https://apex.oracle.com/pls/apex/f?p=apexbyg:codeeditor'
    help-text: 'More info on https://github.com/mgoricki/apex-plugin-code-editor'

  standard-attributes: 
  - # ====== Standard Attribute: INIT_JAVASCRIPT_CODE ============
    id: 520013009313377523
    identification: 
      name: INIT_JAVASCRIPT_CODE

    value: 
      required: false

    help: 
      help-text: |
        function(config){
          config.autocomplete = true;
          return config
        }

    examples: 
      examples: |
        function(config){
          config.autocomplete = true;
          return config
        }

  custom-attributes: 
  - # ====== Custom Attribute: Autocomplete ======================
    id: 453692064043982473
    identification: 
      attribute: 2
      name: Autocomplete
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: N

  - # ====== Custom Attribute: Autocomplete Hints ================
    id: 453696587112986903
    identification: 
      attribute: 3
      name: Autocomplete Hints
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: PL/SQL Function Body Returning VARCHAR2
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Autocomplete # 453692064043982473
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: |
        Needs to return JS array of hints<br />
        <pre>
        [
          {text:'P$CONTRACT_SD', displayText:'P$CONTRACT_SD - display option'},
          {text:'PB$PB_MAX_POLICIES', displayText:'PB$PB_MAX_POLICIES - display option'},
          {text:'P$NET_LOAN_INT_PCT', displayText:'P$NET_LOAN_INT_PCT - display option'},
          {text:'P$EFF_DATE', displayText:'P$EFF_DATE - display option'}
        ]
        </pre>

    examples: 
      examples: |
        <pre>
        DECLARE
          v_return CLOB;
        BEGIN
          apex_json.initialize_clob_output;
        
          apex_json.open_array;
            apex_json.open_object;
                apex_json.write('text', 'P$TEST_PARAM');
                apex_json.write('displayText', 'P$TEST_PARAM - with descripto');
            apex_json.close_object;
            apex_json.open_object;
                apex_json.write('text', 'PR$PARAM_TEST');
                apex_json.write('displayText', 'PR$PARAM_TEST - with descripton');
            apex_json.close_object;
          apex_json.close_array;
          v_return := apex_json.get_clob_output;
          apex_json.free_output;
          return v_return;
        END;
        </pre>

  - # ====== Custom Attribute: Validate Code =====================
    id: 456510851020290542
    identification: 
      attribute: 4
      name: Validate Code
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: N

    help: 
      help-text: Validate Codee

  - # ====== Custom Attribute: Validate Function Name ============
    id: 458116003773772481
    identification: 
      attribute: 5
      name: Validate Function Name
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: PL/SQL Function Body Returning VARCHAR2
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Validate Code # 456510851020290542
      depending-on-condition-type: equal to
      expression: Y
      always-evaluate: true

    help: 
      help-text: |
        Enter function name that excepts code to validate as the first parameter and returns validation message as the second parameter.
        Make sure that function is available to the parsing schema.

    examples: 
      examples: |
        <pre>
        pck_code_edior_plugin.f_validate_code
        </pre>

  - # ====== Custom Attribute: Run in Fullscreen =================
    id: 488637180532242068
    identification: 
      attribute: 1
      name: Run in Fullscreen
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: N

  files: 
  - # ====== File: lib/codemirror/mode/sql/index.html ============
    id: 453793870112211632
    identification: 
      file-name: lib/codemirror/mode/sql/index.html

    attributes: 
      mime-type: text/html
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/hint/anyword-hint.js =====
    id: 453794708923211706
    identification: 
      file-name: lib/codemirror/addon/hint/anyword-hint.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/hint/xml-hint.js =========
    id: 453795779409211774
    identification: 
      file-name: lib/codemirror/addon/hint/xml-hint.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/hint/html-hint.js ========
    id: 453796060306211795
    identification: 
      file-name: lib/codemirror/addon/hint/html-hint.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/hint/sql-hint.js =========
    id: 453796472633211816
    identification: 
      file-name: lib/codemirror/addon/hint/sql-hint.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/hint/css-hint.js =========
    id: 453796877160211835
    identification: 
      file-name: lib/codemirror/addon/hint/css-hint.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/hint/javascript-hint.js ==
    id: 453797235289211860
    identification: 
      file-name: lib/codemirror/addon/hint/javascript-hint.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/edit/continuelist.js =====
    id: 453797552642211883
    identification: 
      file-name: lib/codemirror/addon/edit/continuelist.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/edit/closetag.js =========
    id: 453797983197211905
    identification: 
      file-name: lib/codemirror/addon/edit/closetag.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/edit/matchtags.js ========
    id: 453798336878211926
    identification: 
      file-name: lib/codemirror/addon/edit/matchtags.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/edit/matchbrackets.js ====
    id: 453799088744211967
    identification: 
      file-name: lib/codemirror/addon/edit/matchbrackets.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/edit/trailingspace.js ====
    id: 453799380102211990
    identification: 
      file-name: lib/codemirror/addon/edit/trailingspace.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror_5.34.0/codemirror.js ===========
    id: 453799786387212083
    identification: 
      file-name: lib/codemirror_5.34.0/codemirror.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror_5.34.0/mode/sql/sql.js =========
    id: 453800054757212111
    identification: 
      file-name: lib/codemirror_5.34.0/mode/sql/sql.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror_5.34.0/codemirror.css ==========
    id: 453800414818212135
    identification: 
      file-name: lib/codemirror_5.34.0/codemirror.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror_5.34.0/addon/hint/show-hint.css 
    id: 453800854866212159
    identification: 
      file-name: lib/codemirror_5.34.0/addon/hint/show-hint.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror_5.34.0/addon/hint/show-hint.js =
    id: 453801194053212184
    identification: 
      file-name: lib/codemirror_5.34.0/addon/hint/show-hint.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror_5.34.0/addon/edit/closebrackets.
    id: 453801515032212208
    identification: 
      file-name: lib/codemirror_5.34.0/addon/edit/closebrackets.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: css/codemirror_custom.min.css =================
    id: 476785561596677333
    identification: 
      file-name: css/codemirror_custom.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/codemirror_custom.css =====================
    id: 476785867992677338
    identification: 
      file-name: css/codemirror_custom.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: css/codemirror_custom.css.map =================
    id: 476786218985677340
    identification: 
      file-name: css/codemirror_custom.css.map

    attributes: 
      mime-type: application/octet-stream
      file-character-set: Unicode UTF-8

  - # ====== File: js/codemirror_custom.min.js ===================
    id: 476786679460677342
    identification: 
      file-name: js/codemirror_custom.min.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: js/codemirror_custom.js =======================
    id: 476787077322677345
    identification: 
      file-name: js/codemirror_custom.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: js/codemirror_custom.js.map ===================
    id: 476787464013677347
    identification: 
      file-name: js/codemirror_custom.js.map

    attributes: 
      mime-type: application/octet-stream
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/codemirror.js ==================
    id: 476787806689677351
    identification: 
      file-name: lib/codemirror/codemirror.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/mode/sql/sql.js ================
    id: 476788215607677354
    identification: 
      file-name: lib/codemirror/mode/sql/sql.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/codemirror.css =================
    id: 476788637641677357
    identification: 
      file-name: lib/codemirror/codemirror.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/hint/show-hint.css =======
    id: 476789065470677363
    identification: 
      file-name: lib/codemirror/addon/hint/show-hint.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/hint/show-hint.js ========
    id: 476789482641677365
    identification: 
      file-name: lib/codemirror/addon/hint/show-hint.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

  - # ====== File: lib/codemirror/addon/edit/closebrackets.js ====
    id: 476789825208677368
    identification: 
      file-name: lib/codemirror/addon/edit/closebrackets.js

    attributes: 
      mime-type: application/x-javascript
      file-character-set: Unicode UTF-8

- # ====== Plugin: Mini Calendar ===============================
  id: 7862432833991939401
  identification: 
    name: Mini Calendar
    internal-name: COM.ORACLE.APEX.MINICALENDAR
    type: Region

  advanced: 
    quick-pick: false

  source: 
    pl/sql-code: |
      procedure render_mini_calendar( p_region in apex_plugin.t_region ) is
          c_date_col  constant varchar2(255) := p_region.attribute_01;
          c_label_col constant varchar2(255) := p_region.attribute_02;
      
          l_date_col_no  pls_integer;
          l_label_col_no pls_integer;
      
          c_collection constant varchar2(255) := 'APEX$MINICALENDAR$'||rawtohex(sys_guid());
          l_column_value_list    apex_plugin_util.t_column_value_list2;
      
          l_region_source        varchar2(32767) := p_region.source;
      
          --
          l_date  timestamp with local time zone;
          l_label varchar2(2000);
          l_found boolean;
          l_count number;
      
          cursor dt_csr is
              select c001 label, d001 the_date
              from apex_collections
              where collection_name = c_collection
              order by d001 asc;
          dt_rec dt_csr%ROWTYPE;
      
          -- Variables for knowing what to display.
          l_startdate  date;
          l_enddate    date;
          l_daycount   number;
          l_month      varchar2(6);
      
          l_class      varchar2(512) := '';
          l_disp       varchar2(255)  := '';
          l_id         varchar2(512) := p_region.static_id;
      begin
          -- get the data to be displayed
          l_column_value_list := apex_plugin_util.get_data2 (
                                     p_sql_statement  => l_region_source,
                                     p_min_columns    => 2,
                                     p_max_columns    => null,
                                     p_component_name => p_region.name,
                                     p_max_rows       => null );
      
          -- Get the actual column number for the fields we want.
          l_date_col_no := apex_plugin_util.get_column_no (
                              p_attribute_label   => 'Date column',
                              p_column_alias      => c_date_col,
                              p_column_value_list => l_column_value_list,
                              p_is_required       => true,
                              p_data_type         => null -- might be date, timestamp, etc.
                          );
      
          l_label_col_no := apex_plugin_util.get_column_no (
                              p_attribute_label   => 'Label column',
                              p_column_alias      => c_label_col,
                              p_column_value_list => l_column_value_list,
                              p_is_required       => true,
                              p_data_type         => apex_plugin_util.c_data_type_varchar2
                          );
      
          apex_collection.create_or_truncate_collection( p_collection_name => c_collection );
          -- Loop through the data and shove it into the collection for ease of access.
          for l_row_num in 1..l_column_value_list(1).value_list.count loop
              l_found := true;
              if l_column_value_list(l_date_col_no).value_list(l_row_num).date_value is not null then
                  l_date := l_column_value_list(l_date_col_no).value_list(l_row_num).date_value;
              elsif l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_value is not null then
                  l_date := l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_value;
              elsif l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_tz_value is not null then
                  l_date := l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_tz_value;
              elsif l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_ltz_value is not null then
                  l_date := l_column_value_list(l_date_col_no).value_list(l_row_num).timestamp_ltz_value;
              else
                  -- Couldn't get a usable date value; ignore this row.
                  l_found := false;
              end if;
              if l_found then
                  select count(*) into l_count
                  from apex_collections
                  where collection_name = c_collection
                      and d001 = trunc(l_date);
      
                  if l_count = 0 then
                      l_label := apex_plugin_util.escape(
                                  apex_plugin_util.get_value_as_varchar2(
                                      p_data_type => l_column_value_list(l_label_col_no).data_type,
                                      p_value     => l_column_value_list(l_label_col_no).value_list(l_row_num) ),
                                  p_region.escape_output );
                      apex_collection.add_member(
                          p_collection_name => c_collection,
                          p_c001            => l_label,
                          p_d001            => trunc(l_date)
                      );
                  end if;
              end if;
          end loop;
      
          open dt_csr;
          fetch dt_csr into dt_rec;
          if dt_csr%FOUND then
              l_date  := dt_rec.the_date;
              l_label := dt_rec.label;
          else
              l_date  := trunc(localtimestamp);
              l_label := 'Today';
          end if;
      
          -- Print the calendar header.
          sys.htp.prn('<div class="a-MiniCal">');
          sys.htp.prn('<h3 class="a-MiniCal-title">'||to_char(l_date, 'Month')||' '||to_char(l_date,'YYYY')||'</h3>');
          sys.htp.prn('<table class="a-MiniCal-month" summary="Calendar of '||to_char(l_date, 'Month')||' '||to_char(l_date,'YYYY')||'">');
          sys.htp.prn('<thead>');
          sys.htp.prn('<tr>');
          sys.htp.prn('<th class="a-MiniCal-dayOfWeek" scope="col" id="'||l_id||'_SUN" title="Sunday">Su</th>');
          sys.htp.prn('<th class="a-MiniCal-dayOfWeek" scope="col" id="'||l_id||'_MON" title="Monday">Mo</th>');
          sys.htp.prn('<th class="a-MiniCal-dayOfWeek" scope="col" id="'||l_id||'_TUE" title="Tuesday">Tu</th>');
          sys.htp.prn('<th class="a-MiniCal-dayOfWeek" scope="col" id="'||l_id||'_WED" title="Wednesday">We</th>');
          sys.htp.prn('<th class="a-MiniCal-dayOfWeek" scope="col" id="'||l_id||'_THU" title="Thursday">Th</th>');
          sys.htp.prn('<th class="a-MiniCal-dayOfWeek" scope="col" id="'||l_id||'_FRI" title="Friday">Fr</th>');
          sys.htp.prn('<th class="a-MiniCal-dayOfWeek" scope="col" id="'||l_id||'_SAT" title="Saturday">Sa</th>');
          sys.htp.prn('</tr>');
          sys.htp.prn('</thead>');
          -- Print the calendar body.
          sys.htp.prn('<tbody>');
          -- Do some quick manipulation to get the day of the week that the first of the month
           --  lands on, and then shift our starting date to the first day of that week.
          l_startdate := trunc(l_date,'MM') - to_char(trunc(l_date,'MM'),'D') + 1;
          l_enddate := last_day(l_date) + 7-to_char(last_day(l_date),'D');
          l_month := to_char(l_date,'YYYYMM');
      
          for l_daycount in 0..(l_enddate - l_startdate) loop
              l_class := '';
              l_disp := to_char(l_startdate+l_daycount,'fmDD');
              -- If the day isn't part of the month being displayed, grey it out.
              if to_char(l_startdate+l_daycount,'YYYYMM') <> l_month then
                  l_class := 'is-null';
                  l_disp := '<span class="a-MiniCal-date">'||l_disp||'</span>';
              else
                  if to_char(l_startdate+l_daycount,'D') in ('1','7') then
                      l_class := l_class || 'is-weekend ';
                      l_disp := '<span class="a-MiniCal-date">'||l_disp||'</span>';
                  end if;
                  if l_month = to_char(localtimestamp,'YYYYMM')
                          and l_startdate+l_daycount = current_date then
                      l_class := l_class || 'is-today ';
                      l_disp := '<span class="a-MiniCal-date">'||l_disp||'</span>';
                  end if;
                  if to_char(l_startdate+l_daycount,'YYYYMMDD')
                          = to_char(l_date,'YYYYMMDD') then
                      l_class := l_class || 'is-active ';
                      l_disp := '<span class="a-MiniCal-date" title="'||l_label||'">'||l_disp||'</span>';
                  end if;
              end if;
              if to_char(l_startdate+l_daycount,'D') = '1' then
                  sys.htp.prn('<tr>');
              end if;
              sys.htp.prn('<td class="a-MiniCal-day '||l_class||'" headers="'||l_id||'_'||to_char(l_startdate+l_daycount,'DY')||'">'||l_disp||'</td>');
              if to_char(l_startdate+l_daycount,'D') = '7' then
                  sys.htp.prn('</tr>');
              end if;
              if to_char(l_startdate+l_daycount,'YYYYMMDD') = to_char(l_date,'YYYYMMDD') then
                  fetch dt_csr into dt_rec;
                  if dt_csr%FOUND then
                      l_date  := dt_rec.the_date;
                      l_label := dt_rec.label;
                  end if;
              end if;
          end loop;
          close dt_csr;
      
          -- Clean up after ourselves.
          apex_collection.delete_collection( p_collection_name => c_collection );
      
          sys.htp.prn('</tbody>');
          sys.htp.prn('</table>');
          sys.htp.prn('</div>');
      end render_mini_calendar;
      
      function render ( p_region in apex_plugin.t_region,
          p_plugin in apex_plugin.t_plugin, p_is_printer_friendly in boolean )
          return apex_plugin.t_region_render_result is
      begin
          -- CSS for the Gantt Chart
          apex_css.add_file (
              p_name => 'com_oracle_apex_minicalendar',
              p_directory => p_plugin.file_prefix );
      
          render_mini_calendar( p_region );
          return null;
      end;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render

  standard-attributes: 
    attributes: 
    - Region Source is SQL Statement [Deprecated]
    - Has "Escape Special Characters" Region Attribute

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 5.0.1
    help-text: This region plug-in displays a small calendar with the specified date highlighted.

  standard-attributes: 
  - # ====== Standard Attribute: SOURCE_SQL ======================
    id: 7275262178010586202
    identification: 
      name: SOURCE_SQL

    value: 
      required: true

    settings: 
      minimum-columns: 1

    examples: 
      examples: |
        The query must return at least two columns--a date and its label (other columns will be ignored). The calendar will display for the earliest date returned, highlighting all dates returned within that month.
        
        <pre>
        select date_value, label_value
        from ...
        </pre>

  custom-attributes: 
  - # ====== Custom Attribute: Date Column =======================
    id: 8717606182037710161
    identification: 
      attribute: 1
      name: Date Column
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Date
      - Timestamp
      - Timestamp with Time Zone
      - Timestamp with Local Time Zone

    help: 
      help-text: Select the column from the region SQL Query which holds the single date value for the calendar.

  - # ====== Custom Attribute: Label Column ======================
    id: 8717606519321710161
    identification: 
      attribute: 2
      name: Label Column
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which holds the label for the calendar.

  files: 
  - # ====== File: com_oracle_apex_minicalendar.css ==============
    id: 8717607904241710162
    identification: 
      file-name: com_oracle_apex_minicalendar.css

    attributes: 
      mime-type: text/css

- # ====== Plugin: Authorization Administration ================
  id: 7863662832270851087
  identification: 
    name: Authorization Administration
    internal-name: COM.ORACLE.AUTH_ADMINISTRATION
    type: Region

  advanced: 
    quick-pick: false

  source: 
    pl/sql-code: |
      function auth_admin (   p_region              in apex_plugin.t_region,
                              p_plugin              in apex_plugin.t_plugin,
                              p_is_printer_friendly in boolean ) return apex_plugin.t_region_render_result is
          l_retval         apex_plugin.t_region_render_result;
          --
          c_page_report_page constant number        := p_region.attribute_01;
          c_public_pages_msg constant varchar2(255) := apex_escape.html(p_region.attribute_02);
          c_auth_pages_msg   constant varchar2(255) := apex_escape.html(p_region.attribute_03);
          c_custom_auth_msg  constant varchar2(255) := apex_escape.html(p_region.attribute_04);
      
          l_app_session     varchar2(255) := :APP_SESSION;
          l_app_id          number := :APP_ID;
          l_cnt             number := 0;
          l_auth_scheme     number := 0;
          l_auth_required   number := 0;
          l_auth_scheme_name     varchar2(255);
      begin
          for c1 in ( select count(*) c,
                          sum(decode(authorization_scheme,null,0,1)) auth_scheme,
                          sum(decode(page_requires_authentication,'Yes',1,0)) auth_required
                      from apex_application_pages
                      where application_id =  l_app_id
                          and page_function != 'Global Page' ) loop
              l_cnt := c1.c;
              l_auth_scheme := c1.auth_scheme;
              l_auth_required := c1.auth_required;
          end loop;
      
          for c1 in ( select authentication_scheme 
                      from apex_applications 
                      where application_id = l_app_id ) loop
              l_auth_scheme_name := c1.authentication_scheme;
          end loop;
      
          sys.htp.p('<div class="container">');
          sys.htp.p('<div class="row">');
          sys.htp.p('<div class="col col-12 ">');
          sys.htp.p('<div class="t-ConfigPanel">');
          sys.htp.p('<div class="t-ConfigPanel-body">');
          sys.htp.p('<div class="t-ConfigPanel-main">');
          sys.htp.p('<span class="t-ConfigPanel-icon a-Icon auth-scheme"></span>');
          sys.htp.p('<span class="t-ConfigPanel-setting">Authentication Scheme</span>');
          sys.htp.p('<span class="t-ConfigPanel-status">'||apex_escape.html(l_auth_scheme_name)||'</span>');
          sys.htp.p('</div>');
          sys.htp.p('<div class="t-ConfigPanel-list">');
          sys.htp.p('<ul class="t-ConfigPanel-attrs">');
          sys.htp.p('<li class="t-ConfigPanel-attr">');
          sys.htp.p('<a href="'
              ||case when c_page_report_page is not null then
                      apex_util.prepare_url('f?p='||l_app_id||':'||c_page_report_page||':'||l_app_session
                                           ||':::'||c_page_report_page||',RIR:IREQ_REQUIRES_AUTH:No')
                  else
                      '#'
              end
              ||'" class="t-ConfigPanel-attrLink">');
          sys.htp.p('<span class="t-ConfigPanel-attrLabel">'||c_public_pages_msg||'</span>');
          sys.htp.p('<span class="t-ConfigPanel-attrValue">'||to_char((l_cnt - l_auth_required),'999G999G990')
              ||'</span>');
          sys.htp.p('</a>');
          sys.htp.p('</li>');
          sys.htp.p('<li class="t-ConfigPanel-attr">');
          sys.htp.p('<a href="'
              ||case when c_page_report_page is not null then
                      apex_util.prepare_url('f?p='||l_app_id||':'||c_page_report_page||':'||l_app_session
                                           ||':::'||c_page_report_page||',RIR:IREQ_REQUIRES_AUTH:Yes')
                  else
                      '#'
              end
              ||'" class="t-ConfigPanel-attrLink">');
          sys.htp.p('<span class="t-ConfigPanel-attrLabel">'||c_auth_pages_msg||'</span>');
          sys.htp.p('<span class="t-ConfigPanel-attrValue">'||to_char(l_auth_required,'999G999G990')||
            '</span>');
          sys.htp.p('</a>');
          sys.htp.p('</li>');
          sys.htp.p('<li class="t-ConfigPanel-attr">');
          sys.htp.p('<a href="'
              ||case when c_page_report_page is not null then
                      apex_util.prepare_url('f?p='||l_app_id||':'||c_page_report_page||':'||l_app_session
                                           ||':::'||c_page_report_page||',RIR:IRNEQ_AUTHORIZATION_SCHEME:No Scheme Applied')
                  else
                      '#'
              end
              ||'" class="t-ConfigPanel-attrLink">');
          sys.htp.p('<span class="t-ConfigPanel-attrLabel">'||c_custom_auth_msg||'</span>');
          sys.htp.p('<span class="t-ConfigPanel-attrValue">'||to_char(l_auth_scheme,'999G999G990')||
                '</span>');
          sys.htp.p('</a>');
          sys.htp.p('</li>');
          sys.htp.p('</ul>');
          sys.htp.p('</div>');
          sys.htp.p('</div>');
          sys.htp.p('</div>');
          sys.htp.p('</div>');
          sys.htp.p('</div>');
          sys.htp.p('</div>');
          --
          return l_retval;    
      end auth_admin;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: auth_admin

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 5.0.1
    about-url: 'http://apex.oracle.com/plugins'
    help-text: |
      <p>Authorization Administration displays the current authentication scheme together with a count of public pages, pages requiring authentication, and pages with an authorization defined.</p>
      <p>This plug-in is suitable for adding to the main Administration page to provide an overview of high level security settings.</p>

  custom-attributes: 
  - # ====== Custom Attribute: Page Report Page ==================
    id: 8874484007270809869
    identification: 
      attribute: 1
      name: Page Report Page
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Page Number
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: Enter or select the page number which has a report listing the pages within the application and the respective role required to access that page.

  - # ====== Custom Attribute: Public Pages Label ================
    id: 8874484412995809870
    identification: 
      attribute: 2
      name: Public Pages Label
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true

    default: 
      value: Public Pages

    help: 
      help-text: Enter the label displayed for pages with no authorization defined.

  - # ====== Custom Attribute: Authenticated Pages Label =========
    id: 8874484897880809870
    identification: 
      attribute: 3
      name: Authenticated Pages Label
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true

    default: 
      value: Login Required Pages

    help: 
      help-text: Enter the label displayed for pages that require authentication.

  - # ====== Custom Attribute: Authorized Pages Label ============
    id: 8874485251181809870
    identification: 
      attribute: 4
      name: Authorized Pages Label
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: true

    default: 
      value: Authorization Protected

    help: 
      help-text: Enter the label displayed for pages where a specific authorization is defined.

- # ====== Plugin: Translated Message ==========================
  id: 8592903712795585342
  identification: 
    name: Translated Message
    internal-name: COM.ORACLE.APEX.TRANSLATED_MESSAGE
    type: Region

  advanced: 
    quick-pick: false

  source: 
    pl/sql-code: |
      function render (
          p_region              in apex_plugin.t_region,
          p_plugin              in apex_plugin.t_plugin,
          p_is_printer_friendly in boolean )
          return apex_plugin.t_region_render_result
      is
          c_message     constant varchar2(255) := p_region.attribute_01;
          c_add_p_tags  constant varchar2(1) := p_region.attribute_12;
      
          type subs_t is varray(10) of varchar2(4000);
          type colnos_t is varray(10) of pls_integer;
      
          c_subs_columns constant subs_t :=
              subs_t (
                  p_region.attribute_02,
                  p_region.attribute_03,
                  p_region.attribute_04,
                  p_region.attribute_05,
                  p_region.attribute_06,
                  p_region.attribute_07,
                  p_region.attribute_08,
                  p_region.attribute_09,
                  p_region.attribute_10,
                  p_region.attribute_11
              );
      
          l_column_value_list apex_plugin_util.t_column_value_list2;
          l_subs_column_nos colnos_t := colnos_t( null, null, null, null, null, null, null, null, null, null );
      
          l_subs subs_t := subs_t( null, null, null, null, null,
                                   null, null, null, null, null );
          l_label varchar2(50);
          l_message clob;
      begin
          if p_region.source is not null then
              -- Read the data based on the region source query
              l_column_value_list := apex_plugin_util.get_data2 (
                                         p_sql_statement  => p_region.source,
                                         p_min_columns    => 1,
                                         p_max_columns    => null,
                                         p_component_name => p_region.name );
      
              -- Get the actual column# for faster access and also verify that the data type
              -- of the column matches with what we are looking for
              for i in 0..9 loop
                  l_label := 'Substitution Column '
                              ||to_char(i)||' (%'||to_char(i)||')';
                  l_subs_column_nos(i+1) := apex_plugin_util.get_column_no (
                                              p_attribute_label   => l_label,
                                              p_column_alias      => c_subs_columns(i+1),
                                              p_column_value_list => l_column_value_list,
                                              p_is_required       => false,
                                              p_data_type         => apex_plugin_util.c_data_type_varchar2 );
              end loop;
      
              -- Set the column values of the first row so that apex_plugin_util.replace_substitutions
              -- can do substitutions for columns contained in the region source query.
              apex_plugin_util.set_component_values (
                  p_column_value_list => l_column_value_list,
                  p_row_num           => 1 );
      
              -- get the substitution values
              for i in 0..9 loop
                  if l_subs_column_nos(i+1) is not null then
                      l_subs(i+1) := apex_plugin_util.escape (
                                      apex_plugin_util.get_value_as_varchar2 (
                                          p_data_type => l_column_value_list(l_subs_column_nos(i+1)).data_type,
                                          p_value     => l_column_value_list(l_subs_column_nos(i+1)).value_list(1) ),
                                      p_region.escape_output );
                  end if;
              end loop;
          end if;
      
          l_message := apex_application.do_substitutions(
              apex_lang.message( p_name => c_message,
                                 p0     => l_subs(1),
                                 p1     => l_subs(2),
                                 p2     => l_subs(3),
                                 p3     => l_subs(4),
                                 p4     => l_subs(5),
                                 p5     => l_subs(6),
                                 p6     => l_subs(7),
                                 p7     => l_subs(8),
                                 p8     => l_subs(9),
                                 p9     => l_subs(10)
                            )
              );
          if c_add_p_tags = 'Y' and instr( l_message, '<p' ) = 0 then
              l_message := '<p>'||l_message||'</p>';
          end if;
          sys.htp.p(l_message);
          return null;
      end;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render

  standard-attributes: 
    attributes: 
    - Region Source is SQL Statement [Deprecated]
    - Has "Escape Special Characters" Region Attribute

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 5.0.1
    help-text: |
      <p>This region plug-in is used to allow text messages to readily be translated into different languages. Up to nine values can be substituted into the text message.</p>
      <p>The text message, with appropriate substitution variables, must be defined as a system message.</p>

  standard-attributes: 
  - # ====== Standard Attribute: SOURCE_SQL ======================
    id: 10285798136792635754
    identification: 
      name: SOURCE_SQL

    value: 
      required: false

    settings: 
      minimum-columns: 1

    examples: 
      examples: This SQL is optional. If the message you are translating has substitutions built in (%0 through %9), select the values you wish to replace them with within Attributes.

  custom-attributes: 
  - # ====== Custom Attribute: Text Message ======================
    id: 10285789482893635734
    identification: 
      attribute: 1
      name: Text Message
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    help: 
      help-text: Enter the name of the Text Message (from shared components) to be displayed.

  - # ====== Custom Attribute: Substitution Column 0 (%0) ========
    id: 10285789820858635736
    identification: 
      attribute: 2
      name: Substitution Column 0 (%0)
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which is used to replace any <strong>%0</strong> values in the displayed message.

  - # ====== Custom Attribute: Substitution Column 1 (%1) ========
    id: 10285790219309635736
    identification: 
      attribute: 3
      name: Substitution Column 1 (%1)
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which is used to replace any <strong>%1</strong> values in the displayed message.

  - # ====== Custom Attribute: Substitution Column 2 (%2) ========
    id: 10285790668442635736
    identification: 
      attribute: 4
      name: Substitution Column 2 (%2)
      scope: Component

    layout: 
      sequence: 40

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which is used to replace any <strong>%2</strong> values in the displayed message.

  - # ====== Custom Attribute: Substitution Column 3 (%3) ========
    id: 10285791072118635736
    identification: 
      attribute: 5
      name: Substitution Column 3 (%3)
      scope: Component

    layout: 
      sequence: 50

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which is used to replace any <strong>%3</strong> values in the displayed message.

  - # ====== Custom Attribute: Substitution Column 4 (%4) ========
    id: 10285791419932635737
    identification: 
      attribute: 6
      name: Substitution Column 4 (%4)
      scope: Component

    layout: 
      sequence: 60

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which is used to replace any <strong>%4</strong> values in the displayed message.

  - # ====== Custom Attribute: Substitution Column 5 (%5) ========
    id: 10285791839748635738
    identification: 
      attribute: 7
      name: Substitution Column 5 (%5)
      scope: Component

    layout: 
      sequence: 70

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which is used to replace any <strong>%5</strong> values in the displayed message.

  - # ====== Custom Attribute: Substitution Column 6 (%6) ========
    id: 10285792241725635740
    identification: 
      attribute: 8
      name: Substitution Column 6 (%6)
      scope: Component

    layout: 
      sequence: 80

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which is used to replace any <strong>%6</strong> values in the displayed message.

  - # ====== Custom Attribute: Substitution Column 7 (%7) ========
    id: 10285792686920635740
    identification: 
      attribute: 9
      name: Substitution Column 7 (%7)
      scope: Component

    layout: 
      sequence: 90

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which is used to replace any <strong>%7</strong> values in the displayed message.

  - # ====== Custom Attribute: Substitution Column 8 (%8) ========
    id: 10285793018020635740
    identification: 
      attribute: 10
      name: Substitution Column 8 (%8)
      scope: Component

    layout: 
      sequence: 100

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which is used to replace any <strong>%8</strong> values in the displayed message.

  - # ====== Custom Attribute: Substitution Column 9 (%9) ========
    id: 10285793471551635741
    identification: 
      attribute: 11
      name: Substitution Column 9 (%9)
      scope: Component

    layout: 
      sequence: 110

    settings: 
      type: Region SQL Statement Column
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      data-types: 
      - Varchar2

    help: 
      help-text: Select the column from the region SQL Query which is used to replace any <strong>%9</strong> values in the displayed message.

  - # ====== Custom Attribute: Add Paragraph Tags ================
    id: 10285793882819635741
    identification: 
      attribute: 12
      name: Add Paragraph Tags
      scope: Component

    layout: 
      sequence: 120

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: Y

    help: 
      help-text: |
        <p>Select whether paragraph tags are added around the text message.</p>
        <p>Note: If the message already starts with a paragraph tag, no changes are made.</p>

- # ====== Plugin: Tag Cloud ===================================
  id: 14095861026482980120
  identification: 
    name: Tag Cloud
    internal-name: COM.ORACLE.APEX.TAG_CLOUD
    type: Region

  advanced: 
    quick-pick: false

  source: 
    pl/sql-code: |
      function render (
          p_region              in apex_plugin.t_region,
          p_plugin              in apex_plugin.t_plugin,
          p_is_printer_friendly in boolean )
          return apex_plugin.t_region_render_result
      is
          -- Constants for the columns of our region source query
          c_tag_col   constant pls_integer := 1;
          c_count_col constant pls_integer := 2;
      
          -- attributes of the plug-in
          l_target_url           varchar2(4000)  := p_region.attribute_01;
          l_max_display_tags     number          := p_region.attribute_02;
          l_show_count           boolean         := nvl(p_region.attribute_03,'Y') = 'Y';
          l_no_data_found     varchar2(32767) := p_region.no_data_found_message;
      
          l_valid_data_type_list wwv_flow_global.vc_arr2;
          l_column_value_list    apex_plugin_util.t_column_value_list2;
          l_printed_records    number := 0;
          l_available_records  number := 20;
          l_max                number;
          l_min                number;
          l_total              number := 0;
          l_cnts               number;
          l_tag                varchar2(4000);
      
          l_class_size         number;
          l_class              varchar2(30);
      
      begin
          -- don't need to load css file, styles are contained within theme_42
          
          -- apex_css.add_file (
          --     p_name      => 'tag_cloud',
          --     p_directory => p_plugin.file_prefix,
          --     p_version   => null );
      
      
          -- define the valid column data types for the region query
          l_valid_data_type_list(c_tag_col)   := apex_plugin_util.c_data_type_varchar2;
          l_valid_data_type_list(c_count_col) := apex_plugin_util.c_data_type_number;
      
          -- get the data to be displayed
          l_column_value_list := apex_plugin_util.get_data2 (
                                     p_sql_statement  => p_region.source,
                                     p_min_columns    => 2,
                                     p_max_columns    => 2,
                                     p_data_type_list => l_valid_data_type_list,
                                     p_component_name => p_region.name );
      
         l_available_records := l_column_value_list(c_tag_col).value_list.count;
      
         -----------------------------------------------
         -- Determine total count and maximum tag counts
         --
         l_max := 0;
         l_min := 1000;
         FOR i in 1.. l_column_value_list(c_count_col).value_list.count loop
            l_cnts := l_column_value_list(c_count_col).value_list(i).number_value;
            l_total := l_total + l_cnts;
            if l_cnts > l_max then
               l_max := l_cnts;
            end if;
            if l_cnts < l_min then
               l_min := l_cnts;
            end if;
         end loop;
         if l_max = 0 then l_max := 1; end if;
      
      
         l_class_size := round((l_max-l_min)/6);
      
         ------------------------
         -- Generate tag cloud --
         --
         
         sys.htp.prn('<ul class="a-TagCloud">');
      
         for i in 1.. l_column_value_list(c_tag_col).value_list.count loop
             l_printed_records := l_printed_records + 1;
             l_tag := apex_escape.html(l_column_value_list(c_tag_col).value_list(i).varchar2_value);
             l_cnts := l_column_value_list(c_count_col).value_list(i).number_value;
             if l_cnts < l_min + l_class_size then
                l_class := 'size1';
             elsif l_cnts < l_min + (l_class_size*2) then
                l_class := 'size2';
             elsif l_cnts < l_min + (l_class_size*3) then
                l_class := 'size3';
             elsif l_cnts < l_min + (l_class_size*4) then
                l_class := 'size4';
             elsif l_cnts < l_min + (l_class_size*5) then
                l_class := 'size5';
             else l_class := 'size6';
             end if;      
             
              sys.htp.prn('<li class="a-TagCloud-item">'
                  ||apex_plugin_util.get_link(
                      p_url  => replace(l_target_url,'#TAG#',l_tag),
                      p_text => l_tag
                                  ||case when l_show_count then
                                      ' <span class="a-TagCloud-count">'||l_cnts||'</span>'
                                  end,
                      p_escape_text => false,
                      p_attributes => 'class="a-TagCloud-link a-TagCloud-link--' ||l_class||'"')
                  ||'</li>');
      
             if  l_printed_records > l_max_display_tags then
                 exit;
             end if;
         end loop;
      
         sys.htp.prn('</ul>');
         if l_printed_records = 0 then
             sys.htp.p('<span class="nodatafound">' || l_no_data_found || '</span>');
         end if;
      
         return null;
      end render;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render

  standard-attributes: 
    attributes: 
    - Region Source is SQL Statement [Deprecated]
    - Has "No Data Found Message" Attribute

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 5.0.1
    help-text: <p>Use this region type plug-in to render a tag cloud. The developer supplies a query returning the tag name and count. </p>

  standard-attributes: 
  - # ====== Standard Attribute: SOURCE_SQL ======================
    id: 7082423463761526126
    identification: 
      name: SOURCE_SQL

    value: 
      required: false

    settings: 
      minimum-columns: 2
      maximum-columns: 2

    examples: 
      examples: |
        <p>
        <strong>Example 1: Render tag cloud with all tags.</strong>
        <pre>
        select tag, count(*) cnt 
          from your_tag_table
         group by tag
         order by 1
        </pre>
        </p>
        
        <p>
        <b>Example 2: Render tag cloud with tags specific to a content type.</b>
        <pre>
        select tag, count(*) cnt 
          from your_tag_table
         where content_type = 'DOCUMENT'
         group by tag
         order by 1
        </pre>
        </p>
        

  custom-attributes: 
  - # ====== Custom Attribute: Link Target =======================
    id: 7082421647993526124
    identification: 
      attribute: 1
      name: Link Target
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Link to Target Page/URL
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    help: 
      help-text: 'Enter a target page to be called when the user clicks a tag. Use the #TAG# substitution for the tag that is clicked.'

    examples: 
      examples: 'f?p=&APP_ID.:69:&APP_SESSION.::::P69_SEARCH:#TAG#'

  - # ====== Custom Attribute: Maximum Tags ======================
    id: 7082422060548526124
    identification: 
      attribute: 2
      name: Maximum Tags
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 4
      maximum-length: 4

    help: 
      help-text: Enter the maximum number of tags to display.

    comments: 
      comments: Enter the maximum number of tags to display in the region.

  - # ====== Custom Attribute: Show Count ========================
    id: 7082422488301526125
    identification: 
      attribute: 3
      name: Show Count
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Yes/No
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: Y

    help: 
      help-text: Select whether to show the tag count next to the tag.

  files: 
  - # ====== File: tag_cloud.css =================================
    id: 7082424153392526126
    identification: 
      file-name: tag_cloud.css

    attributes: 
      mime-type: text/css

- # ====== Plugin: Simple Checkbox =============================
  id: 30745420302690543380
  identification: 
    name: Simple Checkbox
    internal-name: COM.ORACLE.APEX.SIMPLE_CHECKBOX
    type: Item

  advanced: 
    quick-pick: false

  source: 
    pl/sql-code: |
      --===============================================================================
      -- Renders the Simple Checkbox item type based on the configuration of the page item.
      --===============================================================================
      function render_simple_checkbox (
          p_item                in apex_plugin.t_page_item,
          p_plugin              in apex_plugin.t_plugin,
          p_value               in varchar2,
          p_is_readonly         in boolean,
          p_is_printer_friendly in boolean )
          return apex_plugin.t_page_item_render_result
      is
          -- Use named variables instead of the generic attribute variables
          l_checked_value    varchar2(255)  := nvl(p_item.attribute_01, 'Y');
          l_unchecked_value  varchar2(255)  := p_item.attribute_02;
          l_checked_label    varchar2(4000) := p_item.attribute_03;
      
          l_name             varchar2(30);
          l_value            varchar2(255);
          l_checkbox_postfix varchar2(8);
          l_result           apex_plugin.t_page_item_render_result;
      begin
          -- if the current value doesn't match our checked and unchecked value
          -- we fallback to the unchecked value 
          if p_value in (l_checked_value, l_unchecked_value) then
              l_value := p_value;
          else
              l_value := l_unchecked_value;
          end if;
      
          if p_is_readonly or p_is_printer_friendly then
              -- if the checkbox is readonly we will still render a hidden field with
              -- the value so that it can be used when the page gets submitted
              wwv_flow_plugin_util.print_hidden_if_readonly (
                  p_item_name           => p_item.name,
                  p_value               => p_value,
                  p_is_readonly         => p_is_readonly,
                  p_is_printer_friendly => p_is_printer_friendly );
              l_checkbox_postfix := '_DISPLAY';
      
              -- Tell APEX that this field is NOT navigable
              l_result.is_navigable := false;
          else
              -- If a page item saves state, we have to call the get_input_name_for_page_item
              -- to render the internal hidden p_arg_names field. It will also return the
              -- HTML field name which we have to use when we render the HTML input field.
              l_name := wwv_flow_plugin.get_input_name_for_page_item(false);
      
              -- render the hidden field which actually stores the checkbox value
              sys.htp.prn (
                  '<input type="hidden" id="'||p_item.name||'_HIDDEN" name="'||l_name||'" '||
                  'value="'||  apex_escape.html(l_value) ||'" />');
      
              -- Add the JavaScript library and the call to initialize the widget
              apex_javascript.add_library (
                  p_name      => 'com_oracle_apex_simple_checkbox.min',
                  p_directory => p_plugin.file_prefix,
                  p_version   => null );
      
              apex_javascript.add_onload_code (
                  p_code => 'com_oracle_apex_simple_checkbox('||
                            apex_javascript.add_value(p_item.name)||
                            '{'||
                            apex_javascript.add_attribute('unchecked', l_unchecked_value, false)||
                            apex_javascript.add_attribute('checked',   l_checked_value, false, false)||
                            '});' );
      
              -- Tell APEX that this field is navigable
              l_result.is_navigable := true;
          end if;
      
          -- render the checkbox widget
          sys.htp.prn (
              '<input type="checkbox" id="'||p_item.name||l_checkbox_postfix||'" '||
              'value="'||  apex_escape.html(l_value) ||'" '||
              case when l_value = l_checked_value then 'checked="checked" ' end||
              case when p_is_readonly or p_is_printer_friendly then 'disabled="disabled" ' end||
              coalesce(p_item.element_attributes, 'class="simple_checkbox"')||' />');
      
          -- print label after checkbox
          if l_checked_label is not null then
              sys.htp.prn('<label for="'||p_item.name||l_checkbox_postfix||'">'||l_checked_label||'</label>');
          end if;
      
          return l_result;
      end render_simple_checkbox;
      
      --==============================================================================
      -- Validates the submitted "Simple Checkbox" value against the configuration to
      -- make sure that invalid values submitted by hackers are detected.
      --==============================================================================
      function validate_simple_checkbox (
          p_item   in apex_plugin.t_page_item,
          p_plugin in apex_plugin.t_plugin,
          p_value  in varchar2 )
          return apex_plugin.t_page_item_validation_result
      is
          l_checked_value   varchar2(255) := nvl(p_item.attribute_01, 'Y');
          l_unchecked_value varchar2(255) := p_item.attribute_02;
      
          l_result          apex_plugin.t_page_item_validation_result;
      begin
          if not (   p_value in (l_checked_value, l_unchecked_value)
                  or (p_value is null and l_unchecked_value is null)
                 )
          then
              l_result.message := 'Checkbox contains invalid value!';
          end if;
          return l_result;
      end validate_simple_checkbox;
      

  callbacks: 
    api-interface: Function
    render-procedure/function-name: render_simple_checkbox
    validation-procedure-name: validate_simple_checkbox

  supported-for: 
    component-type: 
    - Page Items

  standard-attributes: 
    attributes: 
    - Is Visible Widget
    - Session State Changeable
    - Has Read Only Attribute
    - Has Source Attributes
    - Has Element Attributes
    - Has Encrypt Session State Attribute

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 5.0.1
    about-url: 'http://apex.oracle.com/plugins/'
    help-text: |
      <p>
      	This item type plug-in displays a single checkbox but allows you to set 2 values (one for checked and another for unchecked). It&#39;s perfect for Y(es)/N(o) type checkboxes.</p>
      <p>
      	Without this plug-in, you would need to write a custom computation to get the same functionality.</p>

  custom-attributes: 
  - # ====== Custom Attribute: Checked Value =====================
    id: 7363221584349290557
    identification: 
      attribute: 1
      name: Checked Value
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false
      display-width: 10
      maximum-length: 255

    default: 
      value: Y

    help: 
      help-text: Enter the value stored if the checkbox is checked.

  - # ====== Custom Attribute: Unchecked Value ===================
    id: 7363222030926290557
    identification: 
      attribute: 2
      name: Unchecked Value
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false
      display-width: 10
      maximum-length: 255

    help: 
      help-text: |
        <p>Enter the value stored if the checkbox is unchecked. This attribute can also be left blank if you want to store NULL when the checkbox is left unchecked.</p>
        <p>Note: This value will also be used if the page item is populated with a value which doesn't match the "Checked Value" or "Unchecked Value".</p>

  - # ====== Custom Attribute: Checkbox Label ====================
    id: 7363222372734290558
    identification: 
      attribute: 3
      name: Checkbox Label
      scope: Component

    layout: 
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: true
      display-width: 40

    help: 
      help-text: |
        <p>Enter the label to be displayed after the checkbox.</p>
        <p>Note: If you set this optional attribute, you should remove the text in the label attribute of the page item.</p>

  files: 
  - # ====== File: com_oracle_apex_simple_checkbox.min.js ========
    id: 7363223068996290561
    identification: 
      file-name: com_oracle_apex_simple_checkbox.min.js

    attributes: 
      mime-type: application/x-javascript

- # ====== Plugin: Super Breadcrumb ============================
  id: 41530468571159620234
  identification: 
    name: Super Breadcrumb
    internal-name: SUPER_BREADCRUMB
    type: Region

  advanced: 
    quick-pick: false

  templates: 
    default-escape-mode: HTML

  source: 
    pl/sql-code: |
      function do_substitutions(  p_string        in varchar,
                                  p_name          in varchar2,
                                  p_link          in varchar2,
                                  p_css_classes   in varchar2 default null) return varchar2 is
      l_new_string    varchar2(32767) := p_string;
      begin
          l_new_string := replace(l_new_string, '#NAME#', p_name);
          l_new_string := replace(l_new_string, '#LINK#', p_link);
          l_new_string := replace(l_new_string, '#COMPONENT_CSS_CLASSES#', p_css_classes);
      
          return l_new_string;
      end;
      --
      --
      function render_from_nav_menu(
                      p_region              in apex_plugin.t_region,
                      p_plugin              in apex_plugin.t_plugin,
                      p_is_printer_friendly in boolean ) return apex_plugin.t_region_render_result is
      
          l_additional_items  varchar2(32767) := p_region.ajax_items_to_submit;
          c_region_static_id  constant varchar2(255)  := apex_escape.html_attribute( p_region.static_id );
      
      
          l_max_levels        p_region.attribute_01%type := p_region.attribute_01;
          l_nav_or_collection p_region.attribute_02%type := p_region.attribute_02;
          l_css_classes       p_region.attribute_04%type := p_region.attribute_04;
        
          l_bc_rec            apex_application_temp_bc%rowtype;
          l_target            varchar2(4000);
      
      begin
          
          --debug
          if apex_application.g_debug then
              apex_debug.message('Super Breadcrumb: render_from_nav_menu');
          end if;
      
          select bc.*
            into l_bc_rec
            from apex_application_themes theme
            join apex_application_templates temp
              on temp.theme_number = theme.theme_number  
              and temp.application_id = theme.application_id
            join apex_application_temp_bc bc 
              on bc.breadcrumb_template_id = temp.template_id
            where theme.application_id = :APP_TRANSLATION_ID
              and temp.internal_name = 'BREADCRUMB'
              and temp.is_default = 'Yes';
      
          sys.htp.p(do_substitutions( p_string        =>  l_bc_rec.before_first,
                                  p_name          => null,
                                  p_link          => null,
                                  p_css_classes   => l_css_classes)
                              );
      
          for page_rec in (
              with my_list as (
              select plist.list_entry_id,
                     plist.entry_text  label,
                     plist.ENTRY_TARGET   entry_target,
                     plist.ENTRY_TARGET   target,
                     plist.list_entry_parent_id,
                     null is_current_list_entry,
                     plist.ENTRY_IMAGE   image,
                     plist.ENTRY_IMAGE_ATTRIBUTES   image_attribute,
                     plist.ENTRY_IMAGE_ALT_ATTRIBUTE   image_alt_attribute,
                     plist.ENTRY_ATTRIBUTE_01   attribute1,
                     plist.ENTRY_ATTRIBUTE_02   attribute2,
                     plist.ENTRY_ATTRIBUTE_03   attribute3,
                     plist.ENTRY_ATTRIBUTE_04   attribute4,
                     plist.ENTRY_ATTRIBUTE_05   attribute5,
                     plist.ENTRY_ATTRIBUTE_06   attribute6,
                     plist.ENTRY_ATTRIBUTE_07   attribute7,
                     plist.ENTRY_ATTRIBUTE_08   attribute8,
                     plist.ENTRY_ATTRIBUTE_09   attribute9,
                     plist.ENTRY_ATTRIBUTE_10   attribute10,
                     cbo.build_option_id,
                     plist.authorization_scheme_id,
                     plist.condition_type_code,
                     plist.condition_expression1,
                     plist.condition_expression2
                  from apex_applications aa
                  join apex_application_list_entries plist on plist.list_id = aa.navigation_list_id
                  left outer join APEX_APPLICATION_BUILD_OPTIONS cbo -- child build option
                    on (cbo.build_option_name = plist.build_option
                        and cbo.application_id = plist.application_id)  
                  where aa.application_id = :APP_TRANSLATION_ID
              )            
                select level the_level, 
                       my_list.label,
                       my_list.target,
                       my_list.build_option_id,
                       my_list.authorization_scheme_id,
                       my_list.condition_type_code,
                       my_list.condition_expression1,
                       my_list.condition_expression2 
                  from my_list
                  start with ( 
                         my_list.entry_target like  'f?p=&' || 'APP_ID' ||'.:' || :app_page_id || ':%'
                      or my_list.entry_target like  'f?p=' || :APP_ALIAS || ':' || :app_page_id || ':%'
                      or my_list.entry_target like  'f?p=' || lower(:APP_ALIAS)  || ':' || :app_page_id || ':%'
                      or my_list.entry_target like  'f?p=' || :APP_ID || ':' || :app_page_id || ':%'                 
                      )    
                  connect by nocycle  my_list.list_entry_id = prior my_list.list_entry_parent_id   
                  order by level desc
              ) loop
      
              l_target := apex_util.prepare_url(apex_plugin_util.replace_substitutions(p_value => page_rec.target ));
      
              if apex_plugin_util.is_component_used (
                          p_build_option_id           => page_rec.build_option_id,
                          p_authorization_scheme_id   => page_rec.authorization_scheme_id,
                          p_condition_type            => page_rec.condition_type_code,
                          p_condition_expression1     => page_rec.condition_expression1,
                          p_condition_expression2     => page_rec.condition_expression2) then
                  if page_rec.the_level = 1 then
                      sys.htp.p(do_substitutions( p_string        => l_bc_rec.current_page_option,
                                              p_name          => page_rec.label,
                                              p_link          => l_target,
                                              p_css_classes   => l_css_classes));
                  elsif page_rec.the_level <= to_number(l_max_levels) then
                      sys.htp.p(do_substitutions( p_string        => l_bc_rec.non_current_page_option,
                                              p_name          => page_rec.label,
                                              p_link          => l_target,
                                              p_css_classes   => l_css_classes));
      
                      sys.htp.p(l_bc_rec.between_levels);
                  end if;
              end if;    
          end loop;    
      
          sys.htp.p(l_bc_rec.after_last);
      
          return null;
      
      end render_from_nav_menu;          
      --
      --
      function render_from_collection(
                      p_region              in apex_plugin.t_region,
                      p_plugin              in apex_plugin.t_plugin,
                      p_is_printer_friendly in boolean ) return apex_plugin.t_region_render_result is
      
          l_additional_items  varchar2(32767) := p_region.ajax_items_to_submit;
          c_region_static_id  constant varchar2(255)  := apex_escape.html_attribute( p_region.static_id );
      
      
          l_max_levels            p_region.attribute_01%type := p_region.attribute_01;
          l_nav_or_collection     p_region.attribute_02%type := p_region.attribute_02;
          l_collection_name       p_region.attribute_03%type := p_region.attribute_03;
          l_css_classes           p_region.attribute_04%type := p_region.attribute_04;
          l_rewind_method         p_region.attribute_05%type := p_region.attribute_05;
          l_no_rewind_page_list   p_region.attribute_06%type := p_region.attribute_06;
          l_only_link_pages       p_region.attribute_08%type := p_region.attribute_08;
          l_max_seq_id        number;
          l_latest_app_id     number;
          l_latest_page_id    number;
          l_latest_title      varchar2(4000);
          l_show_latest_page  boolean := true;
          l_minus_if_reload   number := 0;
        
          l_bc_rec            apex_application_temp_bc%rowtype;
          l_target            varchar2(4000);
          l_title             varchar2(4000);
          l_page_mode         varchar2(4000);
          l_rewind_id         number;
          l_url               varchar2(4000);
          l_javascript        clob :=
      '
      apex.server.plugin (
          "' || apex_plugin.get_ajax_identifier ||'"
          ,{
          x01: window.location,
          x02: document.title,
          }
          );
      ';    
      
      begin
          --debug
          if apex_application.g_debug then
              apex_debug.message('Super Breadcrumb: render_from_nav_menu');
          end if;
      
          select page_mode
            into l_page_mode 
            from apex_application_pages p
            where p.application_id = :APP_ID
              and p.page_id = :APP_PAGE_ID;
      
          if l_page_mode = 'Normal' then
              
              -- current page
              select ap.page_title
                into l_title
                from apex_application_pages ap 
                where ap.application_id = :APP_TRANSLATION_ID
                  and ap.page_id = :APP_PAGE_ID;    
      
              l_title := apex_plugin_util.replace_substitutions (p_value => l_title);  
      
              apex_debug.message('Super Breadcrumb %s: %s', 'l_title', l_title);  
      
              begin
                  select max(seq_id)    
                    into l_max_seq_id
                    from apex_collections ac
                    where ac.collection_name = l_collection_name;
              exception when no_data_found then null;
              end;      
      
              if l_max_seq_id is not null then 
      
                  apex_debug.message('Super Breadcrumb %s: %s', 'l_max_seq_id', l_max_seq_id);
                    
                  select c002     link_label,
                         n001     app_id,
                         n002     page_id
                    into l_latest_title,
                         l_latest_app_id,
                         l_latest_page_id
                    from apex_collections ac
                    where ac.collection_name = l_collection_name
                      and ac.seq_id = l_max_seq_id;
      
                  if l_latest_app_id = :APP_ID and l_latest_page_id = :APP_PAGE_ID and l_latest_title = l_title then
                      -- in this case the user like hit refresh, don't show the same page again   
                      l_show_latest_page := false;
                      -- subtract one from the level number on a reload
                      l_minus_if_reload := 1;
                  end if;  
              end if;       
      
              -- rewind
              if l_rewind_method != 'DO_NOT_REWIND' 
                  and instr(',' || l_no_rewind_page_list ||','  ,',' ||:APP_PAGE_ID ||',' )  = 0
                  then    
                  if l_rewind_method = 'PAGE_AND_TITLE' then
                      begin
                          select min(seq_id)
                            into l_rewind_id
                            from apex_collections
                            where collection_name = l_collection_name
                              and n001 = :APP_ID
                              and n002 = :APP_PAGE_ID
                              and c002 = l_title;    
                      exception when no_data_found then null;
                      end;     
                  elsif l_rewind_method = 'PAGE' then
                      begin
                          select min(seq_id)
                            into l_rewind_id
                            from apex_collections
                            where collection_name = l_collection_name
                              and n001 = :APP_ID
                              and n002 = :APP_PAGE_ID;    
                      exception when no_data_found then null;
                      end;   
                  end if;
      
                  if l_rewind_id is not null then
                      for rewind in (select seq_id from apex_collections
                                      where collection_name = l_collection_name
                                        and seq_id >= l_rewind_id) loop
                          apex_collection.delete_member(
                              p_collection_name   => l_collection_name,
                              p_seq               => rewind.seq_id);
                      end loop;  
                  end if; 
              end if;        
              -- end rewind
      
              select bc.*
                into l_bc_rec
                from apex_application_themes theme
                join apex_application_templates temp
                  on temp.theme_number = theme.theme_number  
                  and temp.application_id = theme.application_id
                join apex_application_temp_bc bc 
                  on bc.breadcrumb_template_id = temp.template_id
                where theme.application_id = :APP_TRANSLATION_ID
                  and temp.internal_name = 'BREADCRUMB'
                  and temp.is_default = 'Yes';
      
              sys.htp.p(do_substitutions( p_string        =>  l_bc_rec.before_first,
                                  p_name          => null,
                                  p_link          => null,
                                  p_css_classes   => l_css_classes)
                              );
      
              for page_rec in (
                  select c001                     link_target,
                         c002                     link_label,
                         n001                     app_id,
                         n002                     page_id,
                         row_number() over (order by seq_id desc) rn,
                         seq_id
                    from apex_collections ac
                    where ac.collection_name = l_collection_name 
                    order by seq_id
                  ) loop
      
                  if  instr(',' || l_only_link_pages ||','  ,',' || page_rec.page_id ||',' ) = 0 then
                      l_url := page_rec.link_target;
                  else
                      l_url := apex_page.get_url(p_application => :APP_ID, p_page => page_rec.page_id);
                  end if;
      
                  if page_rec.rn - l_minus_if_reload < l_max_levels then
                      if page_rec.seq_id != l_max_seq_id or l_show_latest_page then
                          sys.htp.p(do_substitutions( p_string        => l_bc_rec.non_current_page_option,
                                                      p_name          => page_rec.link_label,
                                                      p_link          => l_url,
                                                      p_css_classes   => l_css_classes));
      
                          sys.htp.p(l_bc_rec.between_levels);
                      end if;    
                  end if;
              end loop;    
              
              l_url := owa_util.get_cgi_env('X_APEX_PATH') ;
      
              sys.htp.p(do_substitutions( p_string     => l_bc_rec.current_page_option,
                                          p_name       => l_title,
                                          p_link       => l_url,
                                          p_css_classes   => l_css_classes));                        
      
              sys.htp.p(l_bc_rec.after_last);
      
              apex_javascript.add_onload_code (p_code => l_javascript);
          end if; -- it is a Normal page
      
          return null;
      
      end render_from_collection;          
      --
      --
      function render (p_region              in apex_plugin.t_region,
                       p_plugin              in apex_plugin.t_plugin,
                       p_is_printer_friendly in boolean ) return apex_plugin.t_region_render_result is
      
          l_result            apex_plugin.t_region_render_result;
      
          l_additional_items  varchar2(32767) := p_region.ajax_items_to_submit;
          c_region_static_id  constant varchar2(255)  := apex_escape.html_attribute( p_region.static_id );
      
          l_nav_or_collection p_region.attribute_02%type := p_region.attribute_02;
      
      begin
      
          --debug
          if apex_application.g_debug then
              apex_plugin_util.debug_region (p_plugin => p_plugin,
                                             p_region => p_region 
              );
          end if;
      
          if l_nav_or_collection = 'NAV' then
              l_result := render_from_nav_menu(
                          p_region              => p_region,
                          p_plugin              => p_plugin,
                          p_is_printer_friendly => p_is_printer_friendly);
          elsif l_nav_or_collection = 'COLLECTION' then   
              l_result := render_from_collection(
                          p_region              => p_region,
                          p_plugin              => p_plugin,
                          p_is_printer_friendly => p_is_printer_friendly);          
          end if;                
      
      
          return l_result;
      
      end render;
      --
      --
      
      function ajax  (p_region in apex_plugin.t_region,
                      p_plugin in apex_plugin.t_plugin ) return apex_plugin.t_region_ajax_result is
      
          l_url               varchar2(4000) := apex_application.g_x01;
          l_title             varchar2(4000) := apex_application.g_x02;
      
          l_max_levels        p_region.attribute_01%type := p_region.attribute_01;
          l_nav_or_collection p_region.attribute_02%type := p_region.attribute_02;
          l_collection_name   p_region.attribute_03%type := p_region.attribute_03;
          l_no_add_pages      p_region.attribute_07%type := p_region.attribute_07;
      
          l_latest_url        varchar2(4000);
      
      begin
      
          --debug
          if apex_application.g_debug then
              apex_plugin_util.debug_region (p_plugin => p_plugin,
                                             p_region => p_region);
          end if;
      
          if  instr(',' || l_no_add_pages ||','  ,',' ||:APP_PAGE_ID ||',' )  = 0 then
      
              if not apex_collection.collection_exists(l_collection_name) then
                  apex_collection.create_collection(l_collection_name);
              end if;
                    
              begin      
                  select c001
                    into l_latest_url
                    from apex_collections ac
                    where ac.collection_name = l_collection_name
                      and ac.seq_id = (select max(ac2.seq_id) 
                                          from apex_collections ac2
                                          where ac2.collection_name = l_collection_name 
                                            and ac2.n001 = :APP_ID);
              exception when no_data_found then null;
              end;                            
      
              if l_url != l_latest_url or l_latest_url is null then                        
      
                  apex_collection.add_member(
                      p_collection_name => l_collection_name,
                      p_c001            => l_url,
                      p_c002            => l_title,
                      p_n001            => :APP_ID,
                      p_n002            => :APP_PAGE_ID);
              end if;
      
          end if;
      
          --sys.htp.p('{success: true}');
          apex_json.open_object;
          apex_json.write('success', true);
          --apex_json.write('x01', apex_application.g_x01);
          apex_json.close_object;
      
          return null;
      
      end ajax;   
      

  callbacks: 
    api-interface: Procedure
    render-procedure/function-name: render
    ajax-procedure/function-name: ajax

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 1.0
    help-text: |
      <p>This region plug-in is optimized for use on page 0 (the global page). Place this in the breadcrumb location with a template of "Title Bar."</p>
      <p>You may wish to only show the region on Normal (non-modal) pages and not on certain other pages. Consider using a Server Side Condition, type = "Function Body" with the following code:
      <pre>
      declare
      
      l_page_mode     varchar2(200);
      begin
        select page_mode 
          into l_page_mode
          from apex_application_pages
          where application_id = :APP_ID
            and page_id = :APP_PAGE_ID;
      
        return l_page_mode = 'Normal' and :APP_PAGE_ID not in (9999); -- 9999 is the login page
      end;
      </pre>
      </p>

  attribute-groups: 
  - # ====== Attribute Group: Rewind Options =====================
    id: 42316889430963035743
    identification: 
      name: Rewind Options
      sequence: 100

  - # ====== Attribute Group: History Options ====================
    id: 42332262494999282670
    identification: 
      name: History Options
      sequence: 50

  custom-attributes: 
  - # ====== Custom Attribute: Max Levels ========================
    id: 41541170923230846332
    identification: 
      attribute: 1
      name: Max Levels
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    default: 
      value: 5

    help: 
      help-text: |
        <p>Indicate the maximum levels to show.</p>
        <p><strong>Note:</strong> This region plug-in is optimized for use on page 0 (the global page). Place this in the breadcrumb location with a template of "Title Bar."</p>
        <p>You may wish to only show the region on Normal (non-modal) pages and not on certain other pages. Consider using a Server Side Condition, type = "Function Body" with the following code:
        <pre>
        declare
        
        l_page_mode     varchar2(200);
        begin
          select page_mode 
            into l_page_mode
            from apex_application_pages
            where application_id = :APP_ID
              and page_id = :APP_PAGE_ID;
        
          return l_page_mode = 'Normal' and :APP_PAGE_ID not in (9999); -- 9999 is the login page
        end;
        </pre>
        </p>

    entries: 
    - # ====== Entry: 1 ============================================
      id: 41541176927837847317
      entry: 
        sequence: 10
        display: 1
        return: 1

      advanced: 
        quick-pick: false

    - # ====== Entry: 3 ============================================
      id: 41541183400607848050
      entry: 
        sequence: 30
        display: 3
        return: 3

      advanced: 
        quick-pick: false

    - # ====== Entry: 4 ============================================
      id: 41541186250455848436
      entry: 
        sequence: 40
        display: 4
        return: 4

      advanced: 
        quick-pick: false

    - # ====== Entry: 5 ============================================
      id: 41541186890173848795
      entry: 
        sequence: 50
        display: 5
        return: 5

      advanced: 
        quick-pick: false

    - # ====== Entry: 8 ============================================
      id: 41541197457689850037
      entry: 
        sequence: 80
        display: 8
        return: 8

      advanced: 
        quick-pick: false

    - # ====== Entry: 15 ===========================================
      id: 41541211432158851546
      entry: 
        sequence: 110
        display: 15
        return: 15

      advanced: 
        quick-pick: false

    - # ====== Entry: 100 (really?) ================================
      id: 41541228915565854619
      entry: 
        sequence: 140
        display: 100 (really?)
        return: 100

      advanced: 
        quick-pick: false

    - # ====== Entry: 2 ============================================
      id: 41541675050034697900
      entry: 
        sequence: 20
        display: 2
        return: 2

      advanced: 
        quick-pick: false

    - # ====== Entry: 6 ============================================
      id: 41541686398571699342
      entry: 
        sequence: 60
        display: 6
        return: 6

      advanced: 
        quick-pick: false

    - # ====== Entry: 7 ============================================
      id: 41541687627876699788
      entry: 
        sequence: 70
        display: 7
        return: 7

      advanced: 
        quick-pick: false

    - # ====== Entry: 9 ============================================
      id: 41541689651846700611
      entry: 
        sequence: 90
        display: 9
        return: 9

      advanced: 
        quick-pick: false

    - # ====== Entry: 10 ===========================================
      id: 41541693188551701329
      entry: 
        sequence: 100
        display: 10
        return: 10

      advanced: 
        quick-pick: false

    - # ====== Entry: 20 ===========================================
      id: 41541706431708702276
      entry: 
        sequence: 120
        display: 20
        return: 20

      advanced: 
        quick-pick: false

    - # ====== Entry: 30 ===========================================
      id: 41541708505252702927
      entry: 
        sequence: 130
        display: 30
        return: 30

      advanced: 
        quick-pick: false

  - # ====== Custom Attribute: Breadcrumb Source =================
    id: 41542173783819863821
    identification: 
      attribute: 2
      name: Breadcrumb Source
      scope: Component

    layout: 
      sequence: 20

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: NAV

    help: 
      help-text: Indicate if the breadcrumb should be based upon the application navigation menu or the actual pages visited.

    entries: 
    - # ====== Entry: Application Navigation Menu ==================
      id: 41542966428024870455
      entry: 
        sequence: 10
        display: Application Navigation Menu
        return: NAV

      advanced: 
        quick-pick: false

      help: 
        help-text: The navigation menu defined in Application Definition > User Interface > Navigation Menu List

    - # ====== Entry: Page View History ============================
      id: 41543365731066877878
      entry: 
        sequence: 20
        display: Page View History
        return: COLLECTION

      advanced: 
        quick-pick: false

      help: 
        help-text: Pages viewed will be stored in the collection name defined below. This style will only render for Normal (non-modal) pages.

  - # ====== Custom Attribute: Collection Name ===================
    id: 41543838716891735040
    identification: 
      attribute: 3
      name: Collection Name
      scope: Component

    layout: 
      attribute-group: History Options # 42332262494999282670
      sequence: 30

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: INSUM_SUPER_BREADCRUMB

    condition: 
      depending-on-custom-attribute: Breadcrumb Source # 41542173783819863821
      depending-on-condition-type: equal to
      expression: COLLECTION
      always-evaluate: true

    help: 
      help-text: Enter the name of the collection to store page view history.

  - # ====== Custom Attribute: CSS Classes =======================
    id: 41549028907620804915
    identification: 
      attribute: 4
      name: CSS Classes
      scope: Component

    layout: 
      sequence: 15

    settings: 
      type: Text
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: 'Add additional CSS classes. This will replace #COMPONENT_CSS_CLASSES# in the breadcrumb template.'

  - # ====== Custom Attribute: Rewind Style ======================
    id: 41669884883608595227
    identification: 
      attribute: 5
      name: Rewind Style
      scope: Component

    layout: 
      attribute-group: Rewind Options # 42316889430963035743
      sequence: 50

    settings: 
      type: Select List
      lov-type: Static
      common: true
      show-in-wizard: true
      required: true
      translatable: false

    default: 
      value: PAGE_AND_TITLE

    condition: 
      depending-on-custom-attribute: Breadcrumb Source # 41542173783819863821
      depending-on-condition-type: equal to
      expression: COLLECTION
      always-evaluate: true

    help: 
      help-text: Indicate if and how the breadcrumb should rewind.

    entries: 
    - # ====== Entry: Matching Page ID and Title ===================
      id: 41670821226541750567
      entry: 
        sequence: 50
        display: Matching Page ID and Title
        return: PAGE_AND_TITLE

      advanced: 
        quick-pick: false

      help: 
        help-text: Rewind if the Page ID and title match anything in the tree.

    - # ====== Entry: Never Rewind =================================
      id: 41674491738613773995
      entry: 
        sequence: 5
        display: Never Rewind
        return: DO_NOT_REWIND

      advanced: 
        quick-pick: false

      help: 
        help-text: Do not rewind. This will show the most recent n pages viewed where n is the "Max Levels" setting above.

    - # ====== Entry: Matching Page ID =============================
      id: 41676038677757799629
      entry: 
        sequence: 20
        display: Matching Page ID
        return: PAGE

      advanced: 
        quick-pick: false

      help: 
        help-text: Rewind if the Page ID matches anything in the tree.

  - # ====== Custom Attribute: Do Not Rewind (Pages) =============
    id: 42026543573415429131
    identification: 
      attribute: 6
      name: Do Not Rewind (Pages)
      scope: Component

    layout: 
      attribute-group: Rewind Options # 42316889430963035743
      sequence: 60

    settings: 
      type: Page Numbers
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Rewind Style # 41669884883608595227
      depending-on-condition-type: not equal to
      expression: DO_NOT_REWIND
      always-evaluate: true

    help: 
      help-text: Enter a list of page IDs that will not rewind. For example, if you have a report and form, you may not want to rewind on the report.

  - # ====== Custom Attribute: Do Not Add Breadcrumb (Pages) =====
    id: 42316826239654027624
    identification: 
      attribute: 7
      name: Do Not Add Breadcrumb (Pages)
      scope: Component

    layout: 
      attribute-group: History Options # 42332262494999282670
      sequence: 37

    settings: 
      type: Page Numbers
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Rewind Style # 41669884883608595227
      depending-on-condition-type: not equal to
      expression: DO_NOT_REWIND
      always-evaluate: true

    help: 
      help-text: Enter a list of pages that should not have a breadcrumb entry created for them.

  - # ====== Custom Attribute: Do Not Include Params (Pages) =====
    id: 42320696945638219398
    identification: 
      attribute: 8
      name: Do Not Include Params (Pages)
      scope: Component

    layout: 
      attribute-group: History Options # 42332262494999282670
      sequence: 40

    settings: 
      type: Page Numbers
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    condition: 
      depending-on-custom-attribute: Breadcrumb Source # 41542173783819863821
      depending-on-condition-type: equal to
      expression: COLLECTION
      always-evaluate: true

    help: 
      help-text: Enter a comma separated list of page numbers. The breadcrumb for these pages will only include a link to the page, not any additional page parameters and not the REQUEST value.

- # ====== Plugin: APEX Percent Bargraphs ======================
  id: 79549877507330277926
  identification: 
    name: APEX Percent Bargraphs
    internal-name: APEX.PERECENT.BARGRAPHS
    type: Region

  advanced: 
    quick-pick: false

  source: 
    pl/sql-code: |
      FUNCTION F_AJAX (
          P_REGION   IN         APEX_PLUGIN.T_REGION,
          P_PLUGIN   IN         APEX_PLUGIN.T_PLUGIN
      ) RETURN APEX_PLUGIN.T_REGION_AJAX_RESULT IS
          VR_RESULT   APEX_PLUGIN.T_REGION_AJAX_RESULT;
      BEGIN
          APEX_UTIL.JSON_FROM_SQL(SQLQ   => RTRIM(
              P_REGION.SOURCE,
              ';'
          ));
          RETURN VR_RESULT;
      END;
      
      FUNCTION F_RENDER (
          P_REGION                IN                      APEX_PLUGIN.T_REGION,
          P_PLUGIN                IN                      APEX_PLUGIN.T_PLUGIN,
          P_IS_PRINTER_FRIENDLY   IN                      BOOLEAN
      ) RETURN APEX_PLUGIN.T_REGION_RENDER_RESULT IS
      
          VR_RESULT         APEX_PLUGIN.T_REGION_RENDER_RESULT;
          VR_ITEMS2SUBMIT   APEX_APPLICATION_PAGE_REGIONS.AJAX_ITEMS_TO_SUBMIT%TYPE := APEX_PLUGIN_UTIL.PAGE_ITEM_NAMES_TO_JQUERY(P_REGION.AJAX_ITEMS_TO_SUBMIT);
      BEGIN
          APEX_CSS.ADD_FILE(
              P_NAME        => 'style.min',
              P_DIRECTORY   => P_PLUGIN.FILE_PREFIX,
              P_VERSION     => NULL,
              P_KEY         => 'pergrcsssrc'
          );
      
          APEX_JAVASCRIPT.ADD_LIBRARY(
              P_NAME        => 'script.min',
              P_DIRECTORY   => P_PLUGIN.FILE_PREFIX,
              P_VERSION     => NULL,
              P_KEY         => 'pergrjssrc'
          );
      
          HTP.P('<div id="' || APEX_ESCAPE.HTML_ATTRIBUTE( P_REGION.STATIC_ID ) || '-p"></div>');
      
          APEX_JAVASCRIPT.ADD_ONLOAD_CODE( 'apexSkillBar.render('
           || APEX_JAVASCRIPT.ADD_VALUE( P_REGION.STATIC_ID, TRUE )    
           || APEX_JAVASCRIPT.ADD_VALUE( APEX_PLUGIN.GET_AJAX_IDENTIFIER, TRUE )
           || APEX_JAVASCRIPT.ADD_VALUE( P_REGION.NO_DATA_FOUND_MESSAGE, TRUE )
           || APEX_JAVASCRIPT.ADD_VALUE( VR_ITEMS2SUBMIT, TRUE )
           || APEX_JAVASCRIPT.ADD_VALUE( P_REGION.ESCAPE_OUTPUT, TRUE )
           || APEX_JAVASCRIPT.ADD_VALUE( P_REGION.ATTRIBUTE_01, FALSE )
           || ');' );
      
          RETURN VR_RESULT;
      END;

  callbacks: 
    api-interface: Function
    render-procedure/function-name: F_RENDER
    ajax-procedure/function-name: F_AJAX

  standard-attributes: 
    attributes: 
    - Region Source is SQL Statement [Deprecated]
    - Has "Page Items to Submit" Attribute
    - Has "No Data Found Message" Attribute
    - Has "Escape Special Characters" Region Attribute

  custom-attributes: 
    substitute-attribute-values: true

  information: 
    version: 1.0.3
    about-url: 'https://github.com/RonnyWeiss/APEX-Percent-Bargraphs'
    help-text: This plug-in is used to visualize percent bargraphs in APEX.

  standard-attributes: 
  - # ====== Standard Attribute: SOURCE_SQL ======================
    id: 24665192568175344981
    identification: 
      name: SOURCE_SQL

    value: 
      required: true

    settings: 
      minimum-columns: 1

    default: 
      value: |
        SELECT
            /* Required: Title that is show on skill bar */
            DECODE( ROWNUM, 1, 'ORACLE APEX', 2, 'HTML5', 3, 'CSS3', 4, 'JavaScript', NULL ) AS TITLE,
            /* Required: Percentage value as integer between 0 and 100 */
            ROUND( DBMS_RANDOM.VALUE( 30, 100 ) ) AS VALUE,
            /* Optional: background color of the title */
            DECODE( ROWNUM, 1, '#0572CE', 2, 'rgb(233,98,41)', 3, 'rgb(38,143,201)', 4, 'rgb(239,216,29)', NULL ) AS TITLE_COLOR,
            /* Optional: background color of the bar value */
            NULL AS BAR_COLOR
        FROM
            DUAL
        CONNECT BY ROWNUM <= 4

    help: 
      help-text: |
        <pre>
        SELECT
            /* Required: Title that is show on skill bar */
            DECODE( ROWNUM, 1, 'ORACLE APEX', 2, 'HTML5', 3, 'CSS3', 4, 'JavaScript', NULL ) AS TITLE,
            /* Required: Percentage value as integer between 0 and 100 */
            ROUND( DBMS_RANDOM.VALUE( 30, 100 ) ) AS VALUE,
            /* Optional: background color of the title */
            DECODE( ROWNUM, 1, '#0572CE', 2, 'rgb(233,98,41)', 3, 'rgb(38,143,201)', 4, 'rgb(239,216,29)', NULL ) AS TITLE_COLOR,
            /* Optional: background color of the bar value */
            NULL AS BAR_COLOR
        FROM
            DUAL
        CONNECT BY ROWNUM <= 4
        </pre>

  custom-attributes: 
  - # ====== Custom Attribute: Refresh Time (Seconds) ============
    id: 79570622012171091299
    identification: 
      attribute: 1
      name: Refresh Time (Seconds)
      scope: Component

    layout: 
      sequence: 10

    settings: 
      type: Integer
      common: true
      show-in-wizard: true
      required: false
      translatable: false

    help: 
      help-text: Set the refresh time of the region in seconds.

  files: 
  - # ====== File: script.min.js =================================
    id: 52120953268043853764
    identification: 
      file-name: script.min.js

    attributes: 
      mime-type: text/javascript
      file-character-set: Unicode UTF-8

  - # ====== File: style.min.css =================================
    id: 52120954854198854787
    identification: 
      file-name: style.min.css

    attributes: 
      mime-type: text/css
      file-character-set: Unicode UTF-8

  - # ====== File: LICENSE =======================================
    id: 56485021082532328627
    identification: 
      file-name: LICENSE

    attributes: 
      mime-type: application/octet-stream
      file-character-set: Unicode UTF-8

  - # ====== File: LICENSE4LIBS ==================================
    id: 56485021446650328629
    identification: 
      file-name: LICENSE4LIBS

    attributes: 
      mime-type: application/octet-stream
      file-character-set: Unicode UTF-8

